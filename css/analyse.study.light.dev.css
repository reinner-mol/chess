@charset "UTF-8";
/* Colors */
/* even rows in list or tables, subtle shade of $c-bg-high */
/* Primary: blue */
/* text over primary background */
/* Secondary: green */
/* text over secondary background */
/* Accent: orange */
/* text over accent background */
/* Brag: gold */
/* text over brag background */
/* Error: red */
/* text over brag background */
/* Good: green */
/* Warn: orange */
/* Bad: red */
/* Fancy: pink */
/* text over brag background */
/* Borders */
/* Shadows */
/* Common imports for all CSS modules */
/* Widths */
/* Heights */
/* Orientations */
/* Capabilities */
/* Aliases */
/* Uniboard: keep the same page layout across pages */
/* when the width is appropriate for col1, but landscape prevents it */
/* atm only chrome supports min-content, max-content */
.piece-letter .tview2 move, .tview2 .piece-letter move, .piece-letter .pv_box .pv span, .pv_box .pv .piece-letter span, .piece-letter .explorer-box .moves td:first-child, .explorer-box .moves .piece-letter td:first-child, .piece-letter .explorer-box .tablebase td:first-child, .explorer-box .tablebase .piece-letter td:first-child, .piece-letter .analyse__fork move, .analyse__fork .piece-letter move, .piece-letter #analyse-cm .title, #analyse-cm .piece-letter .title, .tview2 glyph, .analyse__fork glyph {
  font-family: 'Noto Sans', Sans-Serif;
}

.tview2 move draw, .pv_box .pv span draw, .explorer-box .moves td:first-child draw, .explorer-box .tablebase td:first-child draw, .analyse__fork move draw, #analyse-cm .title draw, .tview2 eval, .tview2 comment .by, .ceval .engine .cloud, .tabs-horiz span, .slist thead, .mchat__tab, .mchat__messages a:not(.user-link), .analyse__fork eval, .study__members .add, .study__player .analyse__clock, .study__topics {
  font-family: 'Roboto', Sans-Serif;
}

.tview2 move, .pv_box .pv span, .explorer-box .moves td:first-child, .explorer-box .tablebase td:first-child, .analyse__fork move, #analyse-cm .title {
  font-family: 'Noto Chess', 'Noto Sans';
}

.tview2 move draw, .pv_box .pv span draw, .explorer-box .moves td:first-child draw, .explorer-box .tablebase td:first-child draw, .analyse__fork move draw, #analyse-cm .title draw {
  margin-left: 1ch;
  font-weight: normal;
}

/* text printed directly on the page background deserves special treatment (transp theme) */
.tabs-horiz, .chat__members, .analyse__controls .fbt, .study__buttons .mode {
  color: #5e5e5e;
}

.crosstable__users, .crosstable__score, .crosstable povs:hover, .cmn-toggle + label::after, .slist thead, #analyse-cm .title, .study__player, .study__metadata h2 {
  background: linear-gradient(to bottom, whitesmoke 0%, #ededed 100%);
  text-shadow: 0 1px 0 white;
}

.cmn-toggle:hover:not(:disabled) + label::after {
  background: linear-gradient(to bottom, #fafafa 0%, #f2f2f2 100%);
  text-shadow: 0 1px 0 white;
}

.ceval {
  background: linear-gradient(to bottom, whitesmoke 0%, #ededed 100%);
}

.pocket piece::after {
  box-shadow: 0 3px 4px rgba(0, 0, 0, 0.15) inset;
}

.pocket piece::after {
  background: #d64f00;
  color: #fff;
  text-shadow: 0 1px 1px black !important;
}

#modal-wrap, .pv_box .pv-board, .variant-racingKings .cg-wrap.cg-wrap cg-container::before, #analyse-cm, .study-desc .contrib {
  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
}

.fbt {
  background: none;
  border: none;
  outline: none;
  color: #4d4d4d;
}

.mchat__tab input {
  -webkit-appearance: none;
  background: #edebe9;
  border: 1px solid #e3e3e3;
  display: inline-block;
  padding: 0.5em;
}

.mchat__tab input:checked {
  background: #a1c27c;
  border-color: #7daa49;
}

.cmn-toggle:focus:not(:disabled) + label, .cmn-toggle:hover:not(:disabled) + label {
  box-shadow: 0 0 12px #787878;
}

.tview2 move, .ceval help,
.ceval .engine, .context-streamer, .mchat__tab {
  white-space: nowrap;
  overflow: hidden;
}

.tview2 comment .by, .pv_box .pv.pv--nowrap, .mchat__tab span {
  white-space: nowrap;
}

.tview2-column > interrupt > comment, .mchat__messages, .study__chapters h3, .study__comment .text {
  overflow-wrap: break-word;
  word-break: break-word;
}

.tview2 comment .by, .pv_box .pv.pv--nowrap, .mchat__tab span, .crosstable__users, .explorer-box .games td span, .study__members .user-link, .study__invite .users .button, .study__metadata h2 .name {
  overflow: hidden;
  text-overflow: ellipsis;
}

.pv_box .pv-board .pv-board-square, .pocket-c2, .board-editor .spare .no-square div {
  position: relative;
  display: block;
  height: 0;
  padding-bottom: 100%;
  width: 100%;
}

.study-desc .embed {
  position: relative;
  display: block;
  height: 0;
  padding-bottom: 56.25%;
  /* 16/9 */
  width: 100%;
}

.study-desc .embed > * {
  border: none;
}

.cmn-toggle + label::before, .tview2 shapes::before, .flash__content::before, .flash-warning .flash__content::before, .flash-failure .flash__content::before {
  font-size: 1.2em;
  vertical-align: middle;
  font-family: 'lichess';
  font-style: normal;
  font-weight: normal;
  text-transform: none;
  speak: none;
  content: attr(data-icon);
  opacity: 0.9;
}

#modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background: rgba(0, 0, 0, 0.6);
  z-index: 109;
}

.explorer-box .overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 2;
}

.study-desc .embed > *, .pv_box .pv-board .pv-board-square .cg-wrap, #promotion-choice {
  position: absolute;
  width: 100%;
  height: 100%;
}

.cmn-toggle, .analyse-controls {
  touch-action: manipulation;
}

.tview2-column {
  display: flex;
  flex-flow: row wrap;
}

#modal-overlay, .ceval .switch, .analyse__fork, .analyse__fork move, .study__chapters .act, .study__members .act, .study__chapters ongoing, .study__chapters > div > span, .study__chapters > div res, .study__members .status, .study__members m-config .role, .study__topics, .study__glyphs, .study__glyphs a::before, .study__multiboard .pager, .study__multiboard .now-playing .name {
  /* extends %flex-wrap */
  display: flex;
  flex-flow: row wrap;
  align-items: center;
}

.tabs-horiz, .context-streamer, .chat__members__number, #analyse-cm a, .study__members .left, .study__player .analyse__clock, .study__buttons .mode, .study__invite .info, .study__glyphs a {
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
}

.form-split, .form-actions, .study__members m-config, .board-editor__tools .metadata .castling div, .study__buttons, .study__invite .users, .study-desc-form .title, .study__multiboard .top {
  /* extends %flex-center */
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  justify-content: space-between;
}

.study__chapters > div, .study__members > div, .study__player, .study__metadata h2, .study__multiboard .now-playing .player {
  /* extends %flex-center */
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  justify-content: space-between;
}

.study__share .downloads {
  /* extends %flex-center */
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  justify-content: space-around;
}

#modal-wrap, .continue-with, .crosstable povs, .crosstable__users, .crosstable__score, .crosstable__matchup, .form-check, .mchat, .mchat__content, .analyse__tools, .action-menu__tools > *, .training-box, .advice-summary, .board-editor__tools, .board-editor__tools .actions {
  display: flex;
  flex-flow: column;
}

.mchat__tab input, .crosstable, .mchat, .analyse__tools, .study__chapters, .study__members, .board-editor__tools .metadata, .study-desc, .study__metadata, .study__comment, .study__glyphs, .study__share, .study__multiboard, .study__server-eval, .study__message, #modal-wrap, .tview2-inline move.active, .tview2-inline move:hover, .ceval .engine .cloud, .flash__content, .pocket, .pocket piece::after, #analyse-cm, .board-editor .spare, .study__invite .info, .study__topics .topic, .study__multiboard .fbt, .study__multiboard .now-playing a {
  border-radius: 3px;
}

.crosstable, .mchat, .analyse__tools {
  overflow: hidden;
  /* helps with clipping background into border-radius */
}

.crosstable .sep, .pocket.usable piece:first-child:hover, .explorer-box .bar span:first-child, .explorer-box .config .choices span:first-child, .board-editor .spare .no-square.pointer {
  border-radius: 3px 0 0 3px;
}

.explorer-box .bar span:last-child, .explorer-box .config .choices span:last-child, .board-editor .spare .no-square.trash {
  border-radius: 0 3px 3px 0;
}

.mchat__tab, .study__player-top, .study__buttons .mode {
  border-radius: 3px 3px 0 0;
}

.analyse-controls .fbt, .context-streamer, .study__player-bot {
  border-radius: 0 0 3px 3px;
}

.study__chapters, .study__members, .board-editor__tools .metadata, .study-desc, .study__metadata, .study__comment, .study__glyphs, .study__share, .study__multiboard, .study__server-eval, .study__message, .crosstable, .mchat, .analyse__tools, #modal-wrap .close:hover, .context-streamer, .study__player, .study__comments #comment-text {
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
}

coords {
  /* handle hidden coords */
  /* handle inner coords */
  position: absolute;
  display: flex;
  pointer-events: none;
  user-select: none;
  color: #fff;
  text-shadow: 0 1px 2px #000;
  font-weight: bold;
  /* negate inner coords colors */
}

.coords-no coords {
  display: none;
}

coords {
  font-size: 8px;
}

@media (min-width: 320px) {
  coords {
    font-size: calc( 8px + 4 * ((100vw - 320px) / 880));
  }
}

@media (min-width: 1200px) {
  coords {
    font-size: 12px;
  }
}

coords.ranks {
  flex-flow: column-reverse;
  top: 1px;
  right: 0;
  height: 100%;
  width: 0.8em;
}

coords.ranks.black {
  flex-flow: column;
}

coords.files {
  bottom: 0px;
  left: 0;
  text-align: left;
  flex-flow: row;
  width: 100%;
  height: 1.4em;
}

coords.files.black {
  flex-flow: row-reverse;
}

coords.files coord {
  padding-left: 4px;
}

coords coord {
  flex: 1 1 auto;
}

coords .is3d .cg-wrap coords coord {
  color: #fff !important;
  text-shadow: 0 1px 2px #000 !important;
}

coords .is3d .cg-wrap coords.files {
  bottom: calc(1px - 2.5%);
}

coords .is3d .cg-wrap coords.files coord {
  padding-left: 3px;
}

:root {
  --cg-coord-color-white: #fff;
  --cg-coord-color-black: #fff;
  --cg-coord-shadow: 0 1px 2px #000;
}

coords {
  text-shadow: var(--cg-coord-shadow);
}

.orientation-white .files coord:nth-child(2n + 1),
.orientation-white .ranks coord:nth-child(2n),
.orientation-black .files coord:nth-child(2n),
.orientation-black .ranks coord:nth-child(2n + 1) {
  color: var(--cg-coord-color-white);
}

.orientation-white .files coord:nth-child(2n),
.orientation-white .ranks coord:nth-child(2n + 1),
.orientation-black .files coord:nth-child(2n + 1),
.orientation-black .ranks coord:nth-child(2n) {
  color: var(--cg-coord-color-black);
}

/* handle outer coords */
@media (min-width: 800px), (orientation: landscape) {
  .coords-out coords {
    text-shadow: none;
  }
  .coords-out coords.ranks {
    right: -15px;
    top: 0;
    width: 12px;
  }
  .coords-out coords.ranks coord {
    transform: translateY(42%);
  }
  .coords-out coords.files {
    bottom: -15px;
    left: 0;
    text-align: center;
  }
  .coords-out coords coord {
    color: #5e5e5e !important;
  }
}

body {
  --board-scale: 1;
}

@media (min-width: 800px) and (min-height: 500px) {
  body {
    --board-scale: calc((var(--zoom) / 100) * 0.7 + 0.3);
  }
}

@media (max-width: 799px) and (orientation: portrait) {
  body {
    --col1: 1;
  }
  .main-board cg-board {
    border-radius: 0;
  }
}

body ::-webkit-scrollbar,
body ::-webkit-scrollbar-corner {
  width: 0.5rem;
  background: white;
}

body ::-webkit-scrollbar-thumb {
  background: #dbdbdb;
}

body ::-webkit-scrollbar-thumb:hover,
body ::-webkit-scrollbar-thumb:active {
  background: #b3b3b3;
}

body.resizing {
  user-select: none;
}

cg-resize {
  display: none;
}

@media (min-width: 800px) {
  cg-resize {
    display: block;
    position: absolute;
    right: -9px;
    bottom: -9px;
    width: 22px;
    height: 22px;
    cursor: nwse-resize;
  }
  cg-resize::before, cg-resize::after {
    background: #000;
    content: '';
    position: absolute;
    width: 12px;
    height: 1px;
  }
  cg-resize::before {
    width: 5px;
    transform: translate(7px, 8px) rotate(-45deg);
  }
  cg-resize::after {
    transform: translate(1px, 6px) rotate(-45deg);
  }
  cg-resize:hover {
    border-radius: 50%;
    background: rgba(214, 79, 0, 0.5);
  }
  .resizing cg-resize {
    border-radius: 50%;
    background: rgba(98, 153, 36, 0.5);
  }
}

#modal-overlay {
  justify-content: center;
}

#modal-wrap {
  background: white;
  position: relative;
  padding: 2rem;
  text-align: center;
  max-width: 100vw;
  max-height: 96vh;
}

#modal-wrap > div {
  overflow: hidden;
  overflow-y: auto;
}

#modal-wrap .close {
  color: #4d4d4d;
  position: absolute;
  font-size: 16px;
  line-height: 27px;
  width: 32px;
  height: 32px;
  cursor: pointer;
  top: 0;
  right: 0;
  background: none;
}

@media (min-width: 800px) {
  #modal-wrap .close {
    top: -12px;
    right: -12px;
    background: white;
    border-radius: 50%;
  }
}

#modal-wrap .close:hover {
  background: #cc3333;
  color: #fff;
}

.continue-with > *:not(:first-child) {
  margin-top: 1em;
}

.color-icon.white::before {
  content: 'K';
}

.color-icon.black::before {
  content: 'J';
}

.color-icon.random::before {
  content: 'l';
}

.crosstable__users {
  flex: 1 1 auto;
}

.crosstable {
  width: 100%;
  line-height: 1.9em;
  display: flex;
}

.crosstable fill,
.crosstable povs {
  background: white;
  flex: 1 1 auto;
}

.crosstable povs, .crosstable__users, .crosstable__score, .crosstable__matchup {
  text-align: center;
}

.crosstable__users {
  max-width: 40vw;
  text-align: left;
}

.crosstable__users a {
  padding-left: 2vmin;
}

.crosstable__score {
  flex: 0 0 auto;
  font-weight: bold;
}

.crosstable__score span {
  padding: 0 2vmin;
}

.crosstable__matchup {
  flex: 1 1 auto;
  font-weight: bold;
  background: #d1e4f6;
}

.crosstable povs a {
  color: #787878;
  flex: 0 0 50%;
}

.crosstable povs:hover a {
  opacity: 1 !important;
}

.crosstable povs a.loss {
  opacity: 0.2;
}

.crosstable povs.current a {
  background: #e2834d;
  color: #fff;
  opacity: 1 !important;
}

.crosstable povs.new {
  border: #d9d9d9;
}

.crosstable povs a.loss {
  opacity: 0.2;
}

@media (max-width: 649px) {
  .crosstable povs {
    display: none;
  }
  .crosstable povs:nth-last-child(-n + 12) {
    display: flex;
  }
}

.crosstable .sep {
  border-left: 1px solid #d9d9d9;
  margin-left: 0.3em;
}

.crosstable .win {
  font-weight: bold;
  color: #629924;
}

.crosstable .loss {
  color: #cc3333;
}

.crosstable .unavailable {
  margin-top: 40px;
  opacity: 0.7;
}

.fbt {
  text-transform: uppercase;
  line-height: 1.5;
  transition: all 150ms;
}

@media (hover: hover) {
  .fbt:hover:not(.disabled):not([disabled]) {
    background: #89b25b;
    color: #fff;
  }
}

.fbt.active {
  background: #629924 !important;
  color: #fff;
}

.fbt.disabled, .fbt[disabled] {
  opacity: 0.5;
  cursor: default;
}

.cmn-toggle {
  position: absolute;
  margin-left: -99999px;
}

.cmn-toggle + label {
  display: block;
  position: relative;
  cursor: pointer;
  outline: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  padding: 1px;
  width: 40px;
  height: 24px;
  border: 1px solid #d9d9d9;
  border-radius: 24px;
}

.cmn-toggle + label::before, .cmn-toggle + label::after {
  display: block;
  position: absolute;
  content: '';
  width: 22px;
  height: 22px;
  bottom: 0.1px;
  left: 0;
}

.cmn-toggle + label::before {
  font-size: 1em;
  z-index: 1;
  text-align: center;
  line-height: 22px;
}

.cmn-toggle + label::after {
  border-radius: 100%;
  box-shadow: 0 1px 2.5px rgba(0, 0, 0, 0.3);
}

.cmn-toggle:not(:checked) + label {
  background-color: #cc3333;
}

.cmn-toggle--subtle:not(:checked) + label {
  background-color: #b3b3b3;
}

.cmn-toggle:checked + label {
  background-color: #629924;
}

.cmn-toggle:disabled + label {
  opacity: 60%;
  cursor: not-allowed !important;
}

.cmn-toggle:hover:not(:disabled) + label {
  transition: background 150ms;
}

.cmn-toggle:hover:not(:disabled) + label::before {
  transition: margin 150ms, color 150ms;
}

.cmn-toggle:hover:not(:disabled) + label::after {
  transition: margin 150ms;
}

.cmn-toggle:not(:checked) + label::before {
  content: 'L';
  color: #cc3333;
}

.cmn-toggle--subtle:not(:checked) + label::before {
  color: #b3b3b3;
}

.cmn-toggle:checked + label::before, .cmn-toggle:checked + label::after {
  margin-left: 16px;
}

.cmn-toggle:checked + label::before {
  content: 'E';
  color: #629924;
}

input.range {
  -webkit-appearance: none;
  background: none;
  border: 0;
}

input.range:focus {
  outline: none;
}

input.range::-webkit-slider-runnable-track {
  width: 100%;
  height: 1em;
  cursor: pointer;
  background: #dbdbdb;
  border-radius: 0.5em;
}

input.range::-webkit-slider-thumb {
  background: linear-gradient(to bottom, whitesmoke 0%, #ededed 100%);
  text-shadow: 0 1px 0 white;
  border: 1px solid #b3b3b3;
  height: 1em;
  width: 1.5em;
  border-radius: 12px;
  background: white;
  cursor: pointer;
  -webkit-appearance: none;
  margin-top: -0.3px;
}

input.range::-moz-range-track {
  width: 100%;
  height: 1em;
  cursor: pointer;
  background: #dbdbdb;
  border-radius: 0.5em;
}

input.range::-moz-range-thumb {
  background: linear-gradient(to bottom, whitesmoke 0%, #ededed 100%);
  text-shadow: 0 1px 0 white;
  border: 1px solid #b3b3b3;
  height: 1em;
  width: 1.5em;
  border-radius: 12px;
  background: white;
  cursor: pointer;
}

input.range::-ms-track {
  width: 100%;
  height: 1em;
  cursor: pointer;
  background: #dbdbdb;
  border-radius: 0.5em;
}

input.range::-ms-fill-lower {
  background: rgba(191, 191, 191, 0.78);
  border-radius: 11.8px;
}

input.range::-ms-fill-upper {
  background: rgba(214, 214, 214, 0.78);
  border-radius: 11.8px;
}

input.range::-ms-thumb {
  background: linear-gradient(to bottom, whitesmoke 0%, #ededed 100%);
  text-shadow: 0 1px 0 white;
  border: 1px solid #b3b3b3;
  height: 1em;
  width: 1.5em;
  border-radius: 12px;
  background: white;
  cursor: pointer;
  border-color: transparent;
  color: transparent;
}

.tview2 move {
  display: inline-block;
  cursor: pointer;
}

.tview2 {
  white-space: normal;
}

.tview2-inline {
  padding: 7px 3px 7px 7px;
}

.tview2 move.inaccuracy {
  color: #56b4e9;
}

.tview2 move.mistake {
  color: #e69f00;
}

.tview2 move.blunder {
  color: #df5353;
}

.tview2-column move {
  font-size: 1.092em;
  padding: 0 2px;
}

.tview2-inline move {
  padding: 0.25em 0.17em;
  white-space: nowrap;
  font-weight: bold;
}

.tview2 move.parent {
  color: #1b78d0;
}

.tview2 comment a {
  vertical-align: top;
}

.tview2 move.current {
  border: 1px solid #d64f00;
}

.tview2 move.active {
  font-weight: bold;
  background: #d1e4f6;
}

.tview2 move.nongame {
  font-style: italic;
}

.tview2 move:not(.empty):hover,
.tview2 move:not(.empty):hover index,
.tview2 move:not(.empty):hover eval {
  background: #1b78d0;
  color: #fff;
}

.tview2 move.empty {
  color: #b3b3b3;
  cursor: default;
}

.tview2 move index {
  font-size: 90%;
  color: #787878;
}

.tview2 move.context-menu {
  background: #d64f00;
  color: #fff;
}

.tview2 move.context-menu index {
  color: #fff;
}

.tview2-column move index {
  padding-left: 5px;
}

.tview2-column move index:first-child {
  padding-left: 0;
}

.tview2-inline move index {
  padding-right: 0.2em;
  line-height: 111.11%;
}

.tview2 line move {
  color: #4d4d4d;
}

.tview2-column > move {
  flex: 0 0 43.5%;
  display: flex;
  font-size: 1.185em;
  line-height: 1.75em;
  padding: 0 0.3em 0 0.5em;
}

.tview2-column > index + move {
  border-right: #d9d9d9;
}

.tview2 eval {
  flex: 3 0 auto;
  text-align: right;
  font-size: 0.8em;
  color: #787878;
}

.tview2 glyph {
  margin-left: 0.08em;
  vertical-align: bottom;
}

.tview2 shapes {
  font-size: 0.7em;
  margin-left: 0.4em;
  text-align: right;
  color: #629924;
}

.tview2 shapes::before {
  content: 'K';
}

.tview2-column > move glyph {
  flex: 0 1 auto;
  text-align: center;
  overflow: hidden;
  font-size: 0.82em;
}

.tview2-column > index {
  flex: 0 0 13%;
  display: flex;
  justify-content: center;
  border-right: 1px solid #d9d9d9;
  background: #f7f6f5;
  line-height: 2.07em;
  color: #b3b3b3;
}

.tview2 > interrupt {
  font-size: 95%;
}

.tview2-column > interrupt {
  flex: 0 0 100%;
  background: #f7f6f5;
  border-top: 1px solid #d9d9d9;
  border-bottom: 1px solid #d9d9d9;
  max-width: 100%;
}

.tview2-column > interrupt > comment {
  display: block;
  padding: 3px 5px;
}

.tview2-inline comment {
  vertical-align: 45%;
  word-wrap: break-word;
  margin: 0 0.2em 0 0.1em;
  font-size: 0.9em;
}

.tview2 comment .by {
  display: inline-block;
  vertical-align: -0.3em;
  font-size: 0.9em;
  opacity: 0.8;
  margin-right: 0.4em;
  max-width: 9em;
}

.tview2-column comment.white {
  border-left: 3px solid;
}

.tview2-column comment.black {
  border-right: 3px solid;
  overflow-x: hidden;
}

.tview2-column comment.inaccuracy {
  border-color: #56b4e9;
}

.tview2-column comment.mistake {
  border-color: #e69f00;
}

.tview2-column comment.blunder {
  border-color: #df5353;
}

.tview2-column comment.undefined {
  border-color: #66558c;
}

.tview2 line comment {
  font-size: 90%;
}

.tview2-column line comment {
  display: inline;
  color: #787878;
  word-wrap: break-word;
  padding: 0 5px 0 3px;
  vertical-align: top;
}

.tview2 line comment .by {
  font-size: 1em;
  vertical-align: top;
}

.tview2 lines {
  display: block;
  margin-top: 2px;
  margin-left: 6px;
  margin-bottom: 0.8em;
  border-left: 2px solid #d9d9d9;
}

.tview2 > interrupt > lines {
  margin-left: 0px;
}

.tview2 lines.single {
  border-left: none;
}

.tview2 lines:last-child {
  margin-bottom: 0;
}

.tview2 line {
  display: block;
  padding-left: 7px;
}

.tview2-column line {
  margin: 2px 0;
}

.tview2 lines lines move {
  font-size: 13px;
}

.tview2 lines lines {
  margin-left: 1px;
}

.tview2 lines lines::before {
  content: ' ';
  border-top: 2px solid #d9d9d9;
  position: absolute;
  margin-left: -11px;
  width: 9px;
  height: 6px;
}

.tview2 lines line::before {
  margin-top: 0.65em;
  margin-left: -8px;
  content: ' ';
  border-top: 2px solid #d9d9d9;
  position: absolute;
  width: 8px;
  height: 6px;
}

.tview2 lines lines:last-child {
  margin-bottom: 0;
}

.tview2 inline {
  display: inline;
  font-style: italic;
  font-size: 0.9em;
  opacity: 0.8;
}

.tview2 inline::before,
.tview2 inline::after {
  vertical-align: 0.4em;
  opacity: 0.7;
  font-size: 0.9em;
}

.tview2 inline::before {
  content: '(';
  margin-left: 2px;
}

.tview2 inline::after {
  content: ')';
  margin-right: 2px;
}

.tview2-inline inline::before,
.tview2-inline inline::after {
  vertical-align: 0.7em;
}

.tview2 .conceal {
  opacity: 0.4;
}

.tview2 .hide {
  display: none;
}

.ceval {
  position: relative;
  display: flex;
  align-items: stretch;
}

.ceval.enabled {
  padding-top: 2px;
  height: 40px;
}

.ceval.enabled .show-threat {
  visibility: visible;
}

.ceval .switch {
  flex: 0 0 40px;
  margin-right: 8px;
}

.ceval pearl {
  flex: 0 0 75px;
  line-height: 38px;
  font-size: 1.6em;
  text-align: center;
  font-weight: bold;
}

.ceval help,
.ceval .engine {
  flex: 1 1 auto;
  font-size: 12px;
  line-height: 16px;
  margin-top: 3px;
  color: #787878;
}

.ceval .engine .cloud {
  margin-left: 4px;
  background: #7daa49;
  color: #fff;
  padding: 1px 3px;
  text-transform: uppercase;
  font-size: 11px;
}

.ceval .engine .info {
  display: block;
  white-space: nowrap;
}

.ceval .engine .deeper {
  color: #1b78d0;
  margin-left: 4px;
}

.ceval .engine .deeper::before {
  vertical-align: -2px;
}

.ceval .technology {
  margin-left: 5px;
}

.ceval .technology.good {
  color: #629924;
}

.ceval .bar {
  position: absolute;
  width: 100%;
  height: 3px;
  top: 0px;
}

@keyframes bar-anim {
  from {
    background-position: 0 0;
  }
  to {
    background-position: 100000px 0;
  }
}

.ceval .bar span {
  display: block;
  height: 3px;
  width: 0;
  background: #629924;
  transition: width 1s;
}

.ceval .bar span.threat {
  background: #cc3333;
}

.ceval.computing .bar span {
  background-image: url("../images/bar-highlight.png");
  animation: bar-anim 1000s linear infinite;
}

.ceval .show-threat {
  flex: 0 99 auto;
  line-height: 38px;
  color: #787878;
  font-size: 0.9em;
  padding-right: 0.5em;
  overflow: hidden;
  visibility: hidden;
}

.ceval .show-threat:hover:not(.hidden), .ceval .show-threat.active {
  color: #cc3333;
}

.ceval .show-threat.hidden {
  opacity: 0.3;
  cursor: default;
}

.pv_box {
  position: relative;
  background: white;
  font-size: 13px;
}

.pv_box .pv {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  line-height: 2em;
  border-top: 1px solid #d9d9d9;
  padding-right: 14px;
}

.pv_box .pv.pv--nowrap {
  display: block;
  flex-wrap: initial;
  height: 2em;
}

.pv_box .pv[data-uci]:hover {
  background: #e0ebd3;
  cursor: pointer;
}

.pv_box .pv strong {
  display: inline-block;
  width: 34px;
  text-align: center;
}

.pv_box .pv span {
  margin-left: 4px;
}

.pv_box .pv[data-uci] .pv-san:hover {
  color: #1b78d0;
}

.pv_box .pv .pv-wrap-toggle {
  position: absolute;
  right: 0;
  padding: 0 4px;
  margin: 0;
  cursor: pointer;
  top: 2px;
}

.pv_box .pv .pv-wrap-toggle:hover {
  background: #629924;
  color: #fff;
}

.pv_box .pv .pv-wrap-toggle::before {
  content: '⯅';
}

.pv_box .pv.pv--nowrap .pv-wrap-toggle {
  transform: rotate(180deg);
}

.pv_box .pv-board {
  position: absolute;
  width: 80%;
  left: 34px;
  max-width: 240px;
  z-index: 1;
}

main {
  --gauge-gap: 8px;
}

@media (min-width: 320px) {
  main {
    --gauge-gap: calc( 8px + 9 * ((100vw - 320px) / 880));
  }
}

@media (min-width: 1200px) {
  main {
    --gauge-gap: 17px;
  }
}

.eval-gauge {
  width: var(--gauge-gap);
  position: relative;
  background: #fff;
  overflow: hidden;
}

@media (max-width: 799px) and (orientation: portrait) {
  .eval-gauge {
    display: none;
  }
}

.eval-gauge.reverse {
  transform: rotateX(180deg);
}

.eval-gauge::after {
  content: '';
  display: block;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.7) inset;
}

.eval-gauge tick {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  border-bottom: 2px ridge #eee;
  opacity: 0.4;
}

.eval-gauge tick.zero {
  top: 6px;
  opacity: 1;
  border-bottom: 7px solid rgba(214, 79, 0, 0.4);
  margin-top: -3px;
}

.eval-gauge .black {
  width: 100%;
  height: 50%;
  background: #888;
  transition: height 1s;
}

.analyse-controls {
  display: flex;
  justify-content: space-between;
  align-items: stretch;
  font-size: 1.3rem;
}

.analyse-controls .fbt {
  text-align: center;
}

.analyse-controls .hidden {
  visibility: hidden;
}

.analyse-controls .jumps {
  display: flex;
}

.analyse-controls .jumps .fbt {
  flex: 1 1 30%;
}

.analyse-controls .jumps .fbt:first-child, .analyse-controls .jumps .fbt:last-child {
  flex: 1 1 20%;
  font-size: 0.7em;
}

#promotion-choice {
  background: rgba(237, 235, 233, 0.7);
  z-index: 205;
}

#promotion-choice square {
  cursor: pointer;
  border-radius: 50%;
  background-color: #b0b0b0;
  box-shadow: inset 0 0 25px 3px #808080;
  transition: all 150ms;
}

#promotion-choice piece {
  pointer-events: auto;
  opacity: 1;
  /* cancels blindfold */
}

.is2d #promotion-choice piece {
  width: 100%;
  height: 100%;
  transition: all 150ms;
  transform: scale(0.8);
}

#promotion-choice square:hover {
  box-shadow: inset 0 0 48px 8px #d64f00;
  border-radius: 0%;
}

.is2d #promotion-choice square:hover piece {
  transform: none;
}

.variant-racingKings .cg-wrap.cg-wrap cg-container::before {
  background: rgba(230, 230, 230, 0.2);
  width: 100%;
  height: 12.5%;
  content: '';
  position: absolute;
  left: 0;
  z-index: 1;
  pointer-events: none;
}

.variant-racingKings .cg-wrap.orientation-white cg-container::before {
  top: 0;
}

.variant-racingKings .cg-wrap.orientation-black cg-container::before {
  bottom: 0;
}

.variant-kingOfTheHill cg-container::before {
  width: 25%;
  height: 25%;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.7);
  background: rgba(230, 230, 230, 0.2);
  content: '';
  position: absolute;
  top: 37.5%;
  left: 37.5%;
  z-index: 1;
  pointer-events: none;
}

.cmn-toggle {
  position: absolute;
  margin-left: -99999px;
}

.cmn-toggle + label {
  display: block;
  position: relative;
  cursor: pointer;
  outline: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  padding: 1px;
  width: 40px;
  height: 24px;
  border: 1px solid #d9d9d9;
  border-radius: 24px;
}

.cmn-toggle + label::before, .cmn-toggle + label::after {
  display: block;
  position: absolute;
  content: '';
  width: 22px;
  height: 22px;
  bottom: 0.1px;
  left: 0;
}

.cmn-toggle + label::before {
  font-size: 1em;
  z-index: 1;
  text-align: center;
  line-height: 22px;
}

.cmn-toggle + label::after {
  border-radius: 100%;
  box-shadow: 0 1px 2.5px rgba(0, 0, 0, 0.3);
}

.cmn-toggle:not(:checked) + label {
  background-color: #cc3333;
}

.cmn-toggle--subtle:not(:checked) + label {
  background-color: #b3b3b3;
}

.cmn-toggle:checked + label {
  background-color: #629924;
}

.cmn-toggle:disabled + label {
  opacity: 60%;
  cursor: not-allowed !important;
}

.cmn-toggle:hover:not(:disabled) + label {
  transition: background 150ms;
}

.cmn-toggle:hover:not(:disabled) + label::before {
  transition: margin 150ms, color 150ms;
}

.cmn-toggle:hover:not(:disabled) + label::after {
  transition: margin 150ms;
}

.cmn-toggle:not(:checked) + label::before {
  content: 'L';
  color: #cc3333;
}

.cmn-toggle--subtle:not(:checked) + label::before {
  color: #b3b3b3;
}

.cmn-toggle:checked + label::before, .cmn-toggle:checked + label::after {
  margin-left: 16px;
}

.cmn-toggle:checked + label::before {
  content: 'E';
  color: #629924;
}

.flash {
  margin: 1em 0 2em 0;
}

.flash__content {
  padding: 1em 2em;
  background: #629924;
  color: #fff;
}

.flash__content::before {
  content: 'E';
  margin-right: 1em;
  font-size: 1.5em;
}

.flash__content a {
  color: #fff;
}

.flash-warning .flash__content {
  background: #d59020;
  color: #fff;
}

.flash-warning .flash__content::before {
  content: '';
}

.flash-failure .flash__content {
  background: #cc3333;
  color: #fff;
}

.flash-failure .flash__content::before {
  content: 'j';
}

.form-group {
  margin-bottom: 3rem;
}

.form-split {
  align-items: inherit;
}

.form-half {
  flex: 1 1 48%;
  min-width: 200px;
}

.form-third {
  flex: 1 1 31%;
}

@media (min-width: 500px) {
  .form-half,
  .form-third {
    flex-grow: 0;
  }
}

.form-label {
  font-weight: bold;
  display: inline-block;
  margin-bottom: 0.5rem;
  cursor: text;
}

.form-control {
  display: block;
  width: 100%;
  height: calc(2.7em + 2px);
  background-clip: padding-box;
}

textarea.form-control {
  height: auto;
}

.form-control:invalid,
.form-group.is-invalid .form-control {
  border-color: #cc3333;
}

.form3 .error,
.form-help,
.password-complexity-label {
  font-size: 90%;
  margin-top: 0.25rem;
}

.form3 .error {
  color: #cc3333;
}

.form-help,
.password-complexity-label {
  color: #787878;
}

.form-check {
  justify-content: center;
}

.form-check div {
  display: flex;
}

.form-check-input {
  margin-right: 0.5rem;
}

.form-check .form-label {
  margin-bottom: 0;
  cursor: pointer;
}

.form-actions {
  margin: 1.5rem 0;
  padding-top: 1.5rem;
  border-top: 1px solid #d9d9d9;
}

.form-actions.single {
  justify-content: flex-end;
}

.form3 hr {
  margin-top: 1rem;
  margin-bottom: 1rem;
  border: 0;
  border-top: 1px solid #d9d9d9;
}

.password-complexity {
  margin-top: -2rem;
  margin-bottom: 3rem;
}

.password-complexity-meter {
  display: flex;
  grid-gap: 0.25rem;
  height: 0.4rem;
  margin-top: 1rem;
}

.password-complexity-meter > * {
  background-color: gray;
  width: 25%;
}

.tabs-horiz {
  justify-content: center;
  align-items: flex-end;
  border-bottom: 2px solid #d9d9d9;
}

@media (max-width: 499px) {
  .tabs-horiz {
    font-size: 0.9em;
  }
}

.tabs-horiz span {
  flex: 1 1 auto;
  text-align: center;
  padding: 0.5em 0.2em;
  cursor: pointer;
  position: relative;
  transition: color 0.25s;
  min-width: 15%;
  letter-spacing: -0.5px;
}

@media (min-width: 500px) {
  .tabs-horiz span {
    letter-spacing: inherit;
  }
}

.tabs-horiz span::after {
  content: '';
  background: rgba(214, 79, 0, 0.7);
  height: 2px;
  position: absolute;
  width: 96%;
  left: 2%;
  bottom: -2px;
  transition: all 0.25s;
  transform: scale(0);
}

.tabs-horiz span.active::after, .tabs-horiz span:hover::after {
  transform: scale(1);
}

.tabs-horiz span.active {
  color: #d64f00;
}

.tabs-horiz .unread {
  margin-left: 0.3em;
}

.slist {
  width: 100%;
  border-bottom: 1px solid #d9d9d9;
}

.slist thead th {
  border-top: 1px solid #d9d9d9;
  border-bottom: 1px solid #d9d9d9;
  padding: 0.5rem 0.8rem;
}

.slist thead th.large {
  font-size: 1.2rem;
}

.slist td {
  padding: 1rem;
}

.slist td .label {
  font-family: monospace;
  font-size: 0.8rem;
}

.slist tbody tr:nth-child(even) {
  background: #f7f6f5;
}

.slist td:first-child,
.slist th:first-child {
  padding-left: 1.5rem;
}

.slist-pad td:first-child,
.slist-pad th:first-child {
  padding-left: var(--box-padding);
}

.slist-pad td:last-child,
.slist-pad th:last-child {
  padding-right: var(--box-padding);
}

.slist-invert tbody tr:nth-child(odd) {
  background: #f7f6f5;
}

.slist-invert tbody tr:nth-child(even) {
  background: none;
}

.context-streamers {
  max-height: 20vh;
  overflow-y: auto;
}

.context-streamer {
  height: 2.2em;
  color: #fff !important;
  background: #9aba73;
  transition: all 150ms;
}

.context-streamer::before {
  font-size: 1.3em;
  margin-left: 0.4em;
}

.context-streamer:hover {
  background: #7ea94b;
}

body ::-webkit-scrollbar,
body ::-webkit-scrollbar-corner {
  width: 0.5rem;
  background: white;
}

body ::-webkit-scrollbar-thumb {
  background: #dbdbdb;
}

body ::-webkit-scrollbar-thumb:hover,
body ::-webkit-scrollbar-thumb:active {
  background: #b3b3b3;
}

.mchat__tabs {
  flex: 0 0 auto;
  display: flex;
}

.mchat__tab {
  flex: 1 1 auto;
  text-align: center;
  padding: 0.4em 10px;
  cursor: pointer;
  color: #5e5e5e;
  transition: all 150ms;
}

.mchat__tab:hover {
  background: #f9e5d9;
}

.mchat__tab-active {
  color: #4d4d4d;
  background: white !important;
}

.mchat__tab input {
  cursor: pointer;
  display: none;
}

.mchat__tab-active input {
  display: block;
}

.mchat__tab:last-child {
  border-right: none;
}

.mchat-optional .mchat__tab.discussion {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.chat__members {
  font-size: 0.9em;
  height: 100%;
  overflow: hidden;
}

.chat__members__inner {
  display: flex;
  align-items: flex-start;
}

.chat__members__number {
  margin-right: 1ch;
}

.chat__members__number::before {
  font-size: 1em;
  color: #787878;
  margin-right: 0.2ch;
}

.mchat__messages {
  flex: 1 1 auto;
  max-height: 50vh;
  overflow-y: auto;
  overflow-x: hidden;
  cursor: initial;
  font-size: 0.9em;
}

@media (min-width: 1260px) {
  .mchat__messages {
    max-height: none;
  }
}

.mchat__messages li {
  position: relative;
  padding: 0.5em 0 0.5em 10px;
  line-height: 1.2em;
  overflow-y: hidden;
  user-select: text;
}

.mchat__messages .deleted {
  opacity: 0.5;
}

.mchat__messages .system {
  display: block;
  opacity: 0.8;
  font-style: italic;
  font-size: 0.9em;
  margin-left: 0;
  text-align: center;
}

.mchat__messages .color,
.mchat__messages .user-link {
  font-weight: bold;
  padding: 0;
  color: #787878;
  letter-spacing: -1px;
  margin-right: 0.4em;
}

.mchat__messages .utitle {
  margin-right: 3px;
}

.mchat__messages i {
  display: none;
  position: absolute;
  top: 5px;
  right: 0;
  cursor: pointer;
  margin-right: 3px;
  padding: 4px 5px;
  opacity: 0.7;
  color: #d64f00;
}

.mchat__messages i:hover {
  opacity: 1;
}

.mchat__messages li:hover i {
  display: block;
  text-shadow: 0 0 2px white, 0 0 5px white, 0 0 10px white;
}

.mchat__say {
  flex: 0 0 auto;
  border: 0;
  border-top: 1px solid #d9d9d9;
  border-radius: 0;
  padding: 3px 20px 3px 4px;
}

.mchat__say.whisper {
  color: #629924;
  font-weight: bold;
  font-style: italic;
}

@keyframes palantir-glowing {
  40% {
    background: none;
  }
  50% {
    background: #d0e0bd;
  }
  60% {
    background: #bbd7f1;
  }
  70% {
    background: none;
  }
}

.palantir {
  flex: 0 1 auto;
  animation: palantir-glowing 1.5s ease-in-out infinite;
  border-radius: 0 3px 0 0;
}

.palantir-slot {
  animation: none;
  opacity: 0.6;
}

.palantir-slot:hover {
  opacity: 1;
}

.palantir-off {
  animation: none;
}

.palantir-on {
  background: #629924;
  color: #fff;
  animation: none;
}

.palantir-on:hover {
  background: #cc3333 !important;
  color: #fff !important;
}

.palantir::after {
  top: 1px;
  left: 0;
  right: auto;
  background: none;
  box-shadow: none;
}

.mchat {
  grid-area: chat;
  justify-content: stretch;
  min-height: 15em;
}

.mchat__content {
  background: white;
  flex: 1 1 auto;
  overflow: hidden;
}

.mchat__content.note textarea {
  font-size: 0.9em;
  flex-grow: 1;
  border: none;
  background-color: transparent;
  line-height: 1.7em;
  outline: none;
  resize: none;
}

.pocket {
  display: flex;
  width: 62.5%;
}

@media (min-width: 800px), (orientation: landscape) {
  .pocket {
    width: 100%;
    box-shadow: 0 3px 5px rgba(0, 0, 0, 0.3) inset;
    background: #888;
  }
}

.pocket-c1 {
  flex: 0 0 20%;
  max-width: 10vmin;
}

.pocket piece {
  display: block;
  width: 100% !important;
  height: 100% !important;
  transition: all 150ms;
}

.pocket piece::after {
  content: attr(data-nb);
  bottom: 0;
  right: 0;
  position: absolute;
  line-height: 0.9em;
  padding: 3px 0.3em;
  font-weight: bold;
  font-size: 1.1em;
}

.pocket piece[data-nb='0'] {
  cursor: auto;
  opacity: 0.1;
}

.pocket piece[data-nb='0']::after {
  content: none;
}

.pocket piece.premove {
  background-color: #555;
}

.pocket.usable piece {
  cursor: pointer;
  pointer-events: auto;
}

.pocket.usable piece:hover {
  background-color: #aaa;
}

.blindfold .pocket:not(.usable) {
  opacity: 0;
}

.analyse__tools .sub-box, .action-menu {
  border-bottom: 1px solid #d9d9d9;
}

@media (min-width: 800px), (orientation: landscape) {
  .analyse__tools .sub-box, .action-menu {
    border-bottom: 3px solid #629924;
  }
}

body {
  /* prevents scroll bar flicker on page height changes */
  overflow-y: scroll;
}

#main-wrap {
  --main-max-width: calc(100vh - calc(var(--site-header-height) + var(--site-header-margin)) - 3rem);
}

@media (min-width: 800px), (orientation: landscape) {
  #main-wrap {
    --main-max-width: auto;
  }
}

.analyse {
  grid-area: main;
  display: grid;
  --meta-height: auto;
  grid-template-rows: auto auto minmax(20em, 30vh);
  grid-template-areas: 'board' 'controls' 'tools' 'side' 'acpl' 'under' 'chat' 'uchat';
}

.analyse__side {
  grid-area: side;
  justify-content: start;
  margin: 2vmin;
}

.analyse__board,
.analyse .relay-tour {
  grid-area: board;
}

.analyse__tools {
  grid-area: tools;
}

.analyse__controls {
  grid-area: controls;
}

.analyse__underboard {
  grid-area: under;
}

@media (max-width: 799px) and (orientation: portrait) {
  .analyse__underboard {
    overflow: hidden;
  }
}

.analyse__acpl {
  grid-area: acpl;
}

.analyse .chat__members {
  grid-area: uchat;
}

.analyse .eval-gauge {
  grid-area: gauge;
  display: none;
}

@supports (height: max-content) {
  .analyse {
    --meta-height: max-content;
  }
}

@media (min-width: 800px), (orientation: landscape) {
  .analyse {
    grid-template-columns: minmax(calc(70vmin * var(--board-scale)), calc(100vh * var(--board-scale) - calc(var(--site-header-height) + var(--site-header-margin)) - 3rem)) var(--gauge-gap) minmax(240px, 400px);
    grid-template-rows: fit-content(0);
    grid-template-areas: 'board      gauge tools' 'under      .     controls' 'under      .     acpl' 'under      .     side' 'chat       .     side' 'uchat      .     side';
    grid-row-gap: 0;
  }
  .analyse__side,
  .analyse .chat__members,
  .analyse .mchat {
    margin: 2vmin 0 0 0;
  }
  .analyse__underboard {
    margin-top: 2vmin;
  }
  .analyse .eval-gauge {
    display: block;
  }
}

@media (max-width: 799px) and (orientation: landscape) {
  .analyse {
    grid-template-columns: minmax(calc(55vmin), calc(100vh - calc(var(--site-header-height) + var(--site-header-margin)) - 2vmin)) var(--gauge-gap) minmax(200px, 240px);
  }
}

@media (min-width: 1260px) {
  .analyse {
    grid-template-columns: minmax(230px, 20vw) 2vmin minmax(calc(70vmin * var(--board-scale)), calc(100vh * var(--board-scale) - calc(var(--site-header-height) + var(--site-header-margin)) - 3rem)) var(--gauge-gap) minmax(240px, 400px);
    grid-template-rows: var(--meta-height) fit-content(0) 2.5em auto;
    grid-template-areas: 'side    . board gauge tools' 'chat    . board gauge tools' 'uchat   . under .     controls' 'uchat   . under .     acpl';
  }
  .analyse__side {
    margin-top: 0;
  }
  .analyse .mchat {
    min-height: 10em;
  }
  .analyse .crosstable__users {
    flex: 7 1 auto;
  }
}

.analyse__tools {
  background: white;
}

.analyse__tools .ceval {
  flex: 0 0 38px;
}

.analyse__tools .sub-box {
  user-select: none;
}

.analyse__tools .sub-box .title {
  font-size: 0.9rem;
  line-height: 1.9em;
  background: #c0d6a7;
  padding: 0 7px;
}

.analyse__moves {
  flex: 2 1 0;
  overflow-y: auto;
  overflow-x: hidden;
  border-top: 1px solid #d9d9d9;
  position: relative;
  /* required so line::before scrolls along the moves! */
}

.analyse__moves .result,
.analyse__moves .status {
  background: #f7f6f5;
  text-align: center;
}

.analyse__moves .result {
  border-top: 1px solid #d9d9d9;
  font-weight: bold;
  font-size: 1.2em;
  padding: 5px 0 3px 0;
}

.analyse__moves .status {
  font-size: 1em;
  font-style: italic;
  padding-bottom: 7px;
}

.analyse__controls {
  height: 3rem;
  align-items: stretch;
}

.analyse__controls div {
  display: flex;
  flex: 1 1 auto;
  align-items: stretch;
}

.analyse__controls .jumps {
  flex: 3 1 auto;
}

.analyse__controls .fbt {
  flex: 0 0 2.5rem;
}

.analyse__controls .active {
  margin-top: -3px;
  padding-top: 3px;
}

.analyse__controls ::before {
  vertical-align: middle;
}

.action-menu {
  flex: 1 1 0;
  display: flex;
  flex-flow: column;
  overflow: auto;
  padding: 2vmin;
}

.action-menu h2 {
  font-size: 1em;
  text-transform: uppercase;
  text-align: center;
  white-space: nowrap;
  margin: 2vmin 0 3px 0;
  display: table;
  padding: 0 10px;
}

.action-menu h2:before, .action-menu h2:after {
  border-top: 1px solid #d9d9d9;
  content: '';
  display: table-cell;
  position: relative;
  top: 0.5em;
  width: 45%;
}

.action-menu h2:before {
  right: 8px;
}

.action-menu h2:after {
  left: 8px;
}

.action-menu__tools {
  flex: 0 0 auto;
  display: flex;
  flex-flow: row wrap;
}

.action-menu__tools > * {
  flex: 0 0 50%;
  text-align: center;
  padding: 0;
  height: 75px;
  justify-content: center;
}

.action-menu__tools .button {
  color: #4d4d4d;
  text-transform: none;
  white-space: normal;
}

.action-menu__tools .button::before {
  display: block;
  font-size: 2em;
  line-height: 1em;
  margin-bottom: 5px;
}

.action-menu .autoplay {
  display: flex;
}

.action-menu .autoplay a {
  color: #787878;
  font-size: 0.9em;
  flex: 1 1 auto;
  padding: 7px 0;
  text-align: center;
}

.action-menu form.delete {
  text-align: right;
  margin-top: 6px;
}

.action-menu form.delete .button {
  display: inline-block;
  padding: 0 8px;
}

.action-menu form.delete .button::before {
  font-size: 1.2em;
}

.action-menu .setting {
  flex: 0 0 auto;
  margin-top: 2vmin;
  display: flex;
}

.action-menu .setting label {
  flex: 4 1 auto;
  cursor: pointer;
  white-space: nowrap;
}

.action-menu .setting input[type='range'] {
  flex: 1 4 auto;
  padding: 0 0 0 1em;
  height: 1.6em;
  width: 100%;
}

.action-menu .setting input[type='range'][min='0'] {
  padding: 0;
}

.action-menu .setting .range_value {
  flex: 0 0 auto;
  display: block;
  text-align: right;
}

@media (max-width: 799px) and (orientation: portrait) {
  .action-menu .abset-inline {
    display: none;
  }
}

.explorer-box {
  position: relative;
  flex: 2.5 1 0px;
  white-space: nowrap;
  transition: all 150ms;
  transition-delay: 0.3s;
  overflow-y: scroll;
  font-size: 0.9em;
}

.explorer-box.reduced {
  flex: 0.3 3 0px;
}

.explorer-box.reduced:hover {
  flex: 1 2 0px;
}

.explorer-box .overlay {
  display: none;
}

.explorer-box.loading .overlay {
  display: block;
}

.explorer-box tbody {
  transition: all 150ms;
}

.explorer-box.loading tbody {
  opacity: 0.4;
}

.explorer-box .title span {
  display: block;
  margin-right: 1.9em;
  overflow: hidden;
  text-overflow: ellipsis;
  user-select: text;
}

.explorer-box .empty {
  display: flex;
  flex-flow: column;
  height: 100%;
}

.explorer-box .empty .message {
  text-align: center;
}

.explorer-box tr {
  transition: all 150ms;
}

.explorer-box tr:nth-child(even) {
  background: #f7f6f5;
}

.explorer-box tr:hover {
  background: #e0ebd3;
}

.explorer-box td {
  cursor: pointer;
  padding-left: 7px;
}

.explorer-box .moves td:first-child {
  line-height: 30px;
  padding-left: 7px;
}

.explorer-box .moves td:nth-child(2) {
  font-size: 0.75em;
  text-align: right;
}

.explorer-box .moves td:last-child {
  width: 100%;
  padding-right: 7px;
}

.explorer-box .bar span {
  text-align: center;
  display: inline-block;
  overflow: hidden;
  vertical-align: middle;
  border: 0 solid #d9d9d9;
  border-width: 1px 0;
  height: 16px;
  line-height: 14px;
  font-size: 0.9em;
}

.explorer-box .white {
  background: #fff;
  box-shadow: 0 -5px 7px rgba(0, 0, 0, 0.1) inset;
}

.explorer-box .draws,
.explorer-box .black {
  color: #fff;
  box-shadow: 0 5px 7px rgba(255, 255, 255, 0.2) inset;
}

.explorer-box .draws {
  background: #a0a0a0;
}

.explorer-box .black {
  background: #555;
  color: #ddd;
}

.explorer-box .bar span:first-child {
  border-left-width: 1px;
}

.explorer-box .bar span:last-child {
  border-right-width: 1px;
}

.explorer-box .games {
  width: 100%;
}

.explorer-box .games td {
  padding: 5px 0 5px 7px;
  max-width: 110px;
}

.explorer-box .games td span {
  display: block;
}

.explorer-box .games result {
  display: block;
  text-align: center;
  padding: 3px 5px;
  border-radius: 3px;
  font-size: 0.9em;
}

.explorer-box .game_menu {
  background: #629924;
  cursor: default;
  padding: 0;
}

.explorer-box .game_menu .game_title {
  text-align: center;
  color: #fff;
  margin: 3px 0 1px 0;
}

.explorer-box .game_menu .menu {
  display: flex;
  justify-content: space-between;
  text-transform: uppercase;
}

.explorer-box .game_menu .menu a {
  color: #fff;
  padding: 4px 8px;
}

.explorer-box .game_menu .menu a:hover {
  background: rgba(255, 255, 255, 0.2);
}

.explorer-box .tablebase {
  width: 100%;
}

.explorer-box .tablebase td:first-child {
  font-size: 14px;
  line-height: 30px;
  padding-left: 7px;
}

.explorer-box .tablebase td:last-child {
  padding-right: 7px;
  text-align: right;
}

.explorer-box .tablebase result {
  padding: 3px 5px;
  margin-left: 5px;
  border-radius: 3px;
  font-size: 0.9em;
}

.explorer-box .toconf {
  position: absolute;
  top: 0;
  right: 0;
  cursor: pointer;
  display: block;
  font-size: 1.2em;
  width: 1.5em;
  line-height: 1.5em;
  text-align: center;
  opacity: 0.8;
}

.explorer-box .toconf:hover {
  opacity: 1;
}

.explorer-box .message {
  text-align: center;
  font-style: italic;
  flex: 1 1 100%;
  display: flex;
  flex-flow: column;
  justify-content: center;
}

.explorer-box.reduced .message {
  justify-content: flex-start;
}

.explorer-box .message strong {
  font-weight: bold;
  margin: 1em 0;
}

.explorer-box:not(.reduced) .message h3,
.explorer-box.reduced:hover .message h3 {
  font-weight: bold;
}

.explorer-box .message p {
  white-space: normal;
  padding: 0 8px;
  margin: 0 0 8px 0;
}

.explorer-box.reduced .message p,
.explorer-box.reduced .message button {
  display: none;
}

.explorer-box.reduced:hover .message p,
.explorer-box.reduced:hover .message button {
  display: block;
}

.explorer-box .message button {
  margin: 0 30px;
}

.explorer-box .message.masters i {
  font-size: 40px;
  margin: 10px 0;
}

.explorer-box .config section {
  margin: 0.4em 2vmin 0 2vmin;
}

.explorer-box .config section.save {
  text-align: center;
  padding: 15px 0 10px 0;
}

.explorer-box .config label {
  font-weight: bold;
  display: block;
  line-height: 2em;
}

.explorer-box .config .choices {
  display: flex;
}

.explorer-box .config .choices span {
  flex-grow: 1;
  padding: 5px 0;
  text-align: center;
  cursor: pointer;
  transition: all 150ms;
  border: 1px solid #d9d9d9;
  border-width: 1px 0 1px 1px;
  text-transform: capitalize;
}

.explorer-box .config .choices span:last-child {
  border-right-width: 1px;
}

.explorer-box .config .choices span:hover {
  background: #fff;
}

.explorer-box .config .choices span.selected {
  background: #629924;
  color: #fff;
  text-shadow: 1px 0 0 rgba(0, 0, 0, 0.5);
  font-weight: bold;
  box-shadow: 0 3px 5px rgba(0, 0, 0, 0.2) inset;
}

.training-box {
  flex: 1.5 1 0px;
}

.training-box .feedback {
  flex: 1 1 100%;
  display: flex;
  flex-flow: column;
  justify-content: center;
}

.training-box .progress {
  margin-top: 5px;
  opacity: 0.8;
  width: 100%;
  height: 4px;
  background: #dbdbdb;
}

.training-box .progress div {
  background: #629924;
  height: 4px;
  transition: width 0.5s;
  max-width: 100%;
}

.training-box .player {
  display: flex;
  align-items: center;
  margin-left: 10px;
}

.training-box .no-square {
  width: 64px;
  height: 64px;
  margin-right: 10px;
}

.is3d .training-box div.no-square {
  height: 82px;
}

.training-box piece {
  position: inherit;
  display: block;
  width: 100% !important;
  height: 100% !important;
}

.training-box .icon {
  display: block;
  width: 64px;
  height: 64px;
  margin-right: 10px;
  font-size: 50px;
  font-size: 64px;
  line-height: 64px;
  text-align: center;
}

.training-box .instruction > * {
  display: block;
}

.training-box .instruction > strong {
  font-weight: normal;
  font-size: 1.2em;
}

.training-box .choices {
  line-height: 1.6em;
  margin: 5px 0 -5px 0;
}

.training-box .choices a {
  display: block;
}

.practice-box {
  flex: 0 0 135px;
  user-select: none;
}

.practice-box .comment {
  flex: 0 0 30px;
  display: flex;
  align-items: stretch;
  background: #f7f6f5;
  border-top: 1px solid 1px solid #d9d9d9;
  white-space: nowrap;
  line-height: 30px;
}

.practice-box .progress div {
  background: #dbdbdb;
}

.practice-box.goodMove .progress div {
  background: #629924;
  color: #fff;
}

.practice-box.inaccuracy .title,
.practice-box.inaccuracy .progress div {
  background: #d59020;
  color: #fff;
}

.practice-box.mistake .title,
.practice-box.blunder .title,
.practice-box.mistake .progress div,
.practice-box.blunder .progress div {
  background: #cc3333;
  color: #fff;
}

.practice-box .comment .wait {
  padding-left: 15px;
}

.practice-box .verdict {
  font-weight: bold;
  margin-right: 10px;
  display: flex;
}

.practice-box .verdict::before {
  width: 30px;
  height: 100%;
  color: #fff;
  margin-right: 7px;
  text-align: center;
  font-size: 1.4em;
  font-weight: normal;
}

.practice-box.goodMove .verdict {
  color: #629924;
}

.practice-box.goodMove .verdict::before {
  background: #629924;
  content: '✓';
  font-size: 1.7em;
}

.practice-box.inaccuracy .verdict {
  color: #d59020;
}

.practice-box.inaccuracy .verdict::before {
  background: #d59020;
  content: '?';
}

.practice-box.mistake .verdict,
.practice-box.blunder .verdict {
  color: #cc3333;
}

.practice-box.mistake .verdict::before,
.practice-box.blunder .verdict::before {
  background: #cc3333;
  content: '✗';
}

.practice-box .comment move {
  cursor: pointer;
  margin-left: 5px;
  color: #1b78d0;
  transition: 0.3s;
}

.analyse__fork {
  flex: 0 0 auto;
}

@media (max-width: 799px) and (orientation: portrait) {
  .analyse__fork {
    display: none;
  }
}

.analyse__fork move {
  background: #c6ddf3;
  color: #1f1f1f;
  flex: 0 0 50%;
  cursor: pointer;
  padding: 0.2em 1em;
  border-bottom: 1px solid white;
}

.analyse__fork move:nth-child(odd) {
  border-right: 1px solid white;
}

.analyse__fork move:hover,
.analyse__fork:not(:hover) move.selected {
  background: #1b78d0;
  color: #fff;
}

.analyse__fork glyph {
  margin-left: 2px;
}

.analyse__fork eval {
  flex: 3 0 auto;
  text-align: right;
  font-size: 0.9em;
}

.analyse__side {
  align-self: start;
}

.analyse__side .back-to-game {
  margin-top: 2em;
  text-align: center;
}

@media (min-width: 1260px) {
  .analyse__side .back-to-game {
    margin-top: 10vh;
  }
}

.analyse__side .back-to-game .button {
  margin: 0 auto;
}

#analyse-cm {
  background: white;
  position: absolute;
  display: none;
  z-index: 107;
  cursor: default;
  user-select: none;
}

#analyse-cm.visible {
  display: block;
}

#analyse-cm .title {
  padding: 0.4em;
  text-align: center;
  font-size: 1.2em;
  border-bottom: 1px solid #d9d9d9;
  margin: 0;
}

#analyse-cm a {
  color: #4d4d4d;
  padding: 0.5em 0.6em 0.5em 0.3em;
}

#analyse-cm a::before {
  width: 2em;
  text-align: center;
}

#analyse-cm a:hover {
  background: #fbede6;
}

.advice-summary {
  color: #5e5e5e;
  font-size: 0.9em;
  line-height: 1.15em;
  margin-top: 1em;
}

.advice-summary__side > div {
  display: flex;
}

.advice-summary__side > div i,
.advice-summary__side > div strong {
  flex: 0 1 4ch;
  text-align: center;
}

.advice-summary__side > div.symbol {
  cursor: pointer;
}

.advice-summary__side > div.symbol:hover {
  color: #1b78d0;
}

.advice-summary .color-icon::before {
  vertical-align: text-bottom;
}

.advice-summary .button {
  margin: 0.6em 0;
}

@media (max-width: 799px) and (orientation: portrait) {
  .advice-summary {
    flex-flow: row wrap;
    justify-content: center;
    padding-bottom: 2vmin;
    border-bottom: 1px solid #d9d9d9;
    margin: 0;
  }
  .advice-summary__side {
    flex: 0 0 calc(50% - 2vmin);
    margin-left: 2vmin;
  }
  .advice-summary > a {
    order: 1;
  }
}

.analyse__underboard {
  margin-top: 1vmin;
}

.study__chapters, .study__members {
  overflow-y: auto;
  max-height: 18em;
  background: white;
  overflow: hidden;
  overflow-y: auto;
  position: relative;
  user-select: none;
}

@media (hover: hover) {
  .study__chapters, .study__members {
    overflow: hidden;
  }
  .study__chapters:hover, .study__members:hover {
    overflow-y: auto;
  }
}

.study__chapters > div, .study__members > div {
  align-items: stretch;
  transition: all 150ms;
}

.study__chapters > div:hover, .study__members > div:hover, .study__chapters > div.active, .study__members > div.active {
  color: #1f1f1f;
  background: #e8f2fa;
}

.study__chapters .act, .study__members .act {
  color: #4d4d4d;
  cursor: pointer;
  border-radius: 99px;
  align-self: center;
  justify-content: center;
  font-size: 0.9em;
  opacity: 0.15;
  padding: 0.4em;
  transition: all 150ms;
}

.study__chapters > div:hover .act, .study__members > div:hover .act {
  opacity: 0.7;
}

.study__chapters > div:hover .act:hover, .study__members > div:hover .act:hover {
  background: #1b78d0;
  color: #fff;
  opacity: 1;
}

.study__chapters .add, .study__members .add {
  border-top: 1px solid #d9d9d9;
  cursor: pointer;
}

.study__chapters ongoing {
  align-self: center;
  justify-content: center;
  font-size: 0.7em;
  color: #cc3333;
  margin-right: 0.7rem;
}

.study__chapters {
  max-height: 18em;
}

.study__chapters h3 {
  flex: 1 1 100%;
  font-size: 1em;
  line-height: 1;
  margin: 0.5em 0;
  align-self: center;
}

.study__chapters > div {
  cursor: pointer;
}

.study__chapters > div.active, .study__chapters > div:active {
  color: #1f1f1f;
}

.study__chapters > div > span {
  flex: 0 0 1.7em;
  justify-content: center;
  color: #1b78d0;
  font-weight: bold;
  height: auto;
  margin-right: 0.4em;
  opacity: 0.8;
}

.study__chapters > div res {
  align-self: center;
  font-size: 0.9em;
  white-space: nowrap;
  margin-right: 0.7rem;
}

.study__chapters .ddloader {
  width: 1.7em;
  height: 1.7em;
}

.study__chapters .sortable-ghost {
  opacity: 0.7;
}

.study__chapters .sortable-ghost,
.study__chapters .sortable-ghost .status {
  background: #629924 !important;
  color: #fff !important;
}

.study__members .left {
  align-items: stretch;
  flex: 0 1 auto;
  overflow: hidden;
}

.study__members .user-link {
  margin: 0.5em 0;
}

.study__members .status {
  justify-content: center;
  width: 2.4em;
  margin-right: 0.1em;
  transition: 2.5s;
}

.study__members i {
  font-size: 1.2em;
  opacity: 0.5;
  transition: 2.5s;
}

.study__members .contrib i {
  opacity: 0.7;
}

.study__members .online i {
  opacity: 0.8;
  color: #629924;
}

.study__members .online.contrib i {
  opacity: 1;
}

.study__members > div:nth-child(4n-3) .status.active {
  background: #42a5f5;
}

.study__members > div:nth-child(4n-2) .status.active {
  background: #f44336;
}

.study__members > div:nth-child(4n-1) .status.active {
  background: #fdd835;
}

.study__members > div:nth-child(4n-0) .status.active {
  background: #4caf50;
}

.study__members .status.active {
  transition: none;
}

.study__members .status.active i {
  transition: none;
  opacity: 1;
  color: #fff;
}

.study__members .leave {
  color: #cc3333;
  opacity: 0.7;
}

.study__members > div:hover .leave:hover {
  background-color: #cc3333;
}

.study__members .add:hover i {
  color: #1b78d0;
  opacity: 1;
  transition: none;
}

.study__members .admin {
  text-align: center;
}

.study__members .admin button {
  margin-bottom: 0.5em;
}

.study__members m-config,
.study__members .editing {
  background: #fbede6 !important;
}

.study__members m-config {
  padding: 0.4em 0.8em 1em 0.8em;
}

.study__members m-config .role label {
  cursor: pointer;
}

.study__members m-config .switch {
  margin-right: 0.5em;
}

.analyse.has-players cg-board {
  border-radius: 0;
}

@media (min-width: 800px), (orientation: landscape) {
  .analyse.has-players .analyse__underboard {
    margin-top: calc(0.8rem + 1vmin);
  }
}

@media (max-width: 799px) and (orientation: portrait) {
  .analyse.has-players .analyse__controls {
    margin-top: 1.6rem;
  }
}

.study__player {
  position: absolute;
  left: 0;
  right: 0;
  font-weight: bold;
  height: 1.6rem;
  white-space: nowrap;
}

.study__player-top {
  top: -1.6rem;
}

.study__player-bot {
  bottom: -1.6rem;
}

.study__player .left {
  flex: 1 1 100%;
  display: flex;
}

.study__player .result {
  flex: 0 0 auto;
  margin-left: 0.8em;
  padding-right: 0.8em;
  border-right: 1px solid #d9d9d9;
}

.study__player .analyse__clock {
  align-self: stretch;
  font-size: 1.2em;
  padding: 0 0.8em;
  border-radius: 0 4px 0 0;
}

.study__player-bot .analyse__clock {
  border-radius: 0 0 4px 0;
}

.study__player.ticking .analyse__clock {
  background: #629924;
  color: #fff;
  text-shadow: none;
}

.study__player .info {
  margin-left: 10px;
}

.study__player .elo {
  margin-left: 0.5em;
  font-weight: normal;
}

.study__modal#modal-wrap {
  padding: 1rem;
  min-width: 80vw;
}

@media (min-width: 650px) {
  .study__modal#modal-wrap {
    min-width: 500px;
  }
}

.study__modal > div {
  padding: 1rem;
  overflow-y: auto;
}

.study__modal .form3 {
  text-align: left;
}

.study__modal .form3 .editor {
  margin: -30px 0 30px 0;
}

.study__modal .form3 .editor .spinner {
  padding-top: 80px;
}

.study__modal h2 {
  margin-bottom: 0.5em;
}

.study__modal h2 i {
  font-size: 0.6em;
  margin-left: 1rem;
  opacity: 0.5;
  cursor: pointer;
}

.study__modal h2 i, .study__modal h2 i::before {
  vertical-align: top;
}

.study__modal h2 i:hover {
  opacity: 0.7;
  color: #1b78d0;
}

.study__modal .destructive {
  text-align: left;
  font-size: 0.9em;
  overflow: hidden;
}

.study__modal .destructive form {
  display: inline-block;
}

.study__modal .destructive button {
  opacity: 0.5;
}

.study__modal .destructive button:hover {
  opacity: 1;
}

.study__modal.chapter-new .tabs-horiz {
  margin: -1em 0 1.6em 0;
}

.board-editor .spare {
  display: flex;
  background: #b3b3b3;
  box-shadow: 0 3px 5px rgba(0, 0, 0, 0.3) inset;
}

.board-editor .spare-top {
  grid-area: spare-top;
  margin-bottom: 2vh;
}

.board-editor .spare-bottom {
  grid-area: spare-bottom;
  margin-top: 2vh;
}

.board-editor .spare .no-square {
  flex: 0 0 12.5%;
  transition: all 150ms;
}

.board-editor .spare .no-square:hover {
  background: rgba(27, 120, 208, 0.2);
}

.board-editor .spare .no-square.selected-square {
  background: rgba(27, 120, 208, 0.5);
}

.board-editor .spare .no-square.pointer:hover {
  background: rgba(98, 153, 36, 0.2);
}

.board-editor .spare .no-square.pointer.selected-square {
  background: rgba(98, 153, 36, 0.6);
}

.board-editor .spare .no-square.pointer piece {
  background-image: url("../images/icons/pointer.svg");
}

.board-editor .spare .no-square.trash:hover {
  background: rgba(204, 51, 51, 0.2);
}

.board-editor .spare .no-square.trash.selected-square {
  background: rgba(204, 51, 51, 0.6);
}

.board-editor .spare .no-square.trash piece {
  background-image: url("../images/icons/trash.svg");
}

.is3d .board-editor .spare .no-square div {
  padding-bottom: 90.72%;
}

.board-editor .spare piece {
  display: block;
  cursor: pointer;
  width: 100%;
  height: 100%;
}

.is3d .board-editor .spare piece {
  /* original size: width: 140.625%; height: 179.6875%; size on 3D board, with height/width = 90.78571% */
  width: 100%;
  height: 140.7465%;
  left: 0;
  top: -34%;
}

.board-editor .spare piece.pointer,
.board-editor .spare piece.trash {
  margin: 14%;
  width: 72%;
  height: 72%;
}

.is3d .board-editor .spare piece.pointer, .is3d
.board-editor .spare piece.trash {
  width: 62%;
  top: 0;
}

.board-editor__tools {
  grid-area: tools;
  align-self: center;
}

.board-editor__tools > * {
  margin: 0.5rem 0;
}

.board-editor__tools select {
  width: 100%;
}

.board-editor__tools select.positions option:checked {
  font-style: italic;
}

.board-editor__tools .metadata {
  background: white;
  padding: 1rem;
  white-space: nowrap;
}

.board-editor__tools .metadata .color {
  margin-bottom: 1em;
}

.board-editor__tools .metadata .castling label,
.board-editor__tools .metadata .castling input {
  display: inline-block;
  margin: 3px;
  vertical-align: middle;
}

.board-editor__tools .actions {
  justify-content: stretch;
}

.board-editor__tools .actions .button {
  width: 100%;
  text-align: left;
}

.board-editor-wrap {
  min-height: 280px;
  margin-bottom: 2em;
}

.board-editor-wrap .spinner {
  padding-top: 90px;
}

.board-editor {
  display: grid;
  grid-template-columns: 280px 2vmin 210px;
  grid-template-rows: min-content auto min-content;
  grid-template-areas: '.            . e-tools' 'spare-top    . e-tools' 'e-board      . e-tools' 'spare-bottom . e-tools' '.            . e-tools';
  user-select: none;
}

.board-editor .main-board {
  grid-area: e-board;
}

.board-editor cg-board {
  cursor: inherit;
}

.board-editor__tools {
  grid-area: e-tools;
}

.board-editor .spare-top {
  margin-bottom: 1vh;
}

.board-editor .spare-bottom {
  grid-area: spare-bottom;
  margin-top: 1vh;
}

.board-editor .metadata {
  background: #f7f6f5;
  font-size: 0.9em;
}

.study__buttons {
  border-bottom: 2px solid #d9d9d9;
}

.study__buttons span {
  font-size: 1.15em;
  min-width: 0;
}

.study__buttons .left-buttons {
  flex: 9 1 auto;
  justify-content: flex-start;
  border-bottom: 0;
}

.study__buttons .right {
  flex: 1 9 10%;
}

.study__buttons .behind {
  background: #cc3333;
  color: #fff;
  padding: 0 5px;
  border-radius: 9px;
  margin-right: 4px;
}

.study__buttons .mode {
  align-self: stretch;
  padding: 0 0.4em;
  opacity: 0.8;
}

.study__buttons .mode i::before {
  font-size: 1.4em;
  content: 'L';
  color: #cc3333;
  margin-right: 0.2rem;
}

.study__buttons .mode.on i::before {
  content: 'E';
  color: #629924;
}

.study__buttons .mode:hover {
  background: #f7f6f5;
  opacity: 1;
}

/* reused by context menu */
.glyph-icon::before {
  content: '⁉';
  font-size: 1.2em;
}

.study__invite {
  max-width: 50em;
}

.study__invite > div {
  overflow: visible !important;
}

.study__invite .info {
  background: #d64f00;
  color: #fff;
  padding: 1em;
  margin-bottom: 2em;
  text-align: left;
}

.study__invite .info::before {
  font-size: 3.6em;
  margin-right: 1rem;
}

.study__invite .users {
  max-width: 100ch;
  margin-top: 2em;
  overflow-y: auto;
  max-height: 30vh;
}

.study__invite .users .button {
  flex: 0 0 48%;
  margin-bottom: 0.7em;
  text-transform: none;
}

.study__invite .input-wrapper {
  overflow: visible !important;
  position: relative;
  display: inline-block;
}

.study-desc {
  background: white;
  padding: 0.7em 1em;
  margin-top: 0.5em;
  position: relative;
}

.study-desc.empty {
  text-align: center;
}

.study-desc.empty .button {
  display: inline-block;
  margin: 2em auto;
}

.study-desc .contrib {
  position: absolute;
  top: 0;
  right: 0;
  background: #fbede6;
  padding: 0.5em 0.8em;
  display: none;
  z-index: 1;
}

.study-desc:hover .contrib {
  display: block;
}

.study-desc .contrib a {
  margin-left: 8px;
}

.study-desc .embed {
  width: calc(100% + 2em);
  margin: -0.7em -1em;
}

.study-desc-form .title {
  width: 100%;
}

.study-desc-form textarea {
  width: 100%;
  height: 12em;
}

.study__metadata {
  background: white;
  text-align: left;
}

.study__metadata h2 {
  font-size: 1.3em;
  padding: 0 1rem;
  white-space: nowrap;
  border-bottom: 1px solid #d9d9d9;
}

.study__metadata h2 .name {
  padding: 0.7rem 0;
}

.study__metadata h2 .credit {
  display: block;
  font-size: 0.8rem;
  margin: 0.2rem 0 -0.3rem 0;
}

.study__metadata h2 .liking {
  margin-left: 1rem;
  font-weight: bold;
  cursor: pointer;
  opacity: 0.7;
  transition: 0.3s;
}

.study__metadata h2 .liking:hover {
  opacity: 1;
  color: #cc3333;
}

.study__tags {
  border: none;
}

.study__tags th {
  font-weight: bold;
  color: #787878;
  width: 1px;
  padding: 0 0.3em 0 1em !important;
}

.study__tags td {
  padding: 0;
}

.study__tags input,
.study__tags span {
  display: block;
  padding: 0.6em 1em 0.6em 0.7em;
  line-height: 1.7;
}

.study__tags input {
  border: none;
  background: none;
  width: 100%;
}

.study__tags input:hover,
.study__tags input:focus {
  background: #e8f2fa;
}

.study__tags select {
  cursor: pointer;
  border: none;
  background: none;
  padding: 0;
}

.study__topics {
  margin: 1em;
}

.study__topics .topic {
  background: #d8e8f7;
  padding: 0.2em 0.6em;
  margin: 0.2em;
}

.study__topics .manage {
  margin: 0.2em;
}

.study-topics form {
  max-width: 600px;
}

.study__comments form p {
  margin: 1em 0;
}

.study__comments #comment-text {
  height: 12em;
}

.study__comment {
  background: white;
  padding: 0.8em 1em;
  margin-bottom: 0.8em;
}

.study__comment .text {
  margin-top: 0.3em;
  width: 100%;
  overflow: hidden;
  display: inline-block;
}

.study__comment .edit {
  float: right;
  margin-left: 8px;
  opacity: 0.7;
  display: none;
}

.study__comment:hover .edit {
  display: block;
}

.study__comment .edit:hover {
  opacity: 1;
}

.study__comment .user-link,
.study__comment .node {
  font-weight: bold;
}

.study__glyphs {
  background: white;
  white-space: nowrap;
  user-select: none;
}

.study__glyphs > div {
  flex: 1 0 30%;
}

.study__glyphs a {
  transition: all 150ms;
  color: #4d4d4d;
  height: 2.3em;
  line-height: 2.3em;
  align-items: stretch;
}

.study__glyphs a::before {
  justify-content: center;
  content: attr(data-symbol);
  font-size: 1.2em;
  font-weight: bold;
  width: 2em;
  background: #e3e3e3;
  margin-right: 0.5em;
  transition: all 150ms;
}

.study__glyphs a:hover, .study__glyphs a.active {
  background: #f7f6f5;
  color: #629924;
}

.study__glyphs a:hover::before {
  background: #f7f6f5;
}

.study__glyphs a.active::before {
  background: #629924;
  color: #fff;
}

.study__share {
  background: white;
  padding: 1.5em 1.2em;
}

.study__share input[type='text'] {
  font-family: monospace;
  width: 100%;
  font-size: 0.9em;
}

.study__share .ply-wrap {
  color: #787878;
  text-align: left;
  font-size: 0.9em;
}

.study__share .ply {
  cursor: pointer;
}

.study__share .ply input {
  margin-right: 0.3em;
  vertical-align: middle;
}

.study__share .downloads {
  margin-bottom: 2em;
}

.study__multiboard {
  background: white;
}

.study__multiboard.loading {
  opacity: 0.7;
}

.study__multiboard.nopager {
  padding: 2em;
}

.study__multiboard .top {
  padding: 0.4em 1.5em;
}

.study__multiboard .pager .page {
  margin: 0 0.4em;
}

.study__multiboard .fbt {
  padding: 0.6em 1em;
}

.study__multiboard .playing {
  cursor: pointer;
}

.study__multiboard .playing input {
  vertical-align: middle;
  margin-right: 3px;
}

.study__multiboard .now-playing {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(30%, 1fr));
}

.study__multiboard .now-playing a {
  color: #4d4d4d;
  padding: 0.4em;
  transition: background 150ms;
  background: rgba(255, 255, 255, 0.4);
  overflow: hidden;
}

.study__multiboard .now-playing a:nth-child(even) {
  background: #edebe8;
}

.study__multiboard .now-playing a:hover {
  background: rgba(27, 120, 208, 0.4);
  color: #1f1f1f;
}

.study__multiboard .now-playing a.active, .study__multiboard .now-playing a:active {
  background: #629924;
  color: #fff;
}

.study__multiboard .now-playing a cg-board {
  box-shadow: none;
}

.study__multiboard .now-playing .player {
  height: 1.5em;
  white-space: nowrap;
}

.study__multiboard .now-playing .player span {
  margin-left: 0.5em;
}

.study__multiboard .now-playing .name {
  justify-content: center;
  height: 3em;
}

.study__server-eval {
  background: white;
  text-align: center;
}

.study__server-eval.padded {
  padding: 4em;
}

.study__server-eval.ready {
  height: 15em;
}

.advice-summary table:first-child {
  margin-bottom: 1em;
}

.study__message {
  background: white;
  padding: 3em;
  text-align: center;
}

.study__message .button {
  display: inline-block;
  margin: 1em auto;
}

.study__message .spinner {
  margin: 50px auto;
}

.pocket-top {
  grid-area: pocket-top;
}

.pocket-bottom {
  grid-area: pocket-bot;
}

.pocket-c1 {
  max-width: 60px;
}

.analyse.variant-crazyhouse {
  grid-template-rows: auto auto auto auto 50vh;
  grid-template-areas: 'pocket-top' 'board' 'pocket-bot' 'controls' 'tools' 'side' 'acpl' 'under' 'chat' 'uchat';
}

@media (min-width: 800px), (orientation: landscape) {
  .analyse.variant-crazyhouse {
    grid-template-rows: 60px auto 60px;
    grid-template-areas: 'board      gauge pocket-top' 'board      gauge tools' 'board      gauge pocket-bot' 'under      .     controls' 'under      .     acpl' 'under      .     side' 'chat       .     side' 'uchat      .     side';
  }
}

@media (min-width: 1260px) {
  .analyse.variant-crazyhouse {
    grid-template-rows: 60px var(--meta-height) fit-content(0) 60px;
    grid-template-areas: 'side    . board gauge pocket-top' 'side    . board gauge tools' 'chat    . board gauge tools' 'chat    . board gauge pocket-bot' 'uchat   . under .     controls' 'uchat   . under .     acpl';
  }
}

@media (max-width: 799px) and (orientation: portrait) {
  .pocket-top {
    margin-bottom: -2vmin;
  }
  .pocket-bottom {
    margin-top: -2vmin;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
