@charset "UTF-8";
/* Colors */
/* even rows in list or tables, subtle shade of $c-bg-high */
/* Primary: blue */
/* text over primary background */
/* Secondary: green */
/* text over secondary background */
/* Accent: orange */
/* text over accent background */
/* Brag: gold */
/* text over brag background */
/* Error: red */
/* text over brag background */
/* Good: green */
/* Warn: orange */
/* Bad: red */
/* Fancy: pink */
/* text over brag background */
/* Borders */
/* Shadows */
/* even rows in list or tables, subtle shade of $c-bg-high */
/* Primary: blue */
/* Secondary: green */
/* Brag: gold */
/* Fancy: pink */
/* Good: green */
/* Warn: orange */
/* Bad: red */
/* Common imports for all CSS modules */
/* Widths */
/* Heights */
/* Orientations */
/* Capabilities */
/* Aliases */
/* Uniboard: keep the same page layout across pages */
/* when the width is appropriate for col1, but landscape prevents it */
/* atm only chrome supports min-content, max-content */
.piece-letter .tview2 move, .tview2 .piece-letter move, .piece-letter .pv_box .pv span, .pv_box .pv .piece-letter span, .piece-letter .explorer-box .moves td:first-child, .explorer-box .moves .piece-letter td:first-child, .piece-letter .explorer-box .tablebase td:first-child, .explorer-box .tablebase .piece-letter td:first-child, .piece-letter .analyse__fork move, .analyse__fork .piece-letter move, .piece-letter #analyse-cm .title, #analyse-cm .piece-letter .title, .tview2 glyph, .analyse__fork glyph {
  font-family: 'Noto Sans', Sans-Serif;
}

.tview2 move draw, .pv_box .pv span draw, .explorer-box .moves td:first-child draw, .explorer-box .tablebase td:first-child draw, .analyse__fork move draw, #analyse-cm .title draw, .tview2 eval, .tview2 comment .by, .ceval .engine .cloud, .analyse__fork eval, .study__player .analyse__clock {
  font-family: 'Roboto', Sans-Serif;
}

.tview2 move, .pv_box .pv span, .explorer-box .moves td:first-child, .explorer-box .tablebase td:first-child, .analyse__fork move, #analyse-cm .title {
  font-family: 'Noto Chess', 'Noto Sans';
}

.tview2 move draw, .pv_box .pv span draw, .explorer-box .moves td:first-child draw, .explorer-box .tablebase td:first-child draw, .analyse__fork move draw, #analyse-cm .title draw {
  margin-left: 1ch;
  font-weight: normal;
}

/* text printed directly on the page background deserves special treatment (transp theme) */
.analyse__controls .fbt {
  color: #999999;
}

.crosstable__users, .crosstable__score, .crosstable povs:hover, .cmn-toggle + label::after, #analyse-cm .title, .study__player {
  background: linear-gradient(to bottom, #3c3934, #33312e 100%);
}

.cmn-toggle:hover:not(:disabled) + label::after {
  background: linear-gradient(to bottom, #44413b, #3b3935 100%);
  color: #cccccc;
}

.ceval {
  background: linear-gradient(to bottom, #3c3934, #33312e 100%);
}

#modal-wrap, .pv_box .pv-board, .variant-racingKings .cg-wrap.cg-wrap cg-container::before, #analyse-cm, .study-desc .contrib {
  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
}

.fbt {
  background: none;
  border: none;
  outline: none;
  color: #bababa;
}

.cmn-toggle:focus:not(:disabled) + label, .cmn-toggle:hover:not(:disabled) + label {
  box-shadow: 0 0 12px #999999;
}

.tview2 move, .ceval help,
.ceval .engine, .practice__side__title {
  white-space: nowrap;
  overflow: hidden;
}

.tview2 comment .by, .pv_box .pv.pv--nowrap {
  white-space: nowrap;
}

.tview2-column > interrupt > comment {
  overflow-wrap: break-word;
  word-break: break-word;
}

.tview2 comment .by, .pv_box .pv.pv--nowrap, .crosstable__users, .explorer-box .games td span {
  overflow: hidden;
  text-overflow: ellipsis;
}

.pv_box .pv-board .pv-board-square {
  position: relative;
  display: block;
  height: 0;
  padding-bottom: 100%;
  width: 100%;
}

.study-desc .embed {
  position: relative;
  display: block;
  height: 0;
  padding-bottom: 56.25%;
  /* 16/9 */
  width: 100%;
}

.study-desc .embed > * {
  border: none;
}

.cmn-toggle + label::before, .tview2 shapes::before {
  font-size: 1.2em;
  vertical-align: middle;
  font-family: 'lichess';
  font-style: normal;
  font-weight: normal;
  text-transform: none;
  speak: none;
  content: attr(data-icon);
  opacity: 0.9;
}

#modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background: rgba(0, 0, 0, 0.6);
  z-index: 109;
}

.explorer-box .overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 2;
}

.study-desc .embed > *, .pv_box .pv-board .pv-board-square .cg-wrap, #promotion-choice {
  position: absolute;
  width: 100%;
  height: 100%;
}

.cmn-toggle, .analyse-controls {
  touch-action: manipulation;
}

.tview2-column {
  display: flex;
  flex-flow: row wrap;
}

#modal-overlay, .ceval .switch, .analyse__fork, .analyse__fork move, .ps__chapter h3, .ps__chapter .status, .analyse__underboard .setting {
  /* extends %flex-wrap */
  display: flex;
  flex-flow: row wrap;
  align-items: center;
}

#analyse-cm a, .study__player .analyse__clock, .practice__side__title, .practice__side .finally, .ps__chapter {
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
}

.study-desc-form .title {
  /* extends %flex-center */
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  justify-content: space-between;
}

.study__player {
  /* extends %flex-center */
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  justify-content: space-between;
}

#modal-wrap, .continue-with, .crosstable povs, .crosstable__users, .crosstable__score, .crosstable__matchup, .analyse__tools, .action-menu__tools > *, .training-box, .practice__side {
  display: flex;
  flex-flow: column;
}

.crosstable, .analyse__tools, .practice__side, .study-desc, .feedback, #modal-wrap, .tview2-inline move.active, .tview2-inline move:hover, .ceval .engine .cloud, #analyse-cm {
  border-radius: 3px;
}

.crosstable, .analyse__tools, .practice__side {
  overflow: hidden;
  /* helps with clipping background into border-radius */
}

.crosstable .sep, .explorer-box .bar span:first-child, .explorer-box .config .choices span:first-child {
  border-radius: 3px 0 0 3px;
}

.explorer-box .bar span:last-child, .explorer-box .config .choices span:last-child {
  border-radius: 0 3px 3px 0;
}

.study__player-top {
  border-radius: 3px 3px 0 0;
}

.analyse-controls .fbt, .study__player-bot {
  border-radius: 0 0 3px 3px;
}

.study-desc, .feedback, .crosstable, .analyse__tools, .practice__side, #modal-wrap .close:hover, .study__player {
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
}

coords {
  /* handle hidden coords */
  /* handle inner coords */
  position: absolute;
  display: flex;
  pointer-events: none;
  user-select: none;
  color: #fff;
  text-shadow: 0 1px 2px #000;
  font-weight: bold;
  /* negate inner coords colors */
}

.coords-no coords {
  display: none;
}

coords {
  font-size: 8px;
}

@media (min-width: 320px) {
  coords {
    font-size: calc( 8px + 4 * ((100vw - 320px) / 880));
  }
}

@media (min-width: 1200px) {
  coords {
    font-size: 12px;
  }
}

coords.ranks {
  flex-flow: column-reverse;
  top: 1px;
  right: 0;
  height: 100%;
  width: 0.8em;
}

coords.ranks.black {
  flex-flow: column;
}

coords.files {
  bottom: 0px;
  left: 0;
  text-align: left;
  flex-flow: row;
  width: 100%;
  height: 1.4em;
}

coords.files.black {
  flex-flow: row-reverse;
}

coords.files coord {
  padding-left: 4px;
}

coords coord {
  flex: 1 1 auto;
}

coords .is3d .cg-wrap coords coord {
  color: #fff !important;
  text-shadow: 0 1px 2px #000 !important;
}

coords .is3d .cg-wrap coords.files {
  bottom: calc(1px - 2.5%);
}

coords .is3d .cg-wrap coords.files coord {
  padding-left: 3px;
}

:root {
  --cg-coord-color-white: #fff;
  --cg-coord-color-black: #fff;
  --cg-coord-shadow: 0 1px 2px #000;
}

coords {
  text-shadow: var(--cg-coord-shadow);
}

.orientation-white .files coord:nth-child(2n + 1),
.orientation-white .ranks coord:nth-child(2n),
.orientation-black .files coord:nth-child(2n),
.orientation-black .ranks coord:nth-child(2n + 1) {
  color: var(--cg-coord-color-white);
}

.orientation-white .files coord:nth-child(2n),
.orientation-white .ranks coord:nth-child(2n + 1),
.orientation-black .files coord:nth-child(2n + 1),
.orientation-black .ranks coord:nth-child(2n) {
  color: var(--cg-coord-color-black);
}

/* handle outer coords */
@media (min-width: 800px), (orientation: landscape) {
  .coords-out coords {
    text-shadow: none;
  }
  .coords-out coords.ranks {
    right: -15px;
    top: 0;
    width: 12px;
  }
  .coords-out coords.ranks coord {
    transform: translateY(42%);
  }
  .coords-out coords.files {
    bottom: -15px;
    left: 0;
    text-align: center;
  }
  .coords-out coords coord {
    color: #999999 !important;
  }
}

body {
  --board-scale: 1;
}

@media (min-width: 800px) and (min-height: 500px) {
  body {
    --board-scale: calc((var(--zoom) / 100) * 0.7 + 0.3);
  }
}

@media (max-width: 799px) and (orientation: portrait) {
  body {
    --col1: 1;
  }
  .main-board cg-board {
    border-radius: 0;
  }
}

body ::-webkit-scrollbar,
body ::-webkit-scrollbar-corner {
  width: 0.5rem;
  background: #262421;
}

body ::-webkit-scrollbar-thumb {
  background: #4d4d4d;
}

body ::-webkit-scrollbar-thumb:hover,
body ::-webkit-scrollbar-thumb:active {
  background: #6b6b6b;
}

body.resizing {
  user-select: none;
}

cg-resize {
  display: none;
}

@media (min-width: 800px) {
  cg-resize {
    display: block;
    position: absolute;
    right: -9px;
    bottom: -9px;
    width: 22px;
    height: 22px;
    cursor: nwse-resize;
  }
  cg-resize::before, cg-resize::after {
    background: #000;
    content: '';
    position: absolute;
    width: 12px;
    height: 1px;
  }
  cg-resize::before {
    width: 5px;
    transform: translate(7px, 8px) rotate(-45deg);
  }
  cg-resize::after {
    transform: translate(1px, 6px) rotate(-45deg);
  }
  cg-resize:hover {
    border-radius: 50%;
    background: rgba(214, 79, 0, 0.5);
  }
  .resizing cg-resize {
    border-radius: 50%;
    background: rgba(98, 153, 36, 0.5);
  }
}

#modal-overlay {
  justify-content: center;
}

#modal-wrap {
  background: #262421;
  position: relative;
  padding: 2rem;
  text-align: center;
  max-width: 100vw;
  max-height: 96vh;
}

#modal-wrap > div {
  overflow: hidden;
  overflow-y: auto;
}

#modal-wrap .close {
  color: #bababa;
  position: absolute;
  font-size: 16px;
  line-height: 27px;
  width: 32px;
  height: 32px;
  cursor: pointer;
  top: 0;
  right: 0;
  background: none;
}

@media (min-width: 800px) {
  #modal-wrap .close {
    top: -12px;
    right: -12px;
    background: #3c3934;
    border-radius: 50%;
  }
}

#modal-wrap .close:hover {
  background: #cc3333;
  color: #fff;
}

.continue-with > *:not(:first-child) {
  margin-top: 1em;
}

.color-icon.white::before {
  content: 'J';
}

.color-icon.black::before {
  content: 'K';
}

.color-icon.random::before {
  content: 'l';
}

.crosstable__users {
  flex: 1 1 auto;
}

.crosstable {
  width: 100%;
  line-height: 1.9em;
  display: flex;
}

.crosstable fill,
.crosstable povs {
  background: #262421;
  flex: 1 1 auto;
}

.crosstable povs, .crosstable__users, .crosstable__score, .crosstable__matchup {
  text-align: center;
}

.crosstable__users {
  max-width: 40vw;
  text-align: left;
}

.crosstable__users a {
  padding-left: 2vmin;
}

.crosstable__score {
  flex: 0 0 auto;
  font-weight: bold;
}

.crosstable__score span {
  padding: 0 2vmin;
}

.crosstable__matchup {
  flex: 1 1 auto;
  font-weight: bold;
  background: #293a49;
}

.crosstable povs a {
  color: #999999;
  flex: 0 0 50%;
}

.crosstable povs:hover a {
  opacity: 1 !important;
}

.crosstable povs a.loss {
  opacity: 0.2;
}

.crosstable povs.current a {
  background: #a1420a;
  color: #fff;
  opacity: 1 !important;
}

.crosstable povs.new {
  border: #404040;
}

.crosstable povs a.loss {
  opacity: 0.2;
}

@media (max-width: 649px) {
  .crosstable povs {
    display: none;
  }
  .crosstable povs:nth-last-child(-n + 12) {
    display: flex;
  }
}

.crosstable .sep {
  border-left: 1px solid #404040;
  margin-left: 0.3em;
}

.crosstable .win {
  font-weight: bold;
  color: #629924;
}

.crosstable .loss {
  color: #cc3333;
}

.crosstable .unavailable {
  margin-top: 40px;
  opacity: 0.7;
}

.fbt {
  text-transform: uppercase;
  line-height: 1.5;
  transition: all 150ms;
}

@media (hover: hover) {
  .fbt:hover:not(.disabled):not([disabled]) {
    background: #537c23;
    color: #fff;
  }
}

.fbt.active {
  background: #629924 !important;
  color: #fff;
}

.fbt.disabled, .fbt[disabled] {
  opacity: 0.5;
  cursor: default;
}

.cmn-toggle {
  position: absolute;
  margin-left: -99999px;
}

.cmn-toggle + label {
  display: block;
  position: relative;
  cursor: pointer;
  outline: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  padding: 1px;
  width: 40px;
  height: 24px;
  border: 1px solid #404040;
  border-radius: 24px;
}

.cmn-toggle + label::before, .cmn-toggle + label::after {
  display: block;
  position: absolute;
  content: '';
  width: 22px;
  height: 22px;
  bottom: 0.1px;
  left: 0;
}

.cmn-toggle + label::before {
  font-size: 1em;
  z-index: 1;
  text-align: center;
  line-height: 22px;
}

.cmn-toggle + label::after {
  border-radius: 100%;
  box-shadow: 0 1px 2.5px rgba(0, 0, 0, 0.3);
}

.cmn-toggle:not(:checked) + label {
  background-color: #cc3333;
}

.cmn-toggle--subtle:not(:checked) + label {
  background-color: #6b6b6b;
}

.cmn-toggle:checked + label {
  background-color: #629924;
}

.cmn-toggle:disabled + label {
  opacity: 60%;
  cursor: not-allowed !important;
}

.cmn-toggle:hover:not(:disabled) + label {
  transition: background 150ms;
}

.cmn-toggle:hover:not(:disabled) + label::before {
  transition: margin 150ms, color 150ms;
}

.cmn-toggle:hover:not(:disabled) + label::after {
  transition: margin 150ms;
}

.cmn-toggle:not(:checked) + label::before {
  content: 'L';
  color: #cc3333;
}

.cmn-toggle--subtle:not(:checked) + label::before {
  color: #6b6b6b;
}

.cmn-toggle:checked + label::before, .cmn-toggle:checked + label::after {
  margin-left: 16px;
}

.cmn-toggle:checked + label::before {
  content: 'E';
  color: #629924;
}

input.range {
  -webkit-appearance: none;
  background: none;
  border: 0;
}

input.range:focus {
  outline: none;
}

input.range::-webkit-slider-runnable-track {
  width: 100%;
  height: 1em;
  cursor: pointer;
  background: #4d4d4d;
  border-radius: 0.5em;
}

input.range::-webkit-slider-thumb {
  background: linear-gradient(to bottom, #3c3934, #33312e 100%);
  border: 1px solid #6b6b6b;
  height: 1em;
  width: 1.5em;
  border-radius: 12px;
  background: #262421;
  cursor: pointer;
  -webkit-appearance: none;
  margin-top: -0.3px;
}

input.range::-moz-range-track {
  width: 100%;
  height: 1em;
  cursor: pointer;
  background: #4d4d4d;
  border-radius: 0.5em;
}

input.range::-moz-range-thumb {
  background: linear-gradient(to bottom, #3c3934, #33312e 100%);
  border: 1px solid #6b6b6b;
  height: 1em;
  width: 1.5em;
  border-radius: 12px;
  background: #262421;
  cursor: pointer;
}

input.range::-ms-track {
  width: 100%;
  height: 1em;
  cursor: pointer;
  background: #4d4d4d;
  border-radius: 0.5em;
}

input.range::-ms-fill-lower {
  background: rgba(191, 191, 191, 0.78);
  border-radius: 11.8px;
}

input.range::-ms-fill-upper {
  background: rgba(214, 214, 214, 0.78);
  border-radius: 11.8px;
}

input.range::-ms-thumb {
  background: linear-gradient(to bottom, #3c3934, #33312e 100%);
  border: 1px solid #6b6b6b;
  height: 1em;
  width: 1.5em;
  border-radius: 12px;
  background: #262421;
  cursor: pointer;
  border-color: transparent;
  color: transparent;
}

.tview2 move {
  display: inline-block;
  cursor: pointer;
}

.tview2 {
  white-space: normal;
}

.tview2-inline {
  padding: 7px 3px 7px 7px;
}

.tview2 move.inaccuracy {
  color: #56b4e9;
}

.tview2 move.mistake {
  color: #e69f00;
}

.tview2 move.blunder {
  color: #df5353;
}

.tview2-column move {
  font-size: 1.092em;
  padding: 0 2px;
}

.tview2-inline move {
  padding: 0.25em 0.17em;
  white-space: nowrap;
  font-weight: bold;
}

.tview2 move.parent {
  color: #3692e7;
}

.tview2 comment a {
  vertical-align: top;
}

.tview2 move.current {
  border: 1px solid #d64f00;
}

.tview2 move.active {
  font-weight: bold;
  background: #293a49;
}

.tview2 move.nongame {
  font-style: italic;
}

.tview2 move:not(.empty):hover,
.tview2 move:not(.empty):hover index,
.tview2 move:not(.empty):hover eval {
  background: #3692e7;
  color: #fff;
}

.tview2 move.empty {
  color: #6b6b6b;
  cursor: default;
}

.tview2 move index {
  font-size: 90%;
  color: #999999;
}

.tview2 move.context-menu {
  background: #d64f00;
  color: #fff;
}

.tview2 move.context-menu index {
  color: #fff;
}

.tview2-column move index {
  padding-left: 5px;
}

.tview2-column move index:first-child {
  padding-left: 0;
}

.tview2-inline move index {
  padding-right: 0.2em;
  line-height: 111.11%;
}

.tview2 line move {
  color: #bababa;
}

.tview2-column > move {
  flex: 0 0 43.5%;
  display: flex;
  font-size: 1.185em;
  line-height: 1.75em;
  padding: 0 0.3em 0 0.5em;
}

.tview2-column > index + move {
  border-right: #404040;
}

.tview2 eval {
  flex: 3 0 auto;
  text-align: right;
  font-size: 0.8em;
  color: #999999;
}

.tview2 glyph {
  margin-left: 0.08em;
  vertical-align: bottom;
}

.tview2 shapes {
  font-size: 0.7em;
  margin-left: 0.4em;
  text-align: right;
  color: #629924;
}

.tview2 shapes::before {
  content: 'K';
}

.tview2-column > move glyph {
  flex: 0 1 auto;
  text-align: center;
  overflow: hidden;
  font-size: 0.82em;
}

.tview2-column > index {
  flex: 0 0 13%;
  display: flex;
  justify-content: center;
  border-right: 1px solid #404040;
  background: #302e2c;
  line-height: 2.07em;
  color: #6b6b6b;
}

.tview2 > interrupt {
  font-size: 95%;
}

.tview2-column > interrupt {
  flex: 0 0 100%;
  background: #302e2c;
  border-top: 1px solid #404040;
  border-bottom: 1px solid #404040;
  max-width: 100%;
}

.tview2-column > interrupt > comment {
  display: block;
  padding: 3px 5px;
}

.tview2-inline comment {
  vertical-align: 45%;
  word-wrap: break-word;
  margin: 0 0.2em 0 0.1em;
  font-size: 0.9em;
}

.tview2 comment .by {
  display: inline-block;
  vertical-align: -0.3em;
  font-size: 0.9em;
  opacity: 0.8;
  margin-right: 0.4em;
  max-width: 9em;
}

.tview2-column comment.white {
  border-left: 3px solid;
}

.tview2-column comment.black {
  border-right: 3px solid;
  overflow-x: hidden;
}

.tview2-column comment.inaccuracy {
  border-color: #56b4e9;
}

.tview2-column comment.mistake {
  border-color: #e69f00;
}

.tview2-column comment.blunder {
  border-color: #df5353;
}

.tview2-column comment.undefined {
  border-color: #66558c;
}

.tview2 line comment {
  font-size: 90%;
}

.tview2-column line comment {
  display: inline;
  color: #999999;
  word-wrap: break-word;
  padding: 0 5px 0 3px;
  vertical-align: top;
}

.tview2 line comment .by {
  font-size: 1em;
  vertical-align: top;
}

.tview2 lines {
  display: block;
  margin-top: 2px;
  margin-left: 6px;
  margin-bottom: 0.8em;
  border-left: 2px solid #404040;
}

.tview2 > interrupt > lines {
  margin-left: 0px;
}

.tview2 lines.single {
  border-left: none;
}

.tview2 lines:last-child {
  margin-bottom: 0;
}

.tview2 line {
  display: block;
  padding-left: 7px;
}

.tview2-column line {
  margin: 2px 0;
}

.tview2 lines lines move {
  font-size: 13px;
}

.tview2 lines lines {
  margin-left: 1px;
}

.tview2 lines lines::before {
  content: ' ';
  border-top: 2px solid #404040;
  position: absolute;
  margin-left: -11px;
  width: 9px;
  height: 6px;
}

.tview2 lines line::before {
  margin-top: 0.65em;
  margin-left: -8px;
  content: ' ';
  border-top: 2px solid #404040;
  position: absolute;
  width: 8px;
  height: 6px;
}

.tview2 lines lines:last-child {
  margin-bottom: 0;
}

.tview2 inline {
  display: inline;
  font-style: italic;
  font-size: 0.9em;
  opacity: 0.8;
}

.tview2 inline::before,
.tview2 inline::after {
  vertical-align: 0.4em;
  opacity: 0.7;
  font-size: 0.9em;
}

.tview2 inline::before {
  content: '(';
  margin-left: 2px;
}

.tview2 inline::after {
  content: ')';
  margin-right: 2px;
}

.tview2-inline inline::before,
.tview2-inline inline::after {
  vertical-align: 0.7em;
}

.tview2 .conceal {
  opacity: 0.4;
}

.tview2 .hide {
  display: none;
}

.ceval {
  position: relative;
  display: flex;
  align-items: stretch;
}

.ceval.enabled {
  padding-top: 2px;
  height: 40px;
}

.ceval.enabled .show-threat {
  visibility: visible;
}

.ceval .switch {
  flex: 0 0 40px;
  margin-right: 8px;
}

.ceval pearl {
  flex: 0 0 75px;
  line-height: 38px;
  font-size: 1.6em;
  text-align: center;
  font-weight: bold;
}

.ceval help,
.ceval .engine {
  flex: 1 1 auto;
  font-size: 12px;
  line-height: 16px;
  margin-top: 3px;
  color: #999999;
}

.ceval .engine .cloud {
  margin-left: 4px;
  background: #4f7a1d;
  color: #fff;
  padding: 1px 3px;
  text-transform: uppercase;
  font-size: 11px;
}

.ceval .engine .info {
  display: block;
  white-space: nowrap;
}

.ceval .engine .deeper {
  color: #3692e7;
  margin-left: 4px;
}

.ceval .engine .deeper::before {
  vertical-align: -2px;
}

.ceval .technology {
  margin-left: 5px;
}

.ceval .technology.good {
  color: #629924;
}

.ceval .bar {
  position: absolute;
  width: 100%;
  height: 3px;
  top: 0px;
}

@keyframes bar-anim {
  from {
    background-position: 0 0;
  }
  to {
    background-position: 100000px 0;
  }
}

.ceval .bar span {
  display: block;
  height: 3px;
  width: 0;
  background: #629924;
  transition: width 1s;
}

.ceval .bar span.threat {
  background: #cc3333;
}

.ceval.computing .bar span {
  background-image: url("../images/bar-highlight.png");
  animation: bar-anim 1000s linear infinite;
}

.ceval .show-threat {
  flex: 0 99 auto;
  line-height: 38px;
  color: #999999;
  font-size: 0.9em;
  padding-right: 0.5em;
  overflow: hidden;
  visibility: hidden;
}

.ceval .show-threat:hover:not(.hidden), .ceval .show-threat.active {
  color: #cc3333;
}

.ceval .show-threat.hidden {
  opacity: 0.3;
  cursor: default;
}

.pv_box {
  position: relative;
  background: #262421;
  font-size: 13px;
}

.pv_box .pv {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  line-height: 2em;
  border-top: 1px solid #404040;
  padding-right: 14px;
}

.pv_box .pv.pv--nowrap {
  display: block;
  flex-wrap: initial;
  height: 2em;
}

.pv_box .pv[data-uci]:hover {
  background: #323c22;
  cursor: pointer;
}

.pv_box .pv strong {
  display: inline-block;
  width: 34px;
  text-align: center;
}

.pv_box .pv span {
  margin-left: 4px;
}

.pv_box .pv[data-uci] .pv-san:hover {
  color: #3692e7;
}

.pv_box .pv .pv-wrap-toggle {
  position: absolute;
  right: 0;
  padding: 0 4px;
  margin: 0;
  cursor: pointer;
  top: 2px;
}

.pv_box .pv .pv-wrap-toggle:hover {
  background: #629924;
  color: #fff;
}

.pv_box .pv .pv-wrap-toggle::before {
  content: '⯅';
}

.pv_box .pv.pv--nowrap .pv-wrap-toggle {
  transform: rotate(180deg);
}

.pv_box .pv-board {
  position: absolute;
  width: 80%;
  left: 34px;
  max-width: 240px;
  z-index: 1;
}

main {
  --gauge-gap: 8px;
}

@media (min-width: 320px) {
  main {
    --gauge-gap: calc( 8px + 9 * ((100vw - 320px) / 880));
  }
}

@media (min-width: 1200px) {
  main {
    --gauge-gap: 17px;
  }
}

.eval-gauge {
  width: var(--gauge-gap);
  position: relative;
  background: #a0a0a0;
  overflow: hidden;
}

@media (max-width: 799px) and (orientation: portrait) {
  .eval-gauge {
    display: none;
  }
}

.eval-gauge.reverse {
  transform: rotateX(180deg);
}

.eval-gauge::after {
  content: '';
  display: block;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.7) inset;
}

.eval-gauge tick {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  border-bottom: 2px ridge #a0a0a0;
  opacity: 0.4;
}

.eval-gauge tick.zero {
  top: 6px;
  opacity: 1;
  border-bottom: 7px solid rgba(214, 79, 0, 0.4);
  margin-top: -3px;
}

.eval-gauge .black {
  width: 100%;
  height: 50%;
  background: #666;
  transition: height 1s;
}

.analyse-controls {
  display: flex;
  justify-content: space-between;
  align-items: stretch;
  font-size: 1.3rem;
}

.analyse-controls .fbt {
  text-align: center;
}

.analyse-controls .hidden {
  visibility: hidden;
}

.analyse-controls .jumps {
  display: flex;
}

.analyse-controls .jumps .fbt {
  flex: 1 1 30%;
}

.analyse-controls .jumps .fbt:first-child, .analyse-controls .jumps .fbt:last-child {
  flex: 1 1 20%;
  font-size: 0.7em;
}

#promotion-choice {
  background: rgba(22, 21, 18, 0.7);
  z-index: 205;
}

#promotion-choice square {
  cursor: pointer;
  border-radius: 50%;
  background-color: #b0b0b0;
  box-shadow: inset 0 0 25px 3px #808080;
  transition: all 150ms;
}

#promotion-choice piece {
  pointer-events: auto;
  opacity: 1;
  /* cancels blindfold */
}

.is2d #promotion-choice piece {
  width: 100%;
  height: 100%;
  transition: all 150ms;
  transform: scale(0.8);
}

#promotion-choice square:hover {
  box-shadow: inset 0 0 48px 8px #d64f00;
  border-radius: 0%;
}

.is2d #promotion-choice square:hover piece {
  transform: none;
}

.variant-racingKings .cg-wrap.cg-wrap cg-container::before {
  background: rgba(230, 230, 230, 0.2);
  width: 100%;
  height: 12.5%;
  content: '';
  position: absolute;
  left: 0;
  z-index: 1;
  pointer-events: none;
}

.variant-racingKings .cg-wrap.orientation-white cg-container::before {
  top: 0;
}

.variant-racingKings .cg-wrap.orientation-black cg-container::before {
  bottom: 0;
}

.variant-kingOfTheHill cg-container::before {
  width: 25%;
  height: 25%;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.7);
  background: rgba(230, 230, 230, 0.2);
  content: '';
  position: absolute;
  top: 37.5%;
  left: 37.5%;
  z-index: 1;
  pointer-events: none;
}

.analyse__tools .sub-box, .action-menu {
  border-bottom: 1px solid #404040;
}

@media (min-width: 800px), (orientation: landscape) {
  .analyse__tools .sub-box, .action-menu {
    border-bottom: 3px solid #629924;
  }
}

body {
  /* prevents scroll bar flicker on page height changes */
  overflow-y: scroll;
}

#main-wrap {
  --main-max-width: calc(100vh - calc(var(--site-header-height) + var(--site-header-margin)) - 3rem);
}

@media (min-width: 800px), (orientation: landscape) {
  #main-wrap {
    --main-max-width: auto;
  }
}

.analyse {
  grid-area: main;
  display: grid;
  --meta-height: auto;
  grid-template-rows: auto auto minmax(20em, 30vh);
  grid-template-areas: 'board' 'controls' 'tools' 'side' 'acpl' 'under' 'chat' 'uchat';
}

.analyse__side {
  grid-area: side;
  justify-content: start;
  margin: 2vmin;
}

.analyse__board,
.analyse .relay-tour {
  grid-area: board;
}

.analyse__tools {
  grid-area: tools;
}

.analyse__controls {
  grid-area: controls;
}

.analyse__underboard {
  grid-area: under;
}

@media (max-width: 799px) and (orientation: portrait) {
  .analyse__underboard {
    overflow: hidden;
  }
}

.analyse__acpl {
  grid-area: acpl;
}

.analyse .chat__members {
  grid-area: uchat;
}

.analyse .eval-gauge {
  grid-area: gauge;
  display: none;
}

@supports (height: max-content) {
  .analyse {
    --meta-height: max-content;
  }
}

@media (min-width: 800px), (orientation: landscape) {
  .analyse {
    grid-template-columns: minmax(calc(70vmin * var(--board-scale)), calc(100vh * var(--board-scale) - calc(var(--site-header-height) + var(--site-header-margin)) - 3rem)) var(--gauge-gap) minmax(240px, 400px);
    grid-template-rows: fit-content(0);
    grid-template-areas: 'board      gauge tools' 'under      .     controls' 'under      .     acpl' 'under      .     side' 'chat       .     side' 'uchat      .     side';
    grid-row-gap: 0;
  }
  .analyse__side,
  .analyse .chat__members,
  .analyse .mchat {
    margin: 2vmin 0 0 0;
  }
  .analyse__underboard {
    margin-top: 2vmin;
  }
  .analyse .eval-gauge {
    display: block;
  }
}

@media (max-width: 799px) and (orientation: landscape) {
  .analyse {
    grid-template-columns: minmax(calc(55vmin), calc(100vh - calc(var(--site-header-height) + var(--site-header-margin)) - 2vmin)) var(--gauge-gap) minmax(200px, 240px);
  }
}

@media (min-width: 1260px) {
  .analyse {
    grid-template-columns: minmax(230px, 20vw) 2vmin minmax(calc(70vmin * var(--board-scale)), calc(100vh * var(--board-scale) - calc(var(--site-header-height) + var(--site-header-margin)) - 3rem)) var(--gauge-gap) minmax(240px, 400px);
    grid-template-rows: var(--meta-height) fit-content(0) 2.5em auto;
    grid-template-areas: 'side    . board gauge tools' 'chat    . board gauge tools' 'uchat   . under .     controls' 'uchat   . under .     acpl';
  }
  .analyse__side {
    margin-top: 0;
  }
  .analyse .mchat {
    min-height: 10em;
  }
  .analyse .crosstable__users {
    flex: 7 1 auto;
  }
}

.analyse__tools {
  background: #262421;
}

.analyse__tools .ceval {
  flex: 0 0 38px;
}

.analyse__tools .sub-box {
  user-select: none;
}

.analyse__tools .sub-box .title {
  font-size: 0.9rem;
  line-height: 1.9em;
  background: #3e5322;
  padding: 0 7px;
}

.analyse__moves {
  flex: 2 1 0;
  overflow-y: auto;
  overflow-x: hidden;
  border-top: 1px solid #404040;
  position: relative;
  /* required so line::before scrolls along the moves! */
}

.analyse__moves .result,
.analyse__moves .status {
  background: #302e2c;
  text-align: center;
}

.analyse__moves .result {
  border-top: 1px solid #404040;
  font-weight: bold;
  font-size: 1.2em;
  padding: 5px 0 3px 0;
}

.analyse__moves .status {
  font-size: 1em;
  font-style: italic;
  padding-bottom: 7px;
}

.analyse__controls {
  height: 3rem;
  align-items: stretch;
}

.analyse__controls div {
  display: flex;
  flex: 1 1 auto;
  align-items: stretch;
}

.analyse__controls .jumps {
  flex: 3 1 auto;
}

.analyse__controls .fbt {
  flex: 0 0 2.5rem;
}

.analyse__controls .active {
  margin-top: -3px;
  padding-top: 3px;
}

.analyse__controls ::before {
  vertical-align: middle;
}

.action-menu {
  flex: 1 1 0;
  display: flex;
  flex-flow: column;
  overflow: auto;
  padding: 2vmin;
}

.action-menu h2 {
  font-size: 1em;
  text-transform: uppercase;
  text-align: center;
  white-space: nowrap;
  margin: 2vmin 0 3px 0;
  display: table;
  padding: 0 10px;
}

.action-menu h2:before, .action-menu h2:after {
  border-top: 1px solid #404040;
  content: '';
  display: table-cell;
  position: relative;
  top: 0.5em;
  width: 45%;
}

.action-menu h2:before {
  right: 8px;
}

.action-menu h2:after {
  left: 8px;
}

.action-menu__tools {
  flex: 0 0 auto;
  display: flex;
  flex-flow: row wrap;
}

.action-menu__tools > * {
  flex: 0 0 50%;
  text-align: center;
  padding: 0;
  height: 75px;
  justify-content: center;
}

.action-menu__tools .button {
  color: #bababa;
  text-transform: none;
  white-space: normal;
}

.action-menu__tools .button::before {
  display: block;
  font-size: 2em;
  line-height: 1em;
  margin-bottom: 5px;
}

.action-menu .autoplay {
  display: flex;
}

.action-menu .autoplay a {
  color: #999999;
  font-size: 0.9em;
  flex: 1 1 auto;
  padding: 7px 0;
  text-align: center;
}

.action-menu form.delete {
  text-align: right;
  margin-top: 6px;
}

.action-menu form.delete .button {
  display: inline-block;
  padding: 0 8px;
}

.action-menu form.delete .button::before {
  font-size: 1.2em;
}

.action-menu .setting {
  flex: 0 0 auto;
  margin-top: 2vmin;
  display: flex;
}

.action-menu .setting label {
  flex: 4 1 auto;
  cursor: pointer;
  white-space: nowrap;
}

.action-menu .setting input[type='range'] {
  flex: 1 4 auto;
  padding: 0 0 0 1em;
  height: 1.6em;
  width: 100%;
}

.action-menu .setting input[type='range'][min='0'] {
  padding: 0;
}

.action-menu .setting .range_value {
  flex: 0 0 auto;
  display: block;
  text-align: right;
}

@media (max-width: 799px) and (orientation: portrait) {
  .action-menu .abset-inline {
    display: none;
  }
}

.explorer-box {
  position: relative;
  flex: 2.5 1 0px;
  white-space: nowrap;
  transition: all 150ms;
  transition-delay: 0.3s;
  overflow-y: scroll;
  font-size: 0.9em;
}

.explorer-box.reduced {
  flex: 0.3 3 0px;
}

.explorer-box.reduced:hover {
  flex: 1 2 0px;
}

.explorer-box .overlay {
  display: none;
}

.explorer-box.loading .overlay {
  display: block;
}

.explorer-box tbody {
  transition: all 150ms;
}

.explorer-box.loading tbody {
  opacity: 0.4;
}

.explorer-box .title span {
  display: block;
  margin-right: 1.9em;
  overflow: hidden;
  text-overflow: ellipsis;
  user-select: text;
}

.explorer-box .empty {
  display: flex;
  flex-flow: column;
  height: 100%;
}

.explorer-box .empty .message {
  text-align: center;
}

.explorer-box tr {
  transition: all 150ms;
}

.explorer-box tr:nth-child(even) {
  background: #302e2c;
}

.explorer-box tr:hover {
  background: #323c22;
}

.explorer-box td {
  cursor: pointer;
  padding-left: 7px;
}

.explorer-box .moves td:first-child {
  line-height: 30px;
  padding-left: 7px;
}

.explorer-box .moves td:nth-child(2) {
  font-size: 0.75em;
  text-align: right;
}

.explorer-box .moves td:last-child {
  width: 100%;
  padding-right: 7px;
}

.explorer-box .bar span {
  text-align: center;
  display: inline-block;
  overflow: hidden;
  vertical-align: middle;
  border: 0 solid #404040;
  border-width: 1px 0;
  height: 16px;
  line-height: 14px;
  font-size: 0.9em;
}

.explorer-box .white {
  background: #ccc;
  box-shadow: 0 -5px 7px rgba(0, 0, 0, 0.25) inset;
  color: #222;
}

.explorer-box .draws,
.explorer-box .black {
  color: #ddd;
  box-shadow: 0 5px 7px rgba(255, 255, 255, 0.1) inset;
}

.explorer-box .draws {
  background: #666;
}

.explorer-box .black {
  background: #333;
  color: #ddd;
}

.explorer-box .bar span:first-child {
  border-left-width: 1px;
}

.explorer-box .bar span:last-child {
  border-right-width: 1px;
}

.explorer-box .games {
  width: 100%;
}

.explorer-box .games td {
  padding: 5px 0 5px 7px;
  max-width: 110px;
}

.explorer-box .games td span {
  display: block;
}

.explorer-box .games result {
  display: block;
  text-align: center;
  padding: 3px 5px;
  border-radius: 3px;
  font-size: 0.9em;
}

.explorer-box .game_menu {
  background: #629924;
  cursor: default;
  padding: 0;
}

.explorer-box .game_menu .game_title {
  text-align: center;
  color: #fff;
  margin: 3px 0 1px 0;
}

.explorer-box .game_menu .menu {
  display: flex;
  justify-content: space-between;
  text-transform: uppercase;
}

.explorer-box .game_menu .menu a {
  color: #fff;
  padding: 4px 8px;
}

.explorer-box .game_menu .menu a:hover {
  background: rgba(255, 255, 255, 0.2);
}

.explorer-box .tablebase {
  width: 100%;
}

.explorer-box .tablebase td:first-child {
  font-size: 14px;
  line-height: 30px;
  padding-left: 7px;
}

.explorer-box .tablebase td:last-child {
  padding-right: 7px;
  text-align: right;
}

.explorer-box .tablebase result {
  padding: 3px 5px;
  margin-left: 5px;
  border-radius: 3px;
  font-size: 0.9em;
}

.explorer-box .toconf {
  position: absolute;
  top: 0;
  right: 0;
  cursor: pointer;
  display: block;
  font-size: 1.2em;
  width: 1.5em;
  line-height: 1.5em;
  text-align: center;
  opacity: 0.8;
}

.explorer-box .toconf:hover {
  opacity: 1;
}

.explorer-box .message {
  text-align: center;
  font-style: italic;
  flex: 1 1 100%;
  display: flex;
  flex-flow: column;
  justify-content: center;
}

.explorer-box.reduced .message {
  justify-content: flex-start;
}

.explorer-box .message strong {
  font-weight: bold;
  margin: 1em 0;
}

.explorer-box:not(.reduced) .message h3,
.explorer-box.reduced:hover .message h3 {
  font-weight: bold;
}

.explorer-box .message p {
  white-space: normal;
  padding: 0 8px;
  margin: 0 0 8px 0;
}

.explorer-box.reduced .message p,
.explorer-box.reduced .message button {
  display: none;
}

.explorer-box.reduced:hover .message p,
.explorer-box.reduced:hover .message button {
  display: block;
}

.explorer-box .message button {
  margin: 0 30px;
}

.explorer-box .message.masters i {
  font-size: 40px;
  margin: 10px 0;
}

.explorer-box .config section {
  margin: 0.4em 2vmin 0 2vmin;
}

.explorer-box .config section.save {
  text-align: center;
  padding: 15px 0 10px 0;
}

.explorer-box .config label {
  font-weight: bold;
  display: block;
  line-height: 2em;
}

.explorer-box .config .choices {
  display: flex;
}

.explorer-box .config .choices span {
  flex-grow: 1;
  padding: 5px 0;
  text-align: center;
  cursor: pointer;
  transition: all 150ms;
  border: 1px solid #404040;
  border-width: 1px 0 1px 1px;
  text-transform: capitalize;
}

.explorer-box .config .choices span:last-child {
  border-right-width: 1px;
}

.explorer-box .config .choices span:hover {
  background: #fff;
}

.explorer-box .config .choices span.selected {
  background: #629924;
  color: #fff;
  text-shadow: 1px 0 0 rgba(0, 0, 0, 0.5);
  font-weight: bold;
  box-shadow: 0 3px 5px rgba(0, 0, 0, 0.2) inset;
}

.training-box {
  flex: 1.5 1 0px;
}

.training-box .feedback {
  flex: 1 1 100%;
  display: flex;
  flex-flow: column;
  justify-content: center;
}

.training-box .progress {
  margin-top: 5px;
  opacity: 0.8;
  width: 100%;
  height: 4px;
  background: #4d4d4d;
}

.training-box .progress div {
  background: #629924;
  height: 4px;
  transition: width 0.5s;
  max-width: 100%;
}

.training-box .player {
  display: flex;
  align-items: center;
  margin-left: 10px;
}

.training-box .no-square {
  width: 64px;
  height: 64px;
  margin-right: 10px;
}

.is3d .training-box div.no-square {
  height: 82px;
}

.training-box piece {
  position: inherit;
  display: block;
  width: 100% !important;
  height: 100% !important;
}

.training-box .icon {
  display: block;
  width: 64px;
  height: 64px;
  margin-right: 10px;
  font-size: 50px;
  font-size: 64px;
  line-height: 64px;
  text-align: center;
}

.training-box .instruction > * {
  display: block;
}

.training-box .instruction > strong {
  font-weight: normal;
  font-size: 1.2em;
}

.training-box .choices {
  line-height: 1.6em;
  margin: 5px 0 -5px 0;
}

.training-box .choices a {
  display: block;
}

.practice-box {
  flex: 0 0 135px;
  user-select: none;
}

.practice-box .comment {
  flex: 0 0 30px;
  display: flex;
  align-items: stretch;
  background: #302e2c;
  border-top: 1px solid 1px solid #404040;
  white-space: nowrap;
  line-height: 30px;
}

.practice-box .progress div {
  background: #4d4d4d;
}

.practice-box.goodMove .progress div {
  background: #629924;
  color: #fff;
}

.practice-box.inaccuracy .title,
.practice-box.inaccuracy .progress div {
  background: #bf811d;
  color: #fff;
}

.practice-box.mistake .title,
.practice-box.blunder .title,
.practice-box.mistake .progress div,
.practice-box.blunder .progress div {
  background: #cc3333;
  color: #fff;
}

.practice-box .comment .wait {
  padding-left: 15px;
}

.practice-box .verdict {
  font-weight: bold;
  margin-right: 10px;
  display: flex;
}

.practice-box .verdict::before {
  width: 30px;
  height: 100%;
  color: #fff;
  margin-right: 7px;
  text-align: center;
  font-size: 1.4em;
  font-weight: normal;
}

.practice-box.goodMove .verdict {
  color: #629924;
}

.practice-box.goodMove .verdict::before {
  background: #629924;
  content: '✓';
  font-size: 1.7em;
}

.practice-box.inaccuracy .verdict {
  color: #bf811d;
}

.practice-box.inaccuracy .verdict::before {
  background: #bf811d;
  content: '?';
}

.practice-box.mistake .verdict,
.practice-box.blunder .verdict {
  color: #cc3333;
}

.practice-box.mistake .verdict::before,
.practice-box.blunder .verdict::before {
  background: #cc3333;
  content: '✗';
}

.practice-box .comment move {
  cursor: pointer;
  margin-left: 5px;
  color: #3692e7;
  transition: 0.3s;
}

.analyse__fork {
  flex: 0 0 auto;
}

@media (max-width: 799px) and (orientation: portrait) {
  .analyse__fork {
    display: none;
  }
}

.analyse__fork move {
  background: #2a4053;
  color: #cccccc;
  flex: 0 0 50%;
  cursor: pointer;
  padding: 0.2em 1em;
  border-bottom: 1px solid #262421;
}

.analyse__fork move:nth-child(odd) {
  border-right: 1px solid #262421;
}

.analyse__fork move:hover,
.analyse__fork:not(:hover) move.selected {
  background: #3692e7;
  color: #fff;
}

.analyse__fork glyph {
  margin-left: 2px;
}

.analyse__fork eval {
  flex: 3 0 auto;
  text-align: right;
  font-size: 0.9em;
}

.analyse__side {
  align-self: start;
}

.analyse__side .back-to-game {
  margin-top: 2em;
  text-align: center;
}

@media (min-width: 1260px) {
  .analyse__side .back-to-game {
    margin-top: 10vh;
  }
}

.analyse__side .back-to-game .button {
  margin: 0 auto;
}

#analyse-cm {
  background: #262421;
  position: absolute;
  display: none;
  z-index: 107;
  cursor: default;
  user-select: none;
}

#analyse-cm.visible {
  display: block;
}

#analyse-cm .title {
  padding: 0.4em;
  text-align: center;
  font-size: 1.2em;
  border-bottom: 1px solid #404040;
  margin: 0;
}

#analyse-cm a {
  color: #bababa;
  padding: 0.5em 0.6em 0.5em 0.3em;
}

#analyse-cm a::before {
  width: 2em;
  text-align: center;
}

#analyse-cm a:hover {
  background: #38291e;
}

.study-desc {
  background: #262421;
  padding: 0.7em 1em;
  margin-top: 0.5em;
  position: relative;
}

.study-desc.empty {
  text-align: center;
}

.study-desc.empty .button {
  display: inline-block;
  margin: 2em auto;
}

.study-desc .contrib {
  position: absolute;
  top: 0;
  right: 0;
  background: #38291e;
  padding: 0.5em 0.8em;
  display: none;
  z-index: 1;
}

.study-desc:hover .contrib {
  display: block;
}

.study-desc .contrib a {
  margin-left: 8px;
}

.study-desc .embed {
  width: calc(100% + 2em);
  margin: -0.7em -1em;
}

.study-desc-form .title {
  width: 100%;
}

.study-desc-form textarea {
  width: 100%;
  height: 12em;
}

.analyse.has-players cg-board {
  border-radius: 0;
}

@media (min-width: 800px), (orientation: landscape) {
  .analyse.has-players .analyse__underboard {
    margin-top: calc(0.8rem + 1vmin);
  }
}

@media (max-width: 799px) and (orientation: portrait) {
  .analyse.has-players .analyse__controls {
    margin-top: 1.6rem;
  }
}

.study__player {
  position: absolute;
  left: 0;
  right: 0;
  font-weight: bold;
  height: 1.6rem;
  white-space: nowrap;
}

.study__player-top {
  top: -1.6rem;
}

.study__player-bot {
  bottom: -1.6rem;
}

.study__player .left {
  flex: 1 1 100%;
  display: flex;
}

.study__player .result {
  flex: 0 0 auto;
  margin-left: 0.8em;
  padding-right: 0.8em;
  border-right: 1px solid #404040;
}

.study__player .analyse__clock {
  align-self: stretch;
  font-size: 1.2em;
  padding: 0 0.8em;
  border-radius: 0 4px 0 0;
}

.study__player-bot .analyse__clock {
  border-radius: 0 0 4px 0;
}

.study__player.ticking .analyse__clock {
  background: #629924;
  color: #fff;
  text-shadow: none;
}

.study__player .info {
  margin-left: 10px;
}

.study__player .elo {
  margin-left: 0.5em;
  font-weight: normal;
}

i.practice {
  background: url("../images/practice/help.svg");
  background-size: cover;
}

.ptQ1LLvm {
  background-image: url("../images/practice/backstab.svg");
}

.E1lqtqFt {
  background-image: url("../images/practice/arrowed.svg");
}

.xebrDvFe {
  background-image: url("../images/practice/key.svg");
}

.A4ujYOer {
  background-image: url("../images/practice/push.svg");
}

.\39 ogFv8Ac {
  background-image: url("../images/practice/voodoo-doll.svg");
}

.Qj281y1p {
  background-image: url("../images/practice/trident.svg");
}

.tuoBxVE5 {
  background-image: url("../images/practice/pierced-body.svg");
}

.BJy6fEDf {
  background-image: url("../images/practice/stone-pile.svg");
}

.Rg2cMBZ6 {
  background-image: url("../images/practice/stone-spear.svg");
}

.fE4k21MW {
  background-image: url("../images/practice/pocket-bow.svg");
}

.\38 yadFPpU {
  background-image: url("../images/practice/sword-in-stone.svg");
}

.PDkQDt6u {
  background-image: url("../images/practice/catapult.svg");
}

.\39 \36 Lij7wH {
  background-image: url("../images/practice/musket.svg");
}

.o734CNqp {
  background-image: url("../images/practice/breaking-chain.svg");
}

.\39 cKgYrHb {
  background-image: url("../images/practice/cement-shoes.svg");
}

.MnsJEWnI {
  background-image: url("../images/practice/boxing-glove-surprise.svg");
}

.ITWY4GN2 {
  background-image: url("../images/practice/two-shadows.svg");
}

.s5pLU7Of {
  background-image: url("../images/practice/trojan-horse.svg");
}

.g1fxVZu9 {
  background-image: url("../images/practice/bolt-shield.svg");
}

.RUQASaZm {
  background-image: url("../images/practice/rogue.svg");
}

.\39 c6GrCTk {
  background-image: url("../images/practice/siege-tower.svg");
}

.Z1DKk4Rl {
  background-image: url("../images/practice/stone-crafting.svg");
}

.ByhlXnmM {
  background-image: url("../images/practice/ghost-ally.svg");
}

.pt20yRkT {
  background-image: url("../images/practice/stone-tower.svg");
}

.MkDViieT {
  background-image: url("../images/practice/guarded-tower.svg");
}

.analyse {
  grid-template-rows: auto;
  grid-template-areas: 'board' 'controls' 'under' 'tools' 'side';
}

.analyse .practice__side {
  grid-area: side;
  margin-top: 2vmin;
}

.analyse__acpl {
  display: none;
}

@media (min-width: 800px), (orientation: landscape) {
  .analyse {
    grid-template-areas: 'board gauge tools' 'under .     controls' 'side  .     .';
  }
}

@media (min-width: 1260px) {
  .analyse {
    grid-template-rows: fit-content(0);
    grid-template-areas: 'side    . board gauge tools' '.       . under .     controls';
  }
  .analyse .practice__side {
    margin-top: 0;
  }
}

.practice__side {
  background: #262421;
}

.practice__side__title {
  flex: 0 0 auto;
  padding: 0.7em;
  background: #3692e7;
  color: #fff;
}

.practice__side__title i {
  flex: 0 0 3.5em;
  height: 3.5em;
  margin-right: 0.6rem;
  opacity: 0.9;
}

.practice__side__title h1 {
  font-size: 1.2em;
  margin: 0;
}

.practice__side__title em {
  font-size: 0.9em;
  opacity: 0.9;
}

.practice__side__chapters {
  flex: 1 1 auto;
  overflow-y: auto;
}

.practice__side .finally {
  flex: 0 0 auto;
  padding: 0.7em 0.7em 0.7em 0;
  background: #3c3934;
  font-size: 0.9em;
}

.practice__side .finally .back {
  flex: 0 0 2.5rem;
  text-align: center;
  margin-right: 0.3rem;
  font-size: 1.25em;
}

.practice__side .finally select {
  flex: 1 1 auto;
}

.ps__chapter {
  border-bottom: 1px solid #404040;
  align-items: stretch;
  color: #bababa;
  transition: all 150ms;
}

.ps__chapter h3 {
  padding: 0.5rem 0 0.5rem 0.3rem;
}

.ps__chapter .status {
  flex: 0 0 2.5rem;
  justify-content: center;
  opacity: 1;
  font-size: 1.25em;
  color: #4d4d4d;
}

.ps__chapter .status.done {
  color: #3692e7;
}

.ps__chapter:hover {
  background: #282f35;
}

.ps__chapter.active {
  background: #282f35;
}

.ps__chapter.active .status {
  background: #3692e7;
  color: #fff;
}

@keyframes soft-bright {
  50% {
    filter: brightness(1.2);
  }
}

.feedback {
  display: flex;
  background: #262421;
  justify-content: center;
}

.feedback.win, .feedback.fail {
  padding: 2em 1.5em;
  background: #629924;
  color: #fff;
  animation: 1.7s soft-bright ease-in-out infinite;
  opacity: 0.8;
  transition: all 150ms;
}

.feedback.fail {
  background: #cc3333;
}

.feedback:hover {
  opacity: 1;
}

.feedback span {
  margin-right: 1em;
}

.feedback.ongoing {
  align-items: flex-start;
  flex-flow: column;
  text-align: left;
  padding: 1em 1.5em;
}

.feedback .goal {
  margin-bottom: 0.8em;
  text-align: center;
  font-size: 1.2em;
  width: 100%;
  margin-bottom: 10px;
}

.feedback .comment {
  width: 100%;
  display: block;
}

.feedback .comment iframe {
  margin: 10px 0;
}

.analyse__underboard .setting {
  margin-top: 1em;
}

.analyse__underboard .setting > label {
  order: 1;
  flex: 1 0;
  cursor: pointer;
  margin-left: 0.8em;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5hbHlzZS9jc3MvYnVpbGQvYW5hbHlzZS5wcmFjdGljZS5kYXJrLmNzcyIsInNvdXJjZXMiOlsiYW5hbHlzZS9jc3MvYnVpbGQvYW5hbHlzZS5wcmFjdGljZS5kYXJrLnNjc3MiLCJjb21tb24vY3NzL3RoZW1lL19kYXJrLnNjc3MiLCJjb21tb24vY3NzL3RoZW1lL19kZWZhdWx0LnNjc3MiLCJjb21tb24vY3NzL2Fic3RyYWN0L19mdW5jdGlvbnMuc2NzcyIsImFuYWx5c2UvY3NzL2J1aWxkL19hbmFseXNlLnByYWN0aWNlLnNjc3MiLCJhbmFseXNlL2Nzcy9idWlsZC9fYW5hbHlzZS5iYXNlLnNjc3MiLCJjb21tb24vY3NzL19wbHVnaW4uc2NzcyIsIi4uL25vZGVfbW9kdWxlcy9icmVha3BvaW50LXNhc3Mvc3R5bGVzaGVldHMvX2JyZWFrcG9pbnQuc2NzcyIsIi4uL25vZGVfbW9kdWxlcy9icmVha3BvaW50LXNhc3Mvc3R5bGVzaGVldHMvYnJlYWtwb2ludC9fc2V0dGluZ3Muc2NzcyIsIi4uL25vZGVfbW9kdWxlcy9icmVha3BvaW50LXNhc3Mvc3R5bGVzaGVldHMvYnJlYWtwb2ludC9fY29udGV4dC5zY3NzIiwiLi4vbm9kZV9tb2R1bGVzL2JyZWFrcG9pbnQtc2Fzcy9zdHlsZXNoZWV0cy9icmVha3BvaW50L19oZWxwZXJzLnNjc3MiLCIuLi9ub2RlX21vZHVsZXMvYnJlYWtwb2ludC1zYXNzL3N0eWxlc2hlZXRzL2JyZWFrcG9pbnQvX3BhcnNlcnMuc2NzcyIsIi4uL25vZGVfbW9kdWxlcy9icmVha3BvaW50LXNhc3Mvc3R5bGVzaGVldHMvYnJlYWtwb2ludC9wYXJzZXJzL19xdWVyeS5zY3NzIiwiLi4vbm9kZV9tb2R1bGVzL2JyZWFrcG9pbnQtc2Fzcy9zdHlsZXNoZWV0cy9icmVha3BvaW50L3BhcnNlcnMvX3NpbmdsZS5zY3NzIiwiLi4vbm9kZV9tb2R1bGVzL2JyZWFrcG9pbnQtc2Fzcy9zdHlsZXNoZWV0cy9icmVha3BvaW50L3BhcnNlcnMvc2luZ2xlL19kZWZhdWx0LnNjc3MiLCIuLi9ub2RlX21vZHVsZXMvYnJlYWtwb2ludC1zYXNzL3N0eWxlc2hlZXRzL2JyZWFrcG9pbnQvcGFyc2Vycy9fZG91YmxlLnNjc3MiLCIuLi9ub2RlX21vZHVsZXMvYnJlYWtwb2ludC1zYXNzL3N0eWxlc2hlZXRzL2JyZWFrcG9pbnQvcGFyc2Vycy9kb3VibGUvX2RlZmF1bHQtcGFpci5zY3NzIiwiLi4vbm9kZV9tb2R1bGVzL2JyZWFrcG9pbnQtc2Fzcy9zdHlsZXNoZWV0cy9icmVha3BvaW50L3BhcnNlcnMvZG91YmxlL19kb3VibGUtc3RyaW5nLnNjc3MiLCIuLi9ub2RlX21vZHVsZXMvYnJlYWtwb2ludC1zYXNzL3N0eWxlc2hlZXRzL2JyZWFrcG9pbnQvcGFyc2Vycy9kb3VibGUvX2RlZmF1bHQuc2NzcyIsIi4uL25vZGVfbW9kdWxlcy9icmVha3BvaW50LXNhc3Mvc3R5bGVzaGVldHMvYnJlYWtwb2ludC9wYXJzZXJzL190cmlwbGUuc2NzcyIsIi4uL25vZGVfbW9kdWxlcy9icmVha3BvaW50LXNhc3Mvc3R5bGVzaGVldHMvYnJlYWtwb2ludC9wYXJzZXJzL3RyaXBsZS9fZGVmYXVsdC5zY3NzIiwiLi4vbm9kZV9tb2R1bGVzL2JyZWFrcG9pbnQtc2Fzcy9zdHlsZXNoZWV0cy9icmVha3BvaW50L3BhcnNlcnMvX3Jlc29sdXRpb24uc2NzcyIsIi4uL25vZGVfbW9kdWxlcy9icmVha3BvaW50LXNhc3Mvc3R5bGVzaGVldHMvYnJlYWtwb2ludC9wYXJzZXJzL3Jlc29sdXRpb24vX3Jlc29sdXRpb24uc2NzcyIsIi4uL25vZGVfbW9kdWxlcy9icmVha3BvaW50LXNhc3Mvc3R5bGVzaGVldHMvYnJlYWtwb2ludC9fbm8tcXVlcnkuc2NzcyIsIi4uL25vZGVfbW9kdWxlcy9icmVha3BvaW50LXNhc3Mvc3R5bGVzaGVldHMvYnJlYWtwb2ludC9fcmVzcG9uZC10by5zY3NzIiwiLi4vbm9kZV9tb2R1bGVzL2JyZWFrcG9pbnQtc2Fzcy9zdHlsZXNoZWV0cy9icmVha3BvaW50L19sZWdhY3ktc2V0dGluZ3Muc2NzcyIsImNvbW1vbi9jc3MvYWJzdHJhY3QvX2FsbC5zY3NzIiwiY29tbW9uL2Nzcy9hYnN0cmFjdC9fei1pbmRleC5zY3NzIiwiY29tbW9uL2Nzcy9hYnN0cmFjdC9fbWVkaWEtcXVlcmllcy5zY3NzIiwiY29tbW9uL2Nzcy9hYnN0cmFjdC9fdmFyaWFibGVzLnNjc3MiLCJjb21tb24vY3NzL2Fic3RyYWN0L191bmlib2FyZC5zY3NzIiwiY29tbW9uL2Nzcy9hYnN0cmFjdC9fbWl4aW5zLnNjc3MiLCJjb21tb24vY3NzL2Fic3RyYWN0L19leHRlbmRzLnNjc3MiLCJjb21tb24vY3NzL2Fic3RyYWN0L19mbGV4LnNjc3MiLCJjb21tb24vY3NzL2Fic3RyYWN0L19ib3guc2NzcyIsImNvbW1vbi9jc3MvYWJzdHJhY3QvX2ZsdWlkLXNpemUuc2NzcyIsImNvbW1vbi9jc3MvdmVuZG9yL2NoZXNzZ3JvdW5kL19jb29yZHMuc2NzcyIsImNvbW1vbi9jc3MvdmVuZG9yL2NoZXNzZ3JvdW5kL19jb29yZHMtY29sb3JzLnNjc3MiLCJjb21tb24vY3NzL2xheW91dC9fdW5pYm9hcmQuc2NzcyIsImNvbW1vbi9jc3MvYmFzZS9fc2Nyb2xsYmFyLnNjc3MiLCJjb21tb24vY3NzL2NvbXBvbmVudC9fYm9hcmQtcmVzaXplLnNjc3MiLCJjb21tb24vY3NzL2NvbXBvbmVudC9fbW9kYWwuc2NzcyIsImNvbW1vbi9jc3MvY29tcG9uZW50L19jb250aW51ZS13aXRoLnNjc3MiLCJjb21tb24vY3NzL2NvbXBvbmVudC9fY29sb3ItaWNvbi5zY3NzIiwiY29tbW9uL2Nzcy9jb21wb25lbnQvX2Nyb3NzdGFibGUuc2NzcyIsImNvbW1vbi9jc3MvY29tcG9uZW50L19mYnQuc2NzcyIsImNvbW1vbi9jc3MvZm9ybS9fY21uLXRvZ2dsZS5zY3NzIiwiY29tbW9uL2Nzcy9mb3JtL19yYW5nZS5zY3NzIiwidHJlZS9jc3MvX3RyZWUuc2NzcyIsInRyZWUvY3NzL19leHRlbmQuc2NzcyIsImNldmFsL2Nzcy9fY2V2YWwuc2NzcyIsImNldmFsL2Nzcy9fY3RybC5zY3NzIiwiY2V2YWwvY3NzL19wdi5zY3NzIiwiY2V2YWwvY3NzL19ldmFsLWdhdWdlLnNjc3MiLCJjaGVzcy9jc3MvX2NvbnRyb2wuc2NzcyIsImNoZXNzL2Nzcy9fcHJvbW90aW9uLnNjc3MiLCJjaGVzcy9jc3MvX3ZhcmlhbnQtc3R5bGUuc2NzcyIsImFuYWx5c2UvY3NzL3ByYWN0aWNlL19zaG93LnNjc3MiLCJhbmFseXNlL2Nzcy9fYW5hbHlzZS5iYXNlLnNjc3MiLCJhbmFseXNlL2Nzcy9fdmFyaWFibGVzLnNjc3MiLCJhbmFseXNlL2Nzcy9fbGF5b3V0LnNjc3MiLCJhbmFseXNlL2Nzcy9fdG9vbHMuc2NzcyIsImFuYWx5c2UvY3NzL19hY3Rpb24tbWVudS5zY3NzIiwiYW5hbHlzZS9jc3MvX2V4cGxvcmVyLnNjc3MiLCJhbmFseXNlL2Nzcy9fdHJhaW5pbmcuc2NzcyIsImFuYWx5c2UvY3NzL19wcmFjdGljZS5zY3NzIiwiYW5hbHlzZS9jc3MvX2Zvcmsuc2NzcyIsImFuYWx5c2UvY3NzL19zaWRlLnNjc3MiLCJhbmFseXNlL2Nzcy9fY29udGV4dC1tZW51LnNjc3MiLCJhbmFseXNlL2Nzcy9zdHVkeS9fZGVzYy5zY3NzIiwiYW5hbHlzZS9jc3Mvc3R1ZHkvX3BsYXllci5zY3NzIiwic2l0ZS9jc3MvcHJhY3RpY2UvX2ljb25zLnNjc3MiLCJhbmFseXNlL2Nzcy9wcmFjdGljZS9fbGF5b3V0LnNjc3MiLCJhbmFseXNlL2Nzcy9wcmFjdGljZS9fc2lkZS5zY3NzIiwiYW5hbHlzZS9jc3MvcHJhY3RpY2UvX3VuZGVyYm9hcmQuc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICcuLi8uLi8uLi9jb21tb24vY3NzL3RoZW1lL2RhcmsnO1xuQGltcG9ydCAnYW5hbHlzZS5wcmFjdGljZSc7XG4iLCJAaW1wb3J0ICdkZWZhdWx0JztcblxuJHRoZW1lOiAnZGFyayc7XG4kY29sb3Itc2NoZW1lOiAnZGFyayc7XG4kdGhlbWUtbGlnaHQ6IGZhbHNlO1xuJHRoZW1lLWRhcms6IHRydWU7XG5cbkBmdW5jdGlvbiBjLWRpbW1lcigkY29sb3IsICR3ZWlnaHQ6IDIwJSkge1xuICBAcmV0dXJuIG1peCgjMDAwLCAkY29sb3IsICR3ZWlnaHQpO1xufVxuXG5AZnVuY3Rpb24gYy1jbGVhcmVyKCRjb2xvciwgJHdlaWdodDogMjAlKSB7XG4gIEByZXR1cm4gbWl4KCNmZmYsICRjb2xvciwgJHdlaWdodCk7XG59XG5cbiRjLWJnLXBhZ2U6IGhzbCgkYy1zaXRlLWh1ZSwgMTAlLCA4JSk7XG4kYy1iZy1oaWdoOiBoc2woJGMtc2l0ZS1odWUsIDclLCAxNCUpO1xuJGMtYmctbG93OiBoc2woJGMtc2l0ZS1odWUsIDclLCAyMiUpO1xuXG4vKiBldmVuIHJvd3MgaW4gbGlzdCBvciB0YWJsZXMsIHN1YnRsZSBzaGFkZSBvZiAkYy1iZy1oaWdoICovXG4kYy1iZy16ZWJyYTogaHNsKCRjLXNpdGUtaHVlLCA1JSwgMTglKTtcbiRjLWJnLXplYnJhMjogaHNsKCRjLXNpdGUtaHVlLCA1JSwgMjMlKTtcblxuJGMtYm9keS1ncmFkaWVudDogaHNsKCRjLXNpdGUtaHVlLCAxMiUsIDE2JSk7XG5cbiRjLWZvbnQ6IGhzbCgwLCAwJSwgNzMlKTtcbiRjLWZvbnQtZGltOiBjLWxpZ2h0KCRjLWZvbnQsIDYwJSk7XG4kYy1mb250LWRpbW1lcjogYy1saWdodCgkYy1mb250LCA0MiUpO1xuJGMtZm9udC1jbGVhcjogYy1saWdodCgkYy1mb250LCA4MCUpO1xuJGMtZm9udC1jbGVhcmVyOiBjLWxpZ2h0KCRjLWZvbnQsIDg5JSk7XG4kYy1zaGFkZTogYy1saWdodCgkYy1mb250LCAzMCUpO1xuJGMtZm9udC1wYWdlOiAkYy1mb250LWRpbTtcblxuLyogUHJpbWFyeTogYmx1ZSAqL1xuJGMtcHJpbWFyeTogaHNsKDIwOSwgNzklLCA1NiUpO1xuJGMtcHJpbWFyeS1kaW06IGMtZGltbWVyKCRjLXByaW1hcnksIDE1JSk7XG4kYy1wcmltYXJ5LWNsZWFyOiBjLWNsZWFyZXIoJGMtcHJpbWFyeSk7XG5cbi8qIFNlY29uZGFyeTogZ3JlZW4gKi9cbiRjLXNlY29uZGFyeTogaHNsKDg4LCA2MiUsIDM3JSk7XG4kYy1zZWNvbmRhcnktZGltOiBjLWRpbW1lcigkYy1zZWNvbmRhcnkpO1xuJGMtc2Vjb25kYXJ5LWRpbW1lcjogYy1kaW1tZXIoJGMtc2Vjb25kYXJ5LCA0MCUpO1xuXG4vKiBCcmFnOiBnb2xkICovXG4kYy1icmFnOiBoc2woMzcsIDc0JSwgNDMlKTtcblxuLyogRmFuY3k6IHBpbmsgKi9cbiRjLWZhbmN5OiBoc2woMjk0LCA2MiUsIDQ4JSk7XG5cbi8qIEdvb2Q6IGdyZWVuICovXG4kYy1nb29kOiAkYy1zZWNvbmRhcnk7XG4kYy1nb29kLW92ZXI6ICRjLXNlY29uZGFyeS1vdmVyO1xuXG4vKiBXYXJuOiBvcmFuZ2UgKi9cbiRjLXdhcm46ICRjLWJyYWc7XG4kYy13YXJuLW92ZXI6ICRjLWJyYWctb3ZlcjtcblxuLyogQmFkOiByZWQgKi9cbiRjLWJhZDogJGMtZXJyb3I7XG4kYy1iYWQtb3ZlcjogJGMtZXJyb3Itb3ZlcjtcblxuJGMtbGluazogJGMtcHJpbWFyeTtcbiRjLWxpbmstZGltOiAkYy1wcmltYXJ5LWRpbTtcbiRjLWxpbmstY2xlYXI6ICRjLXByaW1hcnktY2xlYXI7XG4kYy1saW5rLWhvdmVyOiBjLWNsZWFyZXIoc2F0dXJhdGUoJGMtcHJpbWFyeSwgMTAwJSksIDI1JSk7XG5cbiRjLWJnLWJveDogJGMtYmctaGlnaDtcbiRjLWJnLWJveC1vcGFxdWU6ICRjLWJnLWJveDtcbiRjLWJnLWlucHV0OiBjLWxpZ2h0KCRjLWJnLXBhZ2UsIDEzJSk7XG5cbiRjLWJnLXBvcHVwOiAkYy1iZy1sb3c7XG4kYy1wb3B1cDogJGMtZm9udC1jbGVhcjtcblxuJGMtYmctaGVhZGVyLWRyb3Bkb3duOiAkYy1iZy1wb3B1cDtcbiRjLWhlYWRlci1kcm9wZG93bjogJGMtcG9wdXA7XG5cbiRjLWJvdDogJGMtZmFuY3k7XG5cbiRjLXBhZ2UtaW5wdXQ6ICRjLWJnLWJveDtcblxuJGMtYm9yZGVyOiBoc2woMCwgMCUsIDI1JSk7XG4kYy1ib3JkZXItcGFnZTogaHNsKDAsIDAlLCAyMiUpO1xuJGJvcmRlcjogJGJvcmRlci13aWR0aCAkYm9yZGVyLXN0eWxlICRjLWJvcmRlcjtcblxuJGMtZm9udC1zaGFkb3c6IGJsYWNrO1xuJHRleHQtc2hhZG93OiBub25lO1xuXG5AbWl4aW4gbWV0YWwtYmcge1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCBoc2woJGMtc2l0ZS1odWUsIDclLCAyMiksIGhzbCgkYy1zaXRlLWh1ZSwgNSUsIDE5KSAxMDAlKTtcbn1cblxuQG1peGluIG1ldGFsIHtcbiAgQGluY2x1ZGUgbWV0YWwtYmc7XG59XG5cbkBtaXhpbiBtZXRhbC1ob3ZlciB7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIGhzbCgkYy1zaXRlLWh1ZSwgNyUsIDI1KSwgaHNsKCRjLXNpdGUtaHVlLCA1JSwgMjIpIDEwMCUpO1xuICBjb2xvcjogJGMtZm9udC1jbGVhcjtcbn1cblxuQG1peGluIHBhZ2UtbWV0YWwge1xuICBAaW5jbHVkZSBtZXRhbDtcbn1cblxuQG1peGluIHBhZ2UtbWV0YWwtaG92ZXIge1xuICBAaW5jbHVkZSBtZXRhbC1ob3Zlcjtcbn1cblxuQG1peGluIHRoZW1lLXN0eWxlIHtcbn1cbiIsIkBpbXBvcnQgJy4uL2Fic3RyYWN0L2Z1bmN0aW9ucyc7XG5cbi8qIENvbG9ycyAqL1xuXG5AZnVuY3Rpb24gYy1kaW1tZXIoJGNvbG9yLCAkd2VpZ2h0OiAxNyUpIHtcbiAgQHJldHVybiBtaXgoI2ZmZiwgJGNvbG9yLCAkd2VpZ2h0KTtcbn1cblxuQGZ1bmN0aW9uIGMtY2xlYXJlcigkY29sb3IsICR3ZWlnaHQ6IDE3JSkge1xuICBAcmV0dXJuIG1peCgjMDAwLCAkY29sb3IsICR3ZWlnaHQpO1xufVxuXG4kYy1zaXRlLWh1ZTogMzc7XG5cbiRjLWJnLXBhZ2U6IGhzbCgkYy1zaXRlLWh1ZSwgMTAlLCA5MiUpO1xuXG4vLyBoc2woMjEwLCAxNyUsIDk1JSlcbiRjLWJnLWhpZ2g6IGhzbCgwLCAwJSwgMTAwJSk7XG4kYy1iZy1sb3c6IGhzbCgwLCAwJSwgODklKTtcblxuLyogZXZlbiByb3dzIGluIGxpc3Qgb3IgdGFibGVzLCBzdWJ0bGUgc2hhZGUgb2YgJGMtYmctaGlnaCAqL1xuJGMtYmctemVicmE6IGhzbCgkYy1zaXRlLWh1ZSwgMTIlLCA5Ni41JSk7XG4kYy1iZy16ZWJyYTI6IGhzbCgkYy1zaXRlLWh1ZSwgMTIlLCA5MiUpO1xuXG4kYy1ib2R5LWdyYWRpZW50OiBoc2woJGMtc2l0ZS1odWUsIDEyJSwgODQlKTtcblxuJGMtZm9udDogaHNsKDAsIDAlLCAzMCUpO1xuJGMtZm9udC1kaW06IGMtbGlnaHQoJGMtZm9udCwgNDclKTtcbiRjLWZvbnQtZGltbWVyOiBjLWxpZ2h0KCRjLWZvbnQsIDcwJSk7XG4kYy1mb250LWNsZWFyOiBjLWxpZ2h0KCRjLWZvbnQsIDEyJSk7XG4kYy1mb250LWNsZWFyZXI6IGMtbGlnaHQoJGMtZm9udCwgMCUpO1xuJGMtc2hhZGU6IGMtZGltbWVyKCRjLWZvbnQsIDgwJSk7XG4kYy1mb250LXBhZ2U6IGMtbGlnaHQoJGMtZm9udCwgMzclKTtcblxuLyogUHJpbWFyeTogYmx1ZSAqL1xuJGMtcHJpbWFyeTogaHNsKDIwOSwgNzclLCA0NiUpO1xuJGMtcHJpbWFyeS1kaW06IGMtZGltbWVyKCRjLXByaW1hcnkpO1xuJGMtcHJpbWFyeS1jbGVhcjogYy1jbGVhcmVyKCRjLXByaW1hcnkpO1xuJGMtcHJpbWFyeS1vdmVyOiAjZmZmO1xuXG4vKiB0ZXh0IG92ZXIgcHJpbWFyeSBiYWNrZ3JvdW5kICovXG5cbi8qIFNlY29uZGFyeTogZ3JlZW4gKi9cbiRjLXNlY29uZGFyeTogaHNsKDg4LCA2MiUsIDM3JSk7XG4kYy1zZWNvbmRhcnktZGltOiBjLWRpbW1lcigkYy1zZWNvbmRhcnkpO1xuJGMtc2Vjb25kYXJ5LWRpbW1lcjogYy1kaW1tZXIoJGMtc2Vjb25kYXJ5LCA0MCUpO1xuJGMtc2Vjb25kYXJ5LW92ZXI6ICNmZmY7XG5cbi8qIHRleHQgb3ZlciBzZWNvbmRhcnkgYmFja2dyb3VuZCAqL1xuXG4vKiBBY2NlbnQ6IG9yYW5nZSAqL1xuJGMtYWNjZW50OiBoc2woMjIsIDEwMCUsIDQyJSk7XG4kYy1hY2NlbnQtZGltOiBjLWRpbW1lcigkYy1hY2NlbnQpO1xuJGMtYWNjZW50LWNsZWFyOiBjLWNsZWFyZXIoJGMtYWNjZW50KTtcbiRjLWFjY2VudC1vdmVyOiAjZmZmO1xuXG4vKiB0ZXh0IG92ZXIgYWNjZW50IGJhY2tncm91bmQgKi9cblxuLyogQnJhZzogZ29sZCAqL1xuJGMtYnJhZzogaHNsKDM3LCA3NCUsIDQ4JSk7XG4kYy1icmFnLW92ZXI6ICNmZmY7XG5cbi8qIHRleHQgb3ZlciBicmFnIGJhY2tncm91bmQgKi9cblxuLyogRXJyb3I6IHJlZCAqL1xuJGMtcmVkOiBoc2woMCwgNjAlLCA1MCUpO1xuJGMtZXJyb3I6ICRjLXJlZDtcbiRjLWVycm9yLW92ZXI6ICNmZmY7XG5cbi8qIHRleHQgb3ZlciBicmFnIGJhY2tncm91bmQgKi9cblxuLyogR29vZDogZ3JlZW4gKi9cbiRjLWdvb2Q6ICRjLXNlY29uZGFyeTtcbiRjLWdvb2Qtb3ZlcjogJGMtc2Vjb25kYXJ5LW92ZXI7XG5cbi8qIFdhcm46IG9yYW5nZSAqL1xuJGMtd2FybjogJGMtYnJhZztcbiRjLXdhcm4tb3ZlcjogJGMtYnJhZy1vdmVyO1xuXG4vKiBCYWQ6IHJlZCAqL1xuJGMtYmFkOiAkYy1lcnJvcjtcbiRjLWJhZC1vdmVyOiAkYy1lcnJvci1vdmVyO1xuXG4vKiBGYW5jeTogcGluayAqL1xuJGMtZmFuY3k6IGhzbCgyOTQsIDYxJSwgNjIlKTtcbiRjLWZhbmN5LW92ZXI6IHdoaXRlO1xuXG4vKiB0ZXh0IG92ZXIgYnJhZyBiYWNrZ3JvdW5kICovXG5cbiRjLWxpbms6ICRjLXByaW1hcnk7XG4kYy1saW5rLWRpbTogJGMtcHJpbWFyeS1kaW07XG4kYy1saW5rLWNsZWFyOiAkYy1wcmltYXJ5LWNsZWFyO1xuJGMtbGluay1ob3ZlcjogYy1jbGVhcmVyKHNhdHVyYXRlKCRjLXByaW1hcnksIDEwMCUpLCAzNSUpO1xuJGMtbGluay1vdmVyOiAkYy1wcmltYXJ5LW92ZXI7XG5cbiRjLWJnLWJveDogJGMtYmctaGlnaDtcbiRjLWJnLWJveC1vcGFxdWU6ICRjLWJnLWJveDtcbiRjLWJnLWlucHV0OiBjLWxpZ2h0KCRjLWJnLXBhZ2UsIDk4JSk7XG5cbiRjLWJvcmRlcjogaHNsKDAsIDAlLCA4NSUpO1xuJGMtYm9yZGVyLXBhZ2U6IGhzbCgwLCAwJSwgODAlKTtcblxuJGMtcGFnZS1tYXNrOiBoc2xhKDAsIDAsIDAlLCAwLjYpO1xuXG4kYy1iZy1wb3B1cDogJGMtYmctaGlnaDtcbiRjLXBvcHVwOiAkYy1mb250O1xuXG4kYy1iZy1oZWFkZXItZHJvcGRvd246ICRjLWJnLXBvcHVwO1xuJGMtaGVhZGVyLWRyb3Bkb3duOiAkYy1wb3B1cDtcblxuJGMtZm9udC1zaGFkb3c6IHdoaXRlO1xuJHRleHQtc2hhZG93OiAwIDFweCAwICRjLWZvbnQtc2hhZG93O1xuXG4kYy1ib3Q6ICRjLWZhbmN5O1xuXG4kYy1wYWdlLWlucHV0OiAkYy1iZy1sb3c7XG5cbi8qIEJvcmRlcnMgKi9cblxuJGJvcmRlci13aWR0aDogMXB4O1xuJGJvcmRlci1zdHlsZTogc29saWQ7XG4kYm9yZGVyOiAkYm9yZGVyLXdpZHRoICRib3JkZXItc3R5bGUgJGMtYm9yZGVyO1xuXG4vKiBTaGFkb3dzICovXG5cbiRib3gtc2hhZG93OiAwIDJweCAycHggMCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDNweCAxcHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMiksIDAgMXB4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC4xMik7XG5cbi8vICRib3gtc2hhZG93OiAwIDJweCAycHggMCByZ2JhKDAsMCwwLC4xNTcpO1xuIiwiQGZ1bmN0aW9uIGMtbGlnaHQoJGNvbG9yLCAkdmFsdWUpIHtcbiAgQHJldHVybiBjaGFuZ2UtY29sb3IoJGNvbG9yLCAkbGlnaHRuZXNzOiAkdmFsdWUpO1xufVxuXG5AZnVuY3Rpb24gaW1nLXVybCgkcGF0aCkge1xuICBAcmV0dXJuIHVybCgnI3skaW1nLXBhdGh9LyN7JHBhdGh9Jyk7XG59XG4iLCJAaW1wb3J0ICdhbmFseXNlLmJhc2UnO1xuXG4vLyBAaW1wb3J0ICcuLi8uLi8uLi9jb21tb24vY3NzL2Zvcm0vZm9ybTMnO1xuLy8gQGltcG9ydCAnLi4vLi4vLi4vY29tbW9uL2Nzcy9jb21wb25lbnQvdGFicy1ob3Jpeic7XG4vLyBAaW1wb3J0ICcuLi8uLi8uLi9jb21tb24vY3NzL2NvbXBvbmVudC9zbGlzdCc7XG5cbkBpbXBvcnQgJy4uL3ByYWN0aWNlL3Nob3cnO1xuIiwiQGltcG9ydCAnLi4vLi4vLi4vY29tbW9uL2Nzcy9wbHVnaW4nO1xuQGltcG9ydCAnLi4vLi4vLi4vY29tbW9uL2Nzcy92ZW5kb3IvY2hlc3Nncm91bmQvY29vcmRzJztcbkBpbXBvcnQgJy4uLy4uLy4uL2NvbW1vbi9jc3MvbGF5b3V0L3VuaWJvYXJkJztcbkBpbXBvcnQgJy4uLy4uLy4uL2NvbW1vbi9jc3MvYmFzZS9zY3JvbGxiYXInO1xuQGltcG9ydCAnLi4vLi4vLi4vY29tbW9uL2Nzcy9jb21wb25lbnQvYm9hcmQtcmVzaXplJztcbkBpbXBvcnQgJy4uLy4uLy4uL2NvbW1vbi9jc3MvY29tcG9uZW50L21vZGFsJztcbkBpbXBvcnQgJy4uLy4uLy4uL2NvbW1vbi9jc3MvY29tcG9uZW50L2NvbnRpbnVlLXdpdGgnO1xuQGltcG9ydCAnLi4vLi4vLi4vY29tbW9uL2Nzcy9jb21wb25lbnQvY29sb3ItaWNvbic7XG5AaW1wb3J0ICcuLi8uLi8uLi9jb21tb24vY3NzL2NvbXBvbmVudC9jcm9zc3RhYmxlJztcbkBpbXBvcnQgJy4uLy4uLy4uL2NvbW1vbi9jc3MvY29tcG9uZW50L2ZidCc7XG5AaW1wb3J0ICcuLi8uLi8uLi9jb21tb24vY3NzL2Zvcm0vY21uLXRvZ2dsZSc7XG5AaW1wb3J0ICcuLi8uLi8uLi9jb21tb24vY3NzL2Zvcm0vcmFuZ2UnO1xuQGltcG9ydCAnLi4vLi4vLi4vdHJlZS9jc3MvdHJlZSc7XG5AaW1wb3J0ICcuLi8uLi8uLi9jZXZhbC9jc3MvY2V2YWwnO1xuQGltcG9ydCAnLi4vLi4vLi4vY2V2YWwvY3NzL2V2YWwtZ2F1Z2UnO1xuQGltcG9ydCAnLi4vLi4vLi4vY2hlc3MvY3NzL2NvbnRyb2wnO1xuQGltcG9ydCAnLi4vLi4vLi4vY2hlc3MvY3NzL3Byb21vdGlvbic7XG5AaW1wb3J0ICcuLi8uLi8uLi9jaGVzcy9jc3MvdmFyaWFudC1zdHlsZSc7XG4iLCIvKiBDb21tb24gaW1wb3J0cyBmb3IgYWxsIENTUyBtb2R1bGVzICovXG5cbkBpbXBvcnQgJy4uLy4uLy4uL25vZGVfbW9kdWxlcy9icmVha3BvaW50LXNhc3Mvc3R5bGVzaGVldHMvYnJlYWtwb2ludCc7XG5cbkBpbXBvcnQgJ2Fic3RyYWN0L2FsbCc7XG4iLCIvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIERlZmF1bHQgVmFyaWFibGVzXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiRCcmVha3BvaW50LVNldHRpbmdzOiAoXG4gICdkZWZhdWx0IG1lZGlhJzogYWxsLFxuICAnZGVmYXVsdCBmZWF0dXJlJzogbWluLXdpZHRoLFxuICAnZGVmYXVsdCBwYWlyJzogd2lkdGgsXG5cbiAgJ2ZvcmNlIGFsbCBtZWRpYSB0eXBlJzogZmFsc2UsXG4gICd0byBlbXMnOiBmYWxzZSxcbiAgJ3RyYW5zZm9ybSByZXNvbHV0aW9ucyc6IHRydWUsXG5cbiAgJ25vIHF1ZXJpZXMnOiBmYWxzZSxcbiAgJ25vIHF1ZXJ5IGZhbGxiYWNrcyc6IGZhbHNlLFxuXG4gICdiYXNlIGZvbnQgc2l6ZSc6IDE2cHgsXG5cbiAgJ2xlZ2FjeSBzeW50YXgnOiBmYWxzZVxuKTtcblxuJGJyZWFrcG9pbnQ6ICgpICFkZWZhdWx0O1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIEltcG9ydHNcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuQGltcG9ydCBcImJyZWFrcG9pbnQvc2V0dGluZ3NcIjtcbkBpbXBvcnQgJ2JyZWFrcG9pbnQvY29udGV4dCc7XG5AaW1wb3J0ICdicmVha3BvaW50L2hlbHBlcnMnO1xuQGltcG9ydCAnYnJlYWtwb2ludC9wYXJzZXJzJztcbkBpbXBvcnQgJ2JyZWFrcG9pbnQvbm8tcXVlcnknO1xuXG5AaW1wb3J0ICdicmVha3BvaW50L3Jlc3BvbmQtdG8nO1xuXG5AaW1wb3J0IFwiYnJlYWtwb2ludC9sZWdhY3ktc2V0dGluZ3NcIjtcblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBCcmVha3BvaW50IE1peGluXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuQG1peGluIGJyZWFrcG9pbnQoJHF1ZXJ5LCAkbm8tcXVlcnk6IGZhbHNlKSB7XG4gIEBpbmNsdWRlIGxlZ2FjeS1zZXR0aW5ncy13YXJuaW5nO1xuXG4gIC8vIFJlc2V0IGNvbnRleHRzXG4gIEBpbmNsdWRlIHByaXZhdGUtYnJlYWtwb2ludC1yZXNldC1jb250ZXh0cygpO1xuXG4gICRicmVha3BvaW50OiBicmVha3BvaW50KCRxdWVyeSwgZmFsc2UpO1xuXG4gICRxdWVyeS1zdHJpbmc6IG1hcC1nZXQoJGJyZWFrcG9pbnQsICdxdWVyeScpO1xuICAkcXVlcnktZmFsbGJhY2s6IG1hcC1nZXQoJGJyZWFrcG9pbnQsICdmYWxsYmFjaycpO1xuXG4gICRwcml2YXRlLWJyZWFrcG9pbnQtY29udGV4dC1ob2xkZXI6IG1hcC1nZXQoJGJyZWFrcG9pbnQsICdjb250ZXh0IGhvbGRlcicpICFnbG9iYWw7XG4gICRwcml2YXRlLWJyZWFrcG9pbnQtcXVlcnktY291bnQ6IG1hcC1nZXQoJGJyZWFrcG9pbnQsICdxdWVyeSBjb3VudCcpICFnbG9iYWw7XG5cbiAgLy8gQWxsb3cgZm9yIGFuIGFzLW5lZWRlZCBvdmVycmlkZSBvciB1c2FnZSBvZiBubyBxdWVyeSBmYWxsYmFjay5cbiAgQGlmICRuby1xdWVyeSAhPSBmYWxzZSB7XG4gICAgJHF1ZXJ5LWZhbGxiYWNrOiAkbm8tcXVlcnk7XG4gIH1cblxuICBAaWYgJHF1ZXJ5LWZhbGxiYWNrICE9IGZhbHNlIHtcbiAgICAkY29udGV4dC1zZXR0ZXI6IHByaXZhdGUtYnJlYWtwb2ludC1zZXQtY29udGV4dCgnbm8tcXVlcnknLCAkcXVlcnktZmFsbGJhY2spO1xuICB9XG5cbiAgLy8gUHJpbnQgT3V0IFF1ZXJ5IFN0cmluZ1xuICBAaWYgbm90IGJyZWFrcG9pbnQtZ2V0KCdubyBxdWVyaWVzJykge1xuICAgIEBtZWRpYSAjeyRxdWVyeS1zdHJpbmd9IHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxuXG4gIEBpZiBicmVha3BvaW50LWdldCgnbm8gcXVlcnkgZmFsbGJhY2tzJykgIT0gZmFsc2Ugb3IgYnJlYWtwb2ludC1nZXQoJ25vIHF1ZXJpZXMnKSA9PSB0cnVlIHtcblxuICAgICR0eXBlOiB0eXBlLW9mKGJyZWFrcG9pbnQtZ2V0KCdubyBxdWVyeSBmYWxsYmFja3MnKSk7XG4gICAgJHByaW50OiBmYWxzZTtcblxuICAgIEBpZiAoJHR5cGUgPT0gJ2Jvb2wnKSB7XG4gICAgICAkcHJpbnQ6IHRydWU7XG4gICAgfVxuICAgIEBlbHNlIGlmICgkdHlwZSA9PSAnc3RyaW5nJykge1xuICAgICAgQGlmICRxdWVyeS1mYWxsYmFjayA9PSBicmVha3BvaW50LWdldCgnbm8gcXVlcnkgZmFsbGJhY2tzJykge1xuICAgICAgICAkcHJpbnQ6IHRydWU7XG4gICAgICB9XG4gICAgfVxuICAgIEBlbHNlIGlmICgkdHlwZSA9PSAnbGlzdCcpIHtcbiAgICAgIEBlYWNoICR3cmFwcGVyIGluIGJyZWFrcG9pbnQtZ2V0KCdubyBxdWVyeSBmYWxsYmFja3MnKSB7XG4gICAgICAgIEBpZiAkcXVlcnktZmFsbGJhY2sgPT0gJHdyYXBwZXIge1xuICAgICAgICAgICRwcmludDogdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFdyaXRlIEZhbGxiYWNrXG4gICAgQGlmICgkcXVlcnktZmFsbGJhY2sgIT0gZmFsc2UpIGFuZCAoJHByaW50ID09IHRydWUpIHtcbiAgICAgICR0eXBlLWZhbGxiYWNrOiB0eXBlLW9mKCRxdWVyeS1mYWxsYmFjayk7XG5cbiAgICAgIEBpZiAoJHR5cGUtZmFsbGJhY2sgIT0gJ2Jvb2wnKSB7XG4gICAgICAgICN7JHF1ZXJ5LWZhbGxiYWNrfSAmIHtcbiAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgQGVsc2Uge1xuICAgICAgICBAY29udGVudDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBAaW5jbHVkZSBwcml2YXRlLWJyZWFrcG9pbnQtcmVzZXQtY29udGV4dHMoKTtcbn1cblxuXG5AbWl4aW4gbXEoJHF1ZXJ5LCAkbm8tcXVlcnk6IGZhbHNlKSB7XG4gIEBpbmNsdWRlIGJyZWFrcG9pbnQoJHF1ZXJ5LCAkbm8tcXVlcnkpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuIiwiLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBIYXMgU2V0dGluZ1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5AZnVuY3Rpb24gYnJlYWtwb2ludC1oYXMoJHNldHRpbmcpIHtcbiAgQGlmIG1hcC1oYXMta2V5KCRicmVha3BvaW50LCAkc2V0dGluZykge1xuICAgIEByZXR1cm4gdHJ1ZTtcbiAgfVxuICBAZWxzZSB7XG4gICAgQHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIEdldCBTZXR0aW5nc1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5AZnVuY3Rpb24gYnJlYWtwb2ludC1nZXQoJHNldHRpbmcpIHtcbiAgQGlmIGJyZWFrcG9pbnQtaGFzKCRzZXR0aW5nKSB7XG4gICAgQHJldHVybiBtYXAtZ2V0KCRicmVha3BvaW50LCAkc2V0dGluZyk7XG4gIH1cbiAgQGVsc2Uge1xuICAgIEByZXR1cm4gbWFwLWdldCgkQnJlYWtwb2ludC1TZXR0aW5ncywgJHNldHRpbmcpO1xuICB9XG59XG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gU2V0IFNldHRpbmdzXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbkBmdW5jdGlvbiBicmVha3BvaW50LXNldCgkc2V0dGluZywgJHZhbHVlKSB7XG4gIEBpZiAoc3RyLWluZGV4KCRzZXR0aW5nLCAnLScpIG9yIHN0ci1pbmRleCgkc2V0dGluZywgJ18nKSkgYW5kIHN0ci1pbmRleCgkc2V0dGluZywgJyAnKSA9PSBudWxsIHtcbiAgICBAd2FybiBcIldvcmRzIGluIEJyZWFrcG9pbnQgc2V0dGluZ3Mgc2hvdWxkIGJlIHNlcGFyYXRlZCBieSBzcGFjZXMsIG5vdCBkYXNoZXMgb3IgdW5kZXJzY29yZXMuIFBsZWFzZSByZXBsYWNlIGRhc2hlcyBhbmQgdW5kZXJzY29yZXMgYmV0d2VlbiB3b3JkcyB3aXRoIHNwYWNlcy4gU2V0dGluZ3Mgd2lsbCBub3Qgd29yayBhcyBleHBlY3RlZCB1bnRpbCBjaGFuZ2VkLlwiO1xuICB9XG4gICRicmVha3BvaW50OiBtYXAtbWVyZ2UoJGJyZWFrcG9pbnQsICgkc2V0dGluZzogJHZhbHVlKSkgIWdsb2JhbDtcbiAgQHJldHVybiB0cnVlO1xufVxuXG5AbWl4aW4gYnJlYWtwb2ludC1jaGFuZ2UoJHNldHRpbmcsICR2YWx1ZSkge1xuICAkYnJlYWtwb2ludC1jaGFuZ2U6IGJyZWFrcG9pbnQtc2V0KCRzZXR0aW5nLCAkdmFsdWUpO1xufVxuXG5AbWl4aW4gYnJlYWtwb2ludC1zZXQoJHNldHRpbmcsICR2YWx1ZSkge1xuICBAaW5jbHVkZSBicmVha3BvaW50LWNoYW5nZSgkc2V0dGluZywgJHZhbHVlKTtcbn1cblxuQG1peGluIGJrcHQtY2hhbmdlKCRzZXR0aW5nLCAkdmFsdWUpIHtcbiAgQGluY2x1ZGUgYnJlYWtwb2ludC1jaGFuZ2UoJHNldHRpbmcsICR2YWx1ZSk7XG59XG5AbWl4aW4gYmtwdC1zZXQoJHNldHRpbmcsICR2YWx1ZSkge1xuICBAaW5jbHVkZSBicmVha3BvaW50LWNoYW5nZSgkc2V0dGluZywgJHZhbHVlKTtcbn1cblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBSZW1vdmUgU2V0dGluZ1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5AZnVuY3Rpb24gYnJlYWtwb2ludC1yZXNldCgkc2V0dGluZ3MuLi4pIHtcbiAgQGlmIGxlbmd0aCgkc2V0dGluZ3MpID09IDEge1xuICAgICRzZXR0aW5nczogbnRoKCRzZXR0aW5ncywgMSk7XG4gIH1cblxuICBAZWFjaCAkc2V0dGluZyBpbiAkc2V0dGluZ3Mge1xuICAgICRicmVha3BvaW50OiBtYXAtcmVtb3ZlKCRicmVha3BvaW50LCAkc2V0dGluZykgIWdsb2JhbDtcbiAgfVxuICBAcmV0dXJuIHRydWU7XG59XG5cbkBtaXhpbiBicmVha3BvaW50LXJlc2V0KCRzZXR0aW5ncy4uLikge1xuICAkYnJlYWtwb2ludC1yZXNldDogYnJlYWtwb2ludC1yZXNldCgkc2V0dGluZ3MpO1xufVxuXG5AbWl4aW4gYmtwdC1yZXNldCgkc2V0dGluZ3MuLi4pIHtcbiAgJGJyZWFrcG9pbnQtcmVzZXQ6IGJyZWFrcG9pbnQtcmVzZXQoJHNldHRpbmdzKTtcbn0iLCIvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFByaXZhdGUgQnJlYWtwb2ludCBWYXJpYWJsZXNcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuJHByaXZhdGUtYnJlYWtwb2ludC1jb250ZXh0LWhvbGRlcjogKCk7XG4kcHJpdmF0ZS1icmVha3BvaW50LXF1ZXJ5LWNvdW50OiAwICFkZWZhdWx0O1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIEJyZWFrcG9pbnQgSGFzIENvbnRleHRcbi8vIFJldHVybnMgd2hldGhlciBvciBub3QgeW91IGFyZSBpbnNpZGUgYSBCcmVha3BvaW50IHF1ZXJ5XG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbkBmdW5jdGlvbiBicmVha3BvaW50LWhhcy1jb250ZXh0KCkge1xuICBAaWYgbGVuZ3RoKCRwcml2YXRlLWJyZWFrcG9pbnQtcXVlcnktY291bnQpIHtcbiAgICBAcmV0dXJuIHRydWU7XG4gIH1cbiAgQGVsc2Uge1xuICAgIEByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBCcmVha3BvaW50IEdldCBDb250ZXh0XG4vLyAkZmVhdHVyZTogSW5wdXQgZmVhdHVyZSB0byBnZXQgaXQncyBjdXJyZW50IE1RIGNvbnRleHQuIFJldHVybnMgZmFsc2UgaWYgbm8gY29udGV4dFxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5AZnVuY3Rpb24gYnJlYWtwb2ludC1nZXQtY29udGV4dCgkZmVhdHVyZSkge1xuICBAaWYgbWFwLWhhcy1rZXkoJHByaXZhdGUtYnJlYWtwb2ludC1jb250ZXh0LWhvbGRlciwgJGZlYXR1cmUpIHtcbiAgICAkZ2V0OiBtYXAtZ2V0KCRwcml2YXRlLWJyZWFrcG9pbnQtY29udGV4dC1ob2xkZXIsICRmZWF0dXJlKTtcbiAgICAvLyBTcGVjaWFsIGhhbmRsaW5nIG9mIG5vLXF1ZXJ5IGZyb20gZ2V0IHNpZGUgc28gL2ZhbHNlLyBwcmVwZW5kcyBhcmVuJ3QgcmV0dXJuZWRcbiAgICBAaWYgJGZlYXR1cmUgPT0gJ25vLXF1ZXJ5JyB7XG4gICAgICBAaWYgdHlwZS1vZigkZ2V0KSA9PSAnbGlzdCcgYW5kIGxlbmd0aCgkZ2V0KSA+IDEgYW5kIG50aCgkZ2V0LCAxKSA9PSBmYWxzZSB7XG4gICAgICAgICRnZXQ6IG50aCgkZ2V0LCBsZW5ndGgoJGdldCkpO1xuICAgICAgfVxuICAgIH1cbiAgICBAcmV0dXJuICRnZXQ7XG4gIH1cbiAgQGVsc2Uge1xuICAgIEBpZiBicmVha3BvaW50LWhhcy1jb250ZXh0KCkgYW5kICRmZWF0dXJlID09ICdtZWRpYScge1xuICAgICAgQHJldHVybiBicmVha3BvaW50LWdldCgnZGVmYXVsdCBtZWRpYScpO1xuICAgIH1cbiAgICBAZWxzZSB7XG4gICAgICBAcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxufVxuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFByaXZhdGUgZnVuY3Rpb24gdG8gc2V0IGNvbnRleHRcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuQGZ1bmN0aW9uIHByaXZhdGUtYnJlYWtwb2ludC1zZXQtY29udGV4dCgkZmVhdHVyZSwgJHZhbHVlKSB7XG4gIEBpZiAkdmFsdWUgPT0gJ21vbm9jaHJvbWUnIHtcbiAgICAkZmVhdHVyZTogJ21vbm9jaHJvbWUnO1xuICB9XG5cbiAgJGN1cnJlbnQ6IG1hcC1nZXQoJHByaXZhdGUtYnJlYWtwb2ludC1jb250ZXh0LWhvbGRlciwgJGZlYXR1cmUpO1xuICBAaWYgJGN1cnJlbnQgYW5kIGxlbmd0aCgkY3VycmVudCkgPT0gJHByaXZhdGUtYnJlYWtwb2ludC1xdWVyeS1jb3VudCB7XG4gICAgQHdhcm4gXCJZb3UgaGF2ZSBhbHJlYWR5IHF1ZXJpZWQgYWdhaW5zdCBgI3skZmVhdHVyZX1gLiBVbmV4cGVjdGVkIHRoaW5ncyBtYXkgaGFwcGVuIGlmIHlvdSBxdWVyeSBhZ2FpbnN0IHRoZSBzYW1lIGZlYXR1cmUgbW9yZSB0aGFuIG9uY2UgaW4gdGhlIHNhbWUgYGFuZGAgcXVlcnkuIEJyZWFrcG9pbnQgaXMgb3ZlcndyaXRpbmcgdGhlIGN1cnJlbnQgY29udGV4dCB3aXRoIGAjeyR2YWx1ZX1gXCI7XG4gIH1cblxuICBAaWYgbm90IG1hcC1oYXMta2V5KCRwcml2YXRlLWJyZWFrcG9pbnQtY29udGV4dC1ob2xkZXIsICRmZWF0dXJlKSB7XG4gICAgJHYtaG9sZGVyOiAoKTtcbiAgICBAZm9yICRpIGZyb20gMSB0byAkcHJpdmF0ZS1icmVha3BvaW50LXF1ZXJ5LWNvdW50IHtcbiAgICAgIEBpZiAkZmVhdHVyZSA9PSAnbWVkaWEnIHtcbiAgICAgICAgJHYtaG9sZGVyOiBhcHBlbmQoJHYtaG9sZGVyLCBicmVha3BvaW50LWdldCgnZGVmYXVsdCBtZWRpYScpKTtcbiAgICAgIH1cbiAgICAgIEBlbHNlIHtcbiAgICAgICAgJHYtaG9sZGVyOiBhcHBlbmQoJHYtaG9sZGVyLCBmYWxzZSk7XG4gICAgICB9XG4gICAgfVxuICAgICR2LWhvbGRlcjogYXBwZW5kKCR2LWhvbGRlciwgJHZhbHVlKTtcbiAgICAkcHJpdmF0ZS1icmVha3BvaW50LWNvbnRleHQtaG9sZGVyOiBtYXAtbWVyZ2UoJHByaXZhdGUtYnJlYWtwb2ludC1jb250ZXh0LWhvbGRlciwgKCRmZWF0dXJlOiAkdi1ob2xkZXIpKSAhZ2xvYmFsO1xuICB9XG4gIEBlbHNlIHtcbiAgICAkdi1ob2xkZXI6IG1hcC1nZXQoJHByaXZhdGUtYnJlYWtwb2ludC1jb250ZXh0LWhvbGRlciwgJGZlYXR1cmUpO1xuICAgICRsZW5ndGg6IGxlbmd0aCgkdi1ob2xkZXIpO1xuICAgIEBmb3IgJGkgZnJvbSAkbGVuZ3RoIHRvICRwcml2YXRlLWJyZWFrcG9pbnQtcXVlcnktY291bnQgLSAxIHtcbiAgICAgIEBpZiAkZmVhdHVyZSA9PSAnbWVkaWEnIHtcbiAgICAgICAgJHYtaG9sZGVyOiBhcHBlbmQoJHYtaG9sZGVyLCBicmVha3BvaW50LWdldCgnZGVmYXVsdCBtZWRpYScpKTtcbiAgICAgIH1cbiAgICAgIEBlbHNlIHtcbiAgICAgICAgJHYtaG9sZGVyOiBhcHBlbmQoJHYtaG9sZGVyLCBmYWxzZSk7XG4gICAgICB9XG4gICAgfVxuICAgICR2LWhvbGRlcjogYXBwZW5kKCR2LWhvbGRlciwgJHZhbHVlKTtcbiAgICAkcHJpdmF0ZS1icmVha3BvaW50LWNvbnRleHQtaG9sZGVyOiBtYXAtbWVyZ2UoJHByaXZhdGUtYnJlYWtwb2ludC1jb250ZXh0LWhvbGRlciwgKCRmZWF0dXJlOiAkdi1ob2xkZXIpKSAhZ2xvYmFsO1xuICB9XG5cbiAgQHJldHVybiB0cnVlO1xufVxuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFByaXZhdGUgZnVuY3Rpb24gdG8gcmVzZXQgY29udGV4dFxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5AbWl4aW4gcHJpdmF0ZS1icmVha3BvaW50LXJlc2V0LWNvbnRleHRzIHtcbiAgJHByaXZhdGUtYnJlYWtwb2ludC1jb250ZXh0LWhvbGRlcjogKCkgIWdsb2JhbDtcbiAgJHByaXZhdGUtYnJlYWtwb2ludC1xdWVyeS1jb3VudDogMCAhZ2xvYmFsO1xufSIsIi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gQ29udmVydHMgdGhlIGlucHV0IHZhbHVlIHRvIEJhc2UgRU1zXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbkBmdW5jdGlvbiBicmVha3BvaW50LXRvLWJhc2UtZW0oJHZhbHVlKSB7XG4gICR2YWx1ZS11bml0OiB1bml0KCR2YWx1ZSk7XG5cbiAgLy8gV2lsbCBjb252ZXJ0IHJlbGF0aXZlIEVNcyBpbnRvIHJvb3QgRU1zLlxuICBAaWYgYnJlYWtwb2ludC1nZXQoJ2Jhc2UgZm9udCBzaXplJykgYW5kIHR5cGUtb2YoYnJlYWtwb2ludC1nZXQoJ2Jhc2UgZm9udCBzaXplJykpID09ICdudW1iZXInIGFuZCAkdmFsdWUtdW5pdCA9PSAnZW0nIHtcbiAgICAkYmFzZS11bml0OiB1bml0KGJyZWFrcG9pbnQtZ2V0KCdiYXNlIGZvbnQgc2l6ZScpKTtcblxuICAgIEBpZiAkYmFzZS11bml0ID09ICdweCcgb3IgJGJhc2UtdW5pdCA9PSAnJScgb3IgJGJhc2UtdW5pdCA9PSAnZW0nIG9yICRiYXNlLXVuaXQgPT0gJ3B0JyB7XG4gICAgICBAcmV0dXJuIGJhc2UtY29udmVyc2lvbigkdmFsdWUpIC8gYmFzZS1jb252ZXJzaW9uKGJyZWFrcG9pbnQtZ2V0KCdiYXNlIGZvbnQgc2l6ZScpKSAqIDFlbTtcbiAgICB9XG4gICAgQGVsc2Uge1xuICAgICAgQHdhcm4gJyN7YnJlYWtwb2ludC1nZXQoXFwnYmFzZSBmb250IHNpemVcXCcpfSBpcyBub3Qgc2V0IGluIHZhbGlkIHVuaXRzIGZvciBmb250IHNpemUhJztcbiAgICAgIEByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIEBlbHNlIHtcbiAgICBAcmV0dXJuIGJhc2UtY29udmVyc2lvbigkdmFsdWUpO1xuICB9XG59XG5cbkBmdW5jdGlvbiBiYXNlLWNvbnZlcnNpb24oJHZhbHVlKSB7XG4gICR1bml0OiB1bml0KCR2YWx1ZSk7XG5cbiAgQGlmICR1bml0ID09ICdweCcge1xuICAgIEByZXR1cm4gJHZhbHVlIC8gMTZweCAqIDFlbTtcbiAgfVxuICBAZWxzZSBpZiAkdW5pdCA9PSAnJScge1xuICAgIEByZXR1cm4gJHZhbHVlIC8gMTAwJSAqIDFlbTtcbiAgfVxuICBAZWxzZSBpZiAkdW5pdCA9PSAnZW0nIHtcbiAgICBAcmV0dXJuICR2YWx1ZTtcbiAgfVxuICBAZWxzZSBpZiAkdW5pdCA9PSAncHQnIHtcbiAgICBAcmV0dXJuICR2YWx1ZSAvIDEycHQgKiAxZW07XG4gIH1cbiAgQGVsc2Uge1xuICAgIEByZXR1cm4gJHZhbHVlO1xuLy8gICAgQHdhcm4gJ0V2ZXJ5dGhpbmcgaXMgdGVycmlibGUhIFdoYXQgaGF2ZSB5b3UgZG9uZT8hJztcbiAgfVxufVxuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFJldHVybnMgd2hldGhlciB0aGUgZmVhdHVyZSBjYW4gaGF2ZSBhIG1pbi9tYXggcGFpclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4kYnJlYWtwb2ludC1taW4tbWF4LWZlYXR1cmVzOiAnY29sb3InLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2NvbG9yLWluZGV4JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdhc3BlY3QtcmF0aW8nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RldmljZS1hc3BlY3QtcmF0aW8nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RldmljZS1oZWlnaHQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RldmljZS13aWR0aCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnaGVpZ2h0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdtb25vY2hyb21lJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdyZXNvbHV0aW9uJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICd3aWR0aCc7XG5cbkBmdW5jdGlvbiBicmVha3BvaW50LW1pbi1tYXgoJGZlYXR1cmUpIHtcbiAgQGVhY2ggJGl0ZW0gaW4gJGJyZWFrcG9pbnQtbWluLW1heC1mZWF0dXJlcyB7XG4gICAgQGlmICRmZWF0dXJlID09ICRpdGVtIHtcbiAgICAgIEByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgQHJldHVybiBmYWxzZTtcbn1cblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBSZXR1cm5zIHdoZXRoZXIgdGhlIGZlYXR1cmUgY2FuIGhhdmUgYSBzdHJpbmcgdmFsdWVcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuJGJyZWFrcG9pbnQtc3RyaW5nLWZlYXR1cmVzOiAgJ29yaWVudGF0aW9uJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdzY2FuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdjb2xvcicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnYXNwZWN0LXJhdGlvJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdkZXZpY2UtYXNwZWN0LXJhdGlvJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdwb2ludGVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdsdW1pbm9zaXR5JztcblxuQGZ1bmN0aW9uIGJyZWFrcG9pbnQtc3RyaW5nLXZhbHVlKCRmZWF0dXJlKSB7XG4gIEBlYWNoICRpdGVtIGluICRicmVha3BvaW50LXN0cmluZy1mZWF0dXJlcyB7XG4gICAgQGlmIGJyZWFrcG9pbnQtbWluLW1heCgkaXRlbSkge1xuICAgICAgQGlmICRmZWF0dXJlID09ICdtaW4tI3skaXRlbX0nIG9yICRmZWF0dXJlID09ICdtYXgtI3skaXRlbX0nIHtcbiAgICAgICAgQHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgICBAZWxzZSBpZiAkZmVhdHVyZSA9PSAkaXRlbSB7XG4gICAgICBAcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG4gIEByZXR1cm4gZmFsc2U7XG59XG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gUmV0dXJucyB3aGV0aGVyIHRoZSBmZWF0dXJlIGlzIGEgbWVkaWEgdHlwZVxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4kYnJlYWtwb2ludC1tZWRpYS10eXBlczogICdhbGwnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAnYnJhaWxsZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICdlbWJvc3NlZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICdoYW5kaGVsZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICdwcmludCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICdwcm9qZWN0aW9uJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJ3NjcmVlbicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICdzcGVlY2gnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAndHR5JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJ3R2JztcblxuQGZ1bmN0aW9uIGJyZWFrcG9pbnQtaXMtbWVkaWEoJGZlYXR1cmUpIHtcbiAgQGVhY2ggJG1lZGlhIGluICRicmVha3BvaW50LW1lZGlhLXR5cGVzIHtcbiAgICBAaWYgKCRmZWF0dXJlID09ICRtZWRpYSkgb3IgKCRmZWF0dXJlID09ICdub3QgI3skbWVkaWF9Jykgb3IgKCRmZWF0dXJlID09ICdvbmx5ICN7JG1lZGlhfScpIHtcbiAgICAgIEByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICBAcmV0dXJuIGZhbHNlO1xufVxuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFJldHVybnMgd2hldGhlciB0aGUgZmVhdHVyZSBjYW4gc3RhbmQgYWxvbmVcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuJGJyZWFrcG9pbnQtc2luZ2xlLXN0cmluZy1mZWF0dXJlczogJ2NvbG9yJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdjb2xvci1pbmRleCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZ3JpZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbW9ub2Nocm9tZSc7XG5cbkBmdW5jdGlvbiBicmVha3BvaW50LXNpbmdsZS1zdHJpbmcoJGZlYXR1cmUpIHtcbiAgQGVhY2ggJGl0ZW0gaW4gJGJyZWFrcG9pbnQtc2luZ2xlLXN0cmluZy1mZWF0dXJlcyB7XG4gICAgQGlmICRmZWF0dXJlID09ICRpdGVtIHtcbiAgICAgIEByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgQHJldHVybiBmYWxzZTtcbn1cblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBSZXR1cm5zIHdoZXRoZXIgdGhlIGZlYXR1cmVcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuQGZ1bmN0aW9uIGJyZWFrcG9pbnQtaXMtcmVzb2x1dGlvbigkZmVhdHVyZSkge1xuICAkcmVzb2x1dGlvbnM6ICdkZXZpY2UtcGl4ZWwtcmF0aW8nLCAnZHByJztcblxuICBAaWYgYnJlYWtwb2ludC1nZXQoJ3RyYW5zZm9ybSByZXNvbHV0aW9ucycpIHtcbiAgICAkcmVzb2x1dGlvbnM6IGFwcGVuZCgkcmVzb2x1dGlvbnMsICdyZXNvbHV0aW9uJyk7XG4gIH1cblxuICBAZWFjaCAkcmVzbyBpbiAkcmVzb2x1dGlvbnMge1xuICAgIEBpZiBpbmRleCgkZmVhdHVyZSwgJHJlc28pIG9yIGluZGV4KCRmZWF0dXJlLCAnbWluLSN7JHJlc299Jykgb3IgaW5kZXgoJGZlYXR1cmUsICdtYXgtI3skcmVzb30nKSB7XG4gICAgICBAcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG5cbiAgQHJldHVybiBmYWxzZTtcbn1cbiIsIi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gSW1wb3J0IFBhcnNlciBQaWVjZXNcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuQGltcG9ydCBcInBhcnNlcnMvcXVlcnlcIjtcbkBpbXBvcnQgXCJwYXJzZXJzL3NpbmdsZVwiO1xuQGltcG9ydCBcInBhcnNlcnMvZG91YmxlXCI7XG5AaW1wb3J0IFwicGFyc2Vycy90cmlwbGVcIjtcbkBpbXBvcnQgXCJwYXJzZXJzL3Jlc29sdXRpb25cIjtcblxuJE1lbW8tRXhpc3RzOiBmdW5jdGlvbi1leGlzdHMobWVtby1nZXQpIGFuZCBmdW5jdGlvbi1leGlzdHMobWVtby1zZXQpO1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIEJyZWFrcG9pbnQgRnVuY3Rpb25cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuQGZ1bmN0aW9uIGJyZWFrcG9pbnQoJHF1ZXJ5LCAkY29udGV4dHMuLi4pIHtcbiAgJHJ1bjogdHJ1ZTtcbiAgJHJldHVybjogKCk7XG5cbiAgLy8gR3JhYiB0aGUgTWVtbyBPdXRwdXQgaWYgTWVtb2l6YXRpb24gY2FuIGJlIGEgdGhpbmdcbiAgQGlmICRNZW1vLUV4aXN0cyB7XG4gICAgJHJldHVybjogbWVtby1nZXQoYnJlYWtwb2ludCwgYnJlYWtwb2ludCAkcXVlcnkgJGNvbnRleHRzKTtcblxuICAgIEBpZiAkcmV0dXJuICE9IG51bGwge1xuICAgICAgJHJ1bjogZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgQGlmIG5vdCAkTWVtby1FeGlzdHMgb3IgJHJ1biB7XG4gICAgLy8gSW50ZXJuYWwgVmFyaWFibGVzXG4gICAgJHF1ZXJ5LXN0cmluZzogJyc7XG4gICAgJHF1ZXJ5LWZhbGxiYWNrOiBmYWxzZTtcbiAgICAkcmV0dXJuOiAoKTtcblxuICAgIC8vIFJlc2VydmUgR2xvYmFsIFByaXZhdGUgQnJlYWtwb2ludCBDb250ZXh0XG4gICAgJGhvbGRlci1jb250ZXh0OiAkcHJpdmF0ZS1icmVha3BvaW50LWNvbnRleHQtaG9sZGVyO1xuICAgICRob2xkZXItcXVlcnktY291bnQ6ICRwcml2YXRlLWJyZWFrcG9pbnQtcXVlcnktY291bnQ7XG5cbiAgICAvLyBSZXNldCBHbG9iYWwgUHJpdmF0ZSBCcmVha3BvaW50IENvbnRleHRcbiAgICAkcHJpdmF0ZS1icmVha3BvaW50LWNvbnRleHQtaG9sZGVyOiAoKSAhZ2xvYmFsO1xuICAgICRwcml2YXRlLWJyZWFrcG9pbnQtcXVlcnktY291bnQ6IDAgIWdsb2JhbDtcblxuXG4gICAgLy8gVGVzdCB0byBzZWUgaWYgaXQncyBhIGNvbW1hLXNlcGFyYXRlZCBsaXN0XG4gICAgJG9yLWxpc3Q6IGlmKGxpc3Qtc2VwYXJhdG9yKCRxdWVyeSkgPT0gJ2NvbW1hJywgdHJ1ZSwgZmFsc2UpO1xuXG5cbiAgICBAaWYgKCRvci1saXN0ID09IGZhbHNlIGFuZCBicmVha3BvaW50LWdldCgnbGVnYWN5IHN5bnRheCcpID09IGZhbHNlKSB7XG4gICAgICAkcXVlcnktc3RyaW5nOiBicmVha3BvaW50LXBhcnNlKCRxdWVyeSk7XG4gICAgfVxuICAgIEBlbHNlIHtcbiAgICAgICRsZW5ndGg6IGxlbmd0aCgkcXVlcnkpO1xuXG4gICAgICAkbGFzdDogbnRoKCRxdWVyeSwgJGxlbmd0aCk7XG4gICAgICAkcXVlcnktZmFsbGJhY2s6IGJyZWFrcG9pbnQtbm8tcXVlcnkoJGxhc3QpO1xuXG4gICAgICBAaWYgKCRxdWVyeS1mYWxsYmFjayAhPSBmYWxzZSkge1xuICAgICAgICAkbGVuZ3RoOiAkbGVuZ3RoIC0gMTtcbiAgICAgIH1cblxuICAgICAgQGlmIChicmVha3BvaW50LWdldCgnbGVnYWN5IHN5bnRheCcpID09IHRydWUpIHtcbiAgICAgICAgJG1xOiAoKTtcblxuICAgICAgICBAZm9yICRpIGZyb20gMSB0aHJvdWdoICRsZW5ndGgge1xuICAgICAgICAgICRtcTogYXBwZW5kKCRtcSwgbnRoKCRxdWVyeSwgJGkpLCBjb21tYSk7XG4gICAgICAgIH1cblxuICAgICAgICAkcXVlcnktc3RyaW5nOiBicmVha3BvaW50LXBhcnNlKCRtcSk7XG4gICAgICB9XG4gICAgICBAZWxzZSB7XG4gICAgICAgICRxdWVyeS1zdHJpbmc6ICcnO1xuICAgICAgICBAZm9yICRpIGZyb20gMSB0aHJvdWdoICRsZW5ndGgge1xuICAgICAgICAgICRxdWVyeS1zdHJpbmc6ICRxdWVyeS1zdHJpbmcgKyBpZigkaSA9PSAxLCAnJywgJywgJykgKyBicmVha3BvaW50LXBhcnNlKG50aCgkcXVlcnksICRpKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAkcmV0dXJuOiAoJ3F1ZXJ5JzogJHF1ZXJ5LXN0cmluZyxcbiAgICAgICAgJ2ZhbGxiYWNrJzogJHF1ZXJ5LWZhbGxiYWNrLFxuICAgICAgICAnY29udGV4dCBob2xkZXInOiAkcHJpdmF0ZS1icmVha3BvaW50LWNvbnRleHQtaG9sZGVyLFxuICAgICAgICAncXVlcnkgY291bnQnOiAkcHJpdmF0ZS1icmVha3BvaW50LXF1ZXJ5LWNvdW50XG4gICAgKTtcbiAgICBAaWYgbGVuZ3RoKCRjb250ZXh0cykgPiAwIGFuZCBudGgoJGNvbnRleHRzLCAxKSAhPSBmYWxzZSB7XG4gICAgICBAaWYgJHF1ZXJ5LWZhbGxiYWNrICE9IGZhbHNlIHtcbiAgICAgICAgJGNvbnRleHQtc2V0dGVyOiBwcml2YXRlLWJyZWFrcG9pbnQtc2V0LWNvbnRleHQoJ25vLXF1ZXJ5JywgJHF1ZXJ5LWZhbGxiYWNrKTtcbiAgICAgIH1cbiAgICAgICRjb250ZXh0LW1hcDogKCk7XG4gICAgICBAZWFjaCAkY29udGV4dCBpbiAkY29udGV4dHMge1xuICAgICAgICAkY29udGV4dC1tYXA6IG1hcC1tZXJnZSgkY29udGV4dC1tYXAsICgkY29udGV4dDogYnJlYWtwb2ludC1nZXQtY29udGV4dCgkY29udGV4dCkpKTtcbiAgICAgIH1cbiAgICAgICRyZXR1cm46IG1hcC1tZXJnZSgkcmV0dXJuLCAoY29udGV4dDogJGNvbnRleHQtbWFwKSk7XG4gICAgfVxuXG4gICAgLy8gUmVzZXQgR2xvYmFsIFByaXZhdGUgQnJlYWtwb2ludCBDb250ZXh0XG4gICAgJHByaXZhdGUtYnJlYWtwb2ludC1jb250ZXh0LWhvbGRlcjogKCkgIWdsb2JhbDtcbiAgICAkcHJpdmF0ZS1icmVha3BvaW50LXF1ZXJ5LWNvdW50OiAwICFnbG9iYWw7XG5cbiAgICBAaWYgJE1lbW8tRXhpc3RzIHtcbiAgICAgICRob2xkZXI6IG1lbW8tc2V0KGJyZWFrcG9pbnQsIGJyZWFrcG9pbnQgJHF1ZXJ5ICRjb250ZXh0cywgJHJldHVybik7XG4gICAgfVxuICB9XG5cbiAgQHJldHVybiAkcmV0dXJuO1xufVxuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIEdlbmVyYWwgQnJlYWtwb2ludCBQYXJzZXJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuQGZ1bmN0aW9uIGJyZWFrcG9pbnQtcGFyc2UoJHF1ZXJ5KSB7XG4gIC8vIEluY3JlYXNlIG51bWJlciBvZiAnYW5kJyBxdWVyaWVzXG4gICRwcml2YXRlLWJyZWFrcG9pbnQtcXVlcnktY291bnQ6ICRwcml2YXRlLWJyZWFrcG9pbnQtcXVlcnktY291bnQgKyAxICFnbG9iYWw7XG5cbiAgLy8gU2V0IHVwIE1lZGlhIFR5cGVcbiAgJHF1ZXJ5LXByaW50OiAnJztcblxuICAkZm9yY2UtYWxsOiAoKGJyZWFrcG9pbnQtZ2V0KCdmb3JjZSBhbGwgbWVkaWEgdHlwZScpID09IHRydWUpIGFuZCAoYnJlYWtwb2ludC1nZXQoJ2RlZmF1bHQgbWVkaWEnKSA9PSAnYWxsJykpO1xuICAkZW1wdHktbWVkaWE6IHRydWU7XG4gIEBpZiAoJGZvcmNlLWFsbCA9PSB0cnVlKSBvciAoYnJlYWtwb2ludC1nZXQoJ2RlZmF1bHQgbWVkaWEnKSAhPSAnYWxsJykge1xuICAgIC8vIEZvcmNlIHRoZSBwcmludCBvZiB0aGUgZGVmYXVsdCBtZWRpYSB0eXBlIGlmIChmb3JjZSBhbGwgaXMgdHJ1ZSBhbmQgZGVmYXVsdCBtZWRpYSB0eXBlIGlzIGFsbCkgb3IgKGRlZmF1bHQgbWVkaWEgdHlwZSBpcyBub3QgYWxsKVxuICAgICRxdWVyeS1wcmludDogYnJlYWtwb2ludC1nZXQoJ2RlZmF1bHQgbWVkaWEnKTtcbiAgICAkZW1wdHktbWVkaWE6IGZhbHNlO1xuICB9XG5cblxuICAkcXVlcnktcmVzb2x1dGlvbjogZmFsc2U7XG5cbiAgJHF1ZXJ5LWhvbGRlcjogYnJlYWtwb2ludC1wYXJzZS1xdWVyeSgkcXVlcnkpO1xuXG5cblxuICAvLyBMb29wIG92ZXIgZWFjaCBwYXJzZWQgb3V0IHF1ZXJ5IGFuZCB3cml0ZSBpdCB0byAkcXVlcnktcHJpbnRcbiAgJGZpcnN0OiB0cnVlO1xuXG4gIEBlYWNoICRmZWF0dXJlIGluICRxdWVyeS1ob2xkZXIge1xuICAgICRsZW5ndGg6IGxlbmd0aCgkZmVhdHVyZSk7XG5cbiAgICAvLyBQYXJzZSBhIHNpbmdsZSBmZWF0dXJlXG4gICAgQGlmICgkbGVuZ3RoID09IDEpIHtcbiAgICAgIC8vIEZlYXR1cmUgaXMgY3VycmVudGx5IGEgbGlzdCwgZ3JhYiB0aGUgYWN0dWFsIHZhbHVlXG4gICAgICAkZmVhdHVyZTogbnRoKCRmZWF0dXJlLCAxKTtcblxuICAgICAgLy8gTWVkaWEgVHlwZSBtdXN0IGJ5IGNvbnZlbnRpb24gYmUgdGhlIGZpcnN0IGl0ZW0sIHNvIGl0J3Mgc2FmZSB0byBmbGF0IG92ZXJyaWRlICRxdWVyeS1wcmludCwgd2hpY2ggcmlnaHQgbm93IHNob3VsZCBvbmx5IGJlIHRoZSBkZWZhdWx0IG1lZGlhIHR5cGVcbiAgICAgIEBpZiAoYnJlYWtwb2ludC1pcy1tZWRpYSgkZmVhdHVyZSkpIHtcbiAgICAgICAgQGlmICgkZm9yY2UtYWxsID09IHRydWUpIG9yICgkZmVhdHVyZSAhPSAnYWxsJykge1xuICAgICAgICAgIC8vIEZvcmNlIHRoZSBwcmludCBvZiB0aGUgZGVmYXVsdCBtZWRpYSB0eXBlIGlmIChmb3JjZSBhbGwgaXMgdHJ1ZSBhbmQgZGVmYXVsdCBtZWRpYSB0eXBlIGlzIGFsbCkgb3IgKGRlZmF1bHQgbWVkaWEgdHlwZSBpcyBub3QgYWxsKVxuICAgICAgICAgICRxdWVyeS1wcmludDogJGZlYXR1cmU7XG4gICAgICAgICAgJGVtcHR5LW1lZGlhOiBmYWxzZTtcblxuICAgICAgICAgIC8vIFNldCBDb250ZXh0XG4gICAgICAgICAgJGNvbnRleHQtc2V0dGVyOiBwcml2YXRlLWJyZWFrcG9pbnQtc2V0LWNvbnRleHQobWVkaWEsICRxdWVyeS1wcmludCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIEBlbHNlIHtcbiAgICAgICAgJHBhcnNlZDogYnJlYWtwb2ludC1wYXJzZS1zaW5nbGUoJGZlYXR1cmUsICRlbXB0eS1tZWRpYSwgJGZpcnN0KTtcbiAgICAgICAgJHF1ZXJ5LXByaW50OiAnI3skcXVlcnktcHJpbnR9ICN7JHBhcnNlZH0nO1xuICAgICAgICAkZmlyc3Q6IGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgICAvLyBQYXJzZSBhIGRvdWJsZSBmZWF0dXJlXG4gICAgQGVsc2UgaWYgKCRsZW5ndGggPT0gMikge1xuICAgICAgQGlmIChicmVha3BvaW50LWlzLXJlc29sdXRpb24oJGZlYXR1cmUpICE9IGZhbHNlKSB7XG4gICAgICAgICRxdWVyeS1yZXNvbHV0aW9uOiAkZmVhdHVyZTtcbiAgICAgIH1cbiAgICAgIEBlbHNlIHtcbiAgICAgICAgJHBhcnNlZDogbnVsbDtcbiAgICAgICAgLy8gSWYgaXQncyBhIHN0cmluZy9udW1iZXIgcGFpcixcbiAgICAgICAgLy8gd2UgY2hlY2sgdG8gc2VlIGlmIG9uZSBpcyBhIHNpbmdsZS1zdHJpbmcgdmFsdWUsXG4gICAgICAgIC8vIHRoZW4gd2UgcGFyc2UgaXQgYXMgYSBub3JtYWwgZG91YmxlXG4gICAgICAgICRhbHBoYTogbnRoKCRmZWF0dXJlLCAxKTtcbiAgICAgICAgJGJldGE6IG50aCgkZmVhdHVyZSwgMik7XG4gICAgICAgIEBpZiBicmVha3BvaW50LXNpbmdsZS1zdHJpbmcoJGFscGhhKSBvciBicmVha3BvaW50LXNpbmdsZS1zdHJpbmcoJGJldGEpIHtcbiAgICAgICAgICAkcGFyc2VkOiBicmVha3BvaW50LXBhcnNlLXNpbmdsZSgkYWxwaGEsICRlbXB0eS1tZWRpYSwgJGZpcnN0KTtcbiAgICAgICAgICAkcXVlcnktcHJpbnQ6ICcjeyRxdWVyeS1wcmludH0gI3skcGFyc2VkfSc7XG4gICAgICAgICAgJGZpcnN0OiBmYWxzZTtcbiAgICAgICAgICAkcGFyc2VkOiBicmVha3BvaW50LXBhcnNlLXNpbmdsZSgkYmV0YSwgJGVtcHR5LW1lZGlhLCAkZmlyc3QpO1xuICAgICAgICAgICRxdWVyeS1wcmludDogJyN7JHF1ZXJ5LXByaW50fSAjeyRwYXJzZWR9JztcbiAgICAgICAgfVxuICAgICAgICBAZWxzZSB7XG4gICAgICAgICAgJHBhcnNlZDogYnJlYWtwb2ludC1wYXJzZS1kb3VibGUoJGZlYXR1cmUsICRlbXB0eS1tZWRpYSwgJGZpcnN0KTtcbiAgICAgICAgICAkcXVlcnktcHJpbnQ6ICcjeyRxdWVyeS1wcmludH0gI3skcGFyc2VkfSc7XG4gICAgICAgICAgJGZpcnN0OiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICAvLyBQYXJzZSBhIHRyaXBsZSBmZWF0dXJlXG4gICAgQGVsc2UgaWYgKCRsZW5ndGggPT0gMykge1xuICAgICAgJHBhcnNlZDogYnJlYWtwb2ludC1wYXJzZS10cmlwbGUoJGZlYXR1cmUsICRlbXB0eS1tZWRpYSwgJGZpcnN0KTtcbiAgICAgICRxdWVyeS1wcmludDogJyN7JHF1ZXJ5LXByaW50fSAjeyRwYXJzZWR9JztcbiAgICAgICRmaXJzdDogZmFsc2U7XG4gICAgfVxuXG4gIH1cblxuICBAaWYgKCRxdWVyeS1yZXNvbHV0aW9uICE9IGZhbHNlKSB7XG4gICAgJHF1ZXJ5LXByaW50OiBicmVha3BvaW50LWJ1aWxkLXJlc29sdXRpb24oJHF1ZXJ5LXByaW50LCAkcXVlcnktcmVzb2x1dGlvbiwgJGVtcHR5LW1lZGlhLCAkZmlyc3QpO1xuICB9XG5cbiAgLy8gTG9vcCB0aHJvdWdoIGVhY2ggZmVhdHVyZSB0aGF0J3MgYmVlbiBkZXRlY3RlZCBzbyBmYXIgYW5kIGFwcGVuZCAnZmFsc2UnIHRvIHRoZSB0aGUgdmFsdWUgbGlzdCB0byBpbmNyZW1lbnQgdGhlaXIgY291bnRlcnNcbiAgQGVhY2ggJGYsICR2IGluICRwcml2YXRlLWJyZWFrcG9pbnQtY29udGV4dC1ob2xkZXIge1xuICAgICR2LWhvbGRlcjogJHY7XG4gICAgJGxlbmd0aDogbGVuZ3RoKCR2LWhvbGRlcik7XG4gICAgQGlmIGxlbmd0aCgkdi1ob2xkZXIpIDwgJHByaXZhdGUtYnJlYWtwb2ludC1xdWVyeS1jb3VudCB7XG4gICAgICBAZm9yICRpIGZyb20gJGxlbmd0aCB0byAkcHJpdmF0ZS1icmVha3BvaW50LXF1ZXJ5LWNvdW50IHtcbiAgICAgICAgQGlmICRmID09ICdtZWRpYScge1xuICAgICAgICAgICR2LWhvbGRlcjogYXBwZW5kKCR2LWhvbGRlciwgYnJlYWtwb2ludC1nZXQoJ2RlZmF1bHQgbWVkaWEnKSk7XG4gICAgICAgIH1cbiAgICAgICAgQGVsc2Uge1xuICAgICAgICAgICR2LWhvbGRlcjogYXBwZW5kKCR2LWhvbGRlciwgZmFsc2UpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgICRwcml2YXRlLWJyZWFrcG9pbnQtY29udGV4dC1ob2xkZXI6IG1hcC1tZXJnZSgkcHJpdmF0ZS1icmVha3BvaW50LWNvbnRleHQtaG9sZGVyLCAoJGY6ICR2LWhvbGRlcikpICFnbG9iYWw7XG4gIH1cblxuICBAcmV0dXJuICRxdWVyeS1wcmludDtcbn1cbiIsIkBmdW5jdGlvbiBicmVha3BvaW50LXBhcnNlLXF1ZXJ5KCRxdWVyeSkge1xuICAvLyBQYXJzZSBmZWF0dXJlcyBvdXQgb2YgYW4gaW5kaXZpZHVhbCBxdWVyeVxuICAkZmVhdHVyZS1ob2xkZXI6ICgpO1xuICAkcXVlcnktaG9sZGVyOiAoKTtcbiAgJGxlbmd0aDogbGVuZ3RoKCRxdWVyeSk7XG5cbiAgQGlmICRsZW5ndGggPT0gMiB7XG4gICAgLy8gSWYgd2UndmUgZ290IGEgc3RyaW5nL251bWJlciwgbnVtYmVyL3N0cmluZywgY2hlY2sgdG8gc2VlIGlmIGl0J3MgYSB2YWxpZCBzdHJpbmcvbnVtYmVyIHBhaXIgb3IgdHdvIHNpbmdsZXNcbiAgICBAaWYgKHR5cGUtb2YobnRoKCRxdWVyeSwgMSkpID09ICdzdHJpbmcnIGFuZCB0eXBlLW9mKG50aCgkcXVlcnksIDIpKSA9PSAnbnVtYmVyJykgb3IgKHR5cGUtb2YobnRoKCRxdWVyeSwgMSkpID09ICdudW1iZXInIGFuZCB0eXBlLW9mKG50aCgkcXVlcnksIDIpKSA9PSAnc3RyaW5nJykge1xuXG4gICAgICAkbnVtYmVyOiAnJztcbiAgICAgICR2YWx1ZTogJyc7XG5cbiAgICAgIEBpZiB0eXBlLW9mKG50aCgkcXVlcnksIDEpKSA9PSAnc3RyaW5nJyB7XG4gICAgICAgICRudW1iZXI6IG50aCgkcXVlcnksIDIpO1xuICAgICAgICAkdmFsdWU6IG50aCgkcXVlcnksIDEpO1xuICAgICAgfVxuICAgICAgQGVsc2Uge1xuICAgICAgICAkbnVtYmVyOiBudGgoJHF1ZXJ5LCAxKTtcbiAgICAgICAgJHZhbHVlOiBudGgoJHF1ZXJ5LCAyKTtcbiAgICAgIH1cblxuICAgICAgLy8gSWYgdGhlIHN0cmluZyB2YWx1ZSBjYW4gYmUgYSBzaW5nbGUgdmFsdWUsIGNoZWNrIHRvIHNlZSBpZiB0aGUgbnVtYmVyIHBhc3NlZCBpbiBpcyBhIHZhbGlkIGlucHV0IGZvciBzYWlkIHNpbmdsZSB2YWx1ZS4gRm9ydHVuYXRlbHksIGFsbCBjdXJyZW50IHNpbmdsZS12YWx1ZSBvcHRpb25zIG9ubHkgYWNjZXB0IHVuaXRsZXNzIG51bWJlcnMsIHNvIHRoaXMgY2hlY2sgaXMgZWFzeS5cbiAgICAgIEBpZiBicmVha3BvaW50LXNpbmdsZS1zdHJpbmcoJHZhbHVlKSB7XG4gICAgICAgIEBpZiB1bml0bGVzcygkbnVtYmVyKSB7XG4gICAgICAgICAgJGZlYXR1cmUtaG9sZGVyOiBhcHBlbmQoJHZhbHVlLCAkbnVtYmVyLCBzcGFjZSk7XG4gICAgICAgICAgJHF1ZXJ5LWhvbGRlcjogYXBwZW5kKCRxdWVyeS1ob2xkZXIsICRmZWF0dXJlLWhvbGRlciwgY29tbWEpO1xuICAgICAgICAgIEByZXR1cm4gJHF1ZXJ5LWhvbGRlcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgLy8gSWYgdGhlIHN0cmluZyBpcyBhIG1lZGlhIHR5cGUsIHNwbGl0IHRoZSBxdWVyeVxuICAgICAgQGlmIGJyZWFrcG9pbnQtaXMtbWVkaWEoJHZhbHVlKSB7XG4gICAgICAgICRxdWVyeS1ob2xkZXI6IGFwcGVuZCgkcXVlcnktaG9sZGVyLCBudGgoJHF1ZXJ5LCAxKSk7XG4gICAgICAgICRxdWVyeS1ob2xkZXI6IGFwcGVuZCgkcXVlcnktaG9sZGVyLCBudGgoJHF1ZXJ5LCAyKSk7XG4gICAgICAgIEByZXR1cm4gJHF1ZXJ5LWhvbGRlcjtcbiAgICAgIH1cbiAgICAgIC8vIElmIGl0J3Mgbm90IGEgc2luZ2xlIGZlYXR1cmUsIHdlJ3JlIGp1c3QgZ29pbmcgdG8gYXNzdW1lIGl0J3MgYSBwcm9wZXIgc3RyaW5nL3ZhbHVlIHBhaXIsIGFuZCByb2xsIHdpdGggaXQuXG4gICAgICBAZWxzZSB7XG4gICAgICAgICRmZWF0dXJlLWhvbGRlcjogYXBwZW5kKCR2YWx1ZSwgJG51bWJlciwgc3BhY2UpO1xuICAgICAgICAkcXVlcnktaG9sZGVyOiBhcHBlbmQoJHF1ZXJ5LWhvbGRlciwgJGZlYXR1cmUtaG9sZGVyLCBjb21tYSk7XG4gICAgICAgIEByZXR1cm4gJHF1ZXJ5LWhvbGRlcjtcbiAgICAgIH1cblxuICAgIH1cbiAgICAvLyBJZiB0aGV5J3JlIGJvdGggbnVtYmVycywgd2UgYXNzdW1lIGl0J3MgYSBkb3VibGUgYW5kIHJvbGwgd2l0aCB0aGF0XG4gICAgQGVsc2UgaWYgKHR5cGUtb2YobnRoKCRxdWVyeSwgMSkpID09ICdudW1iZXInIGFuZCB0eXBlLW9mKG50aCgkcXVlcnksIDIpKSA9PSAnbnVtYmVyJykge1xuICAgICAgJGZlYXR1cmUtaG9sZGVyOiBhcHBlbmQobnRoKCRxdWVyeSwgMSksIG50aCgkcXVlcnksIDIpLCBzcGFjZSk7XG4gICAgICAkcXVlcnktaG9sZGVyOiBhcHBlbmQoJHF1ZXJ5LWhvbGRlciwgJGZlYXR1cmUtaG9sZGVyLCBjb21tYSk7XG4gICAgICBAcmV0dXJuICRxdWVyeS1ob2xkZXI7XG4gICAgfVxuICAgIC8vIElmIHRoZXkncmUgYm90aCBzdHJpbmdzIGFuZCBuZWl0aGVyIGFyZSBzaW5nbGVzLCB3ZSByb2xsIHdpdGggdGhhdC5cbiAgICBAZWxzZSBpZiAodHlwZS1vZihudGgoJHF1ZXJ5LCAxKSkgPT0gJ3N0cmluZycgYW5kIHR5cGUtb2YobnRoKCRxdWVyeSwgMikpID09ICdzdHJpbmcnKSB7XG4gICAgICBAaWYgbm90IGJyZWFrcG9pbnQtc2luZ2xlLXN0cmluZyhudGgoJHF1ZXJ5LCAxKSkgYW5kIG5vdCBicmVha3BvaW50LXNpbmdsZS1zdHJpbmcobnRoKCRxdWVyeSwgMikpIHtcbiAgICAgICAgJGZlYXR1cmUtaG9sZGVyOiBhcHBlbmQobnRoKCRxdWVyeSwgMSksIG50aCgkcXVlcnksIDIpLCBzcGFjZSk7XG4gICAgICAgICRxdWVyeS1ob2xkZXI6IGFwcGVuZCgkcXVlcnktaG9sZGVyLCAkZmVhdHVyZS1ob2xkZXIsIGNvbW1hKTtcbiAgICAgICAgQHJldHVybiAkcXVlcnktaG9sZGVyO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBAZWxzZSBpZiAkbGVuZ3RoID09IDMge1xuICAgIC8vIElmIHdlJ3ZlIGdvdCB0aHJlZSBpdGVtcyBhbmQgbm9uZSBpcyBhIGxpc3QsIHdlIGNoZWNrIHRvIHNlZVxuICAgIEBpZiB0eXBlLW9mKG50aCgkcXVlcnksIDEpKSAhPSAnbGlzdCcgYW5kIHR5cGUtb2YobnRoKCRxdWVyeSwgMikpICE9ICdsaXN0JyBhbmQgdHlwZS1vZihudGgoJHF1ZXJ5LCAzKSkgIT0gJ2xpc3QnIHtcbiAgICAgIC8vIElmIG5vbmUgb2YgdGhlIGl0ZW1zIGFyZSBzaW5nbGUgc3RyaW5nIHZhbHVlcyBhbmQgbm9uZSBvZiB0aGUgdmFsdWVzIGFyZSBtZWRpYSB2YWx1ZXMsIHdlJ3JlIGdvb2QuXG4gICAgICBAaWYgKG5vdCBicmVha3BvaW50LXNpbmdsZS1zdHJpbmcobnRoKCRxdWVyeSwgMSkpIGFuZCBub3QgYnJlYWtwb2ludC1zaW5nbGUtc3RyaW5nKG50aCgkcXVlcnksIDIpKSBhbmQgbm90IGJyZWFrcG9pbnQtc2luZ2xlLXN0cmluZyhudGgoJHF1ZXJ5LCAzKSkpIGFuZCAgKChub3QgYnJlYWtwb2ludC1pcy1tZWRpYShudGgoJHF1ZXJ5LCAxKSkgYW5kIG5vdCBicmVha3BvaW50LWlzLW1lZGlhKG50aCgkcXVlcnksIDIpKSBhbmQgbm90IGJyZWFrcG9pbnQtaXMtbWVkaWEobnRoKCRxdWVyeSwgMykpKSkge1xuICAgICAgICAkZmVhdHVyZS1ob2xkZXI6IGFwcGVuZChudGgoJHF1ZXJ5LCAxKSwgbnRoKCRxdWVyeSwgMiksIHNwYWNlKTtcbiAgICAgICAgJGZlYXR1cmUtaG9sZGVyOiBhcHBlbmQoJGZlYXR1cmUtaG9sZGVyLCBudGgoJHF1ZXJ5LCAzKSwgc3BhY2UpO1xuICAgICAgICAkcXVlcnktaG9sZGVyOiBhcHBlbmQoJHF1ZXJ5LWhvbGRlciwgJGZlYXR1cmUtaG9sZGVyLCBjb21tYSk7XG4gICAgICAgIEByZXR1cm4gJHF1ZXJ5LWhvbGRlcjtcbiAgICAgIH1cbiAgICAgIC8vIGxldCdzIGNoZWNrIHRvIHNlZSBpZiB0aGUgZmlyc3QgaXRlbSBpcyBhIG1lZGlhIHR5cGVcbiAgICAgIEBlbHNlIGlmIGJyZWFrcG9pbnQtaXMtbWVkaWEobnRoKCRxdWVyeSwgMSkpIHtcbiAgICAgICAgJHF1ZXJ5LWhvbGRlcjogYXBwZW5kKCRxdWVyeS1ob2xkZXIsIG50aCgkcXVlcnksIDEpKTtcbiAgICAgICAgJGZlYXR1cmUtaG9sZGVyOiBhcHBlbmQobnRoKCRxdWVyeSwgMiksIG50aCgkcXVlcnksIDMpLCBzcGFjZSk7XG4gICAgICAgICRxdWVyeS1ob2xkZXI6IGFwcGVuZCgkcXVlcnktaG9sZGVyLCAkZmVhdHVyZS1ob2xkZXIpO1xuICAgICAgICBAcmV0dXJuICRxdWVyeS1ob2xkZXI7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gSWYgaXQncyBhIHNpbmdsZSBpdGVtLCBvciBpZiBpdCdzIG5vdCBhIHNwZWNpYWwgY2FzZSBkb3VibGUgb3IgdHJpcGxlLCB3ZSBjYW4gc2ltcGx5IHJldHVybiB0aGUgcXVlcnkuXG4gIEByZXR1cm4gJHF1ZXJ5O1xufVxuIiwiLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBJbXBvcnQgUGllY2VzXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbkBpbXBvcnQgXCJzaW5nbGUvZGVmYXVsdFwiO1xuXG5AZnVuY3Rpb24gYnJlYWtwb2ludC1wYXJzZS1zaW5nbGUoJGZlYXR1cmUsICRlbXB0eS1tZWRpYSwgJGZpcnN0KSB7XG4gICRwYXJzZWQ6ICcnO1xuICAkbGVhZGVyOiAnJztcbiAgLy8gSWYgd2UncmUgZm9yY2luZ1xuICBAaWYgbm90ICgkZW1wdHktbWVkaWEpIG9yIG5vdCAoJGZpcnN0KSB7XG4gICAgJGxlYWRlcjogJ2FuZCAnO1xuICB9XG5cbiAgLy8gSWYgaXQncyBhIHNpbmdsZSBmZWF0dXJlIHRoYXQgY2FuIHN0YW5kIGFsb25lLCB3ZSBsZXQgaXRcbiAgQGlmIChicmVha3BvaW50LXNpbmdsZS1zdHJpbmcoJGZlYXR1cmUpKSB7XG4gICAgJHBhcnNlZDogJGZlYXR1cmU7XG4gICAgLy8gU2V0IENvbnRleHRcbiAgICAkY29udGV4dC1zZXR0ZXI6IHByaXZhdGUtYnJlYWtwb2ludC1zZXQtY29udGV4dCgkZmVhdHVyZSwgJGZlYXR1cmUpO1xuICB9XG4gIC8vIElmIGl0J3Mgbm90IGEgc3RhbmQgYWxvbmUgZmVhdHVyZSwgd2UgcGFzcyBpdCBvZmYgdG8gdGhlIGRlZmF1bHQgaGFuZGxlci5cbiAgQGVsc2Uge1xuICAgICRwYXJzZWQ6IGJyZWFrcG9pbnQtcGFyc2UtZGVmYXVsdCgkZmVhdHVyZSk7XG4gIH1cblxuICBAcmV0dXJuICRsZWFkZXIgKyAnKCcgKyAkcGFyc2VkICsgJyknO1xufVxuIiwiQGZ1bmN0aW9uIGJyZWFrcG9pbnQtcGFyc2UtZGVmYXVsdCgkZmVhdHVyZSkge1xuICAkZGVmYXVsdDogYnJlYWtwb2ludC1nZXQoJ2RlZmF1bHQgZmVhdHVyZScpO1xuXG4gIC8vIFNldCBDb250ZXh0XG4gICRjb250ZXh0LXNldHRlcjogcHJpdmF0ZS1icmVha3BvaW50LXNldC1jb250ZXh0KCRkZWZhdWx0LCAkZmVhdHVyZSk7XG5cbiAgQGlmIChicmVha3BvaW50LWdldCgndG8gZW1zJykgPT0gdHJ1ZSkgYW5kICh0eXBlLW9mKCRmZWF0dXJlKSA9PSAnbnVtYmVyJykge1xuICAgIEByZXR1cm4gJyN7JGRlZmF1bHR9OiAje2JyZWFrcG9pbnQtdG8tYmFzZS1lbSgkZmVhdHVyZSl9JztcbiAgfVxuICBAZWxzZSB7XG4gICAgQHJldHVybiAnI3skZGVmYXVsdH06ICN7JGZlYXR1cmV9JztcbiAgfVxufVxuIiwiLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBJbXBvcnQgUGllY2VzXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbkBpbXBvcnQgXCJkb3VibGUvZGVmYXVsdC1wYWlyXCI7XG5AaW1wb3J0IFwiZG91YmxlL2RvdWJsZS1zdHJpbmdcIjtcbkBpbXBvcnQgXCJkb3VibGUvZGVmYXVsdFwiO1xuXG5AZnVuY3Rpb24gYnJlYWtwb2ludC1wYXJzZS1kb3VibGUoJGZlYXR1cmUsICRlbXB0eS1tZWRpYSwgJGZpcnN0KSB7XG4gICRwYXJzZWQ6ICcnO1xuICAkbGVhZGVyOiAnJztcbiAgLy8gSWYgd2UncmUgZm9yY2luZ1xuICBAaWYgbm90ICgkZW1wdHktbWVkaWEpIG9yIG5vdCAoJGZpcnN0KSB7XG4gICAgJGxlYWRlcjogJ2FuZCAnO1xuICB9XG5cbiAgJGZpcnN0OiBudGgoJGZlYXR1cmUsIDEpO1xuICAkc2Vjb25kOiBudGgoJGZlYXR1cmUsIDIpO1xuXG4gIC8vIElmIHdlJ3ZlIGdvdCB0d28gbnVtYmVycywgd2Uga25vdyB3ZSBuZWVkIHRvIHVzZSB0aGUgZGVmYXVsdCBwYWlyIGJlY2F1c2UgdGhlcmUgYXJlIG5vIG1lZGlhIHF1ZXJpZXMgdGhhdCBoYXMgYSBtZWRpYSBmZWF0dXJlIHRoYXQgaXMgYSBudW1iZXJcbiAgQGlmIHR5cGUtb2YoJGZpcnN0KSA9PSAnbnVtYmVyJyBhbmQgdHlwZS1vZigkc2Vjb25kKSA9PSAnbnVtYmVyJyB7XG4gICAgJHBhcnNlZDogYnJlYWtwb2ludC1wYXJzZS1kZWZhdWx0LXBhaXIoJGZpcnN0LCAkc2Vjb25kKTtcbiAgfVxuICAvLyBJZiB0aGV5IGFyZSBib3RoIHN0cmluZ3MsIHdlIHNlbmQgaXQgdGhyb3VnaCB0aGUgc3RyaW5nIHBhcnNlclxuICBAZWxzZSBpZiB0eXBlLW9mKCRmaXJzdCkgPT0gJ3N0cmluZycgYW5kIHR5cGUtb2YoJHNlY29uZCkgPT0gJ3N0cmluZycge1xuICAgICRwYXJzZWQ6IGJyZWFrcG9pbnQtcGFyc2UtZG91YmxlLXN0cmluZygkZmlyc3QsICRzZWNvbmQpO1xuICB9XG4gIC8vIElmIGl0J3MgYSBzdHJpbmcvbnVtYmVyIHBhaXIsIHdlIHBhcnNlIGl0IGFzIGEgbm9ybWFsIGRvdWJsZVxuICBAZWxzZSB7XG4gICAgJHBhcnNlZDogYnJlYWtwb2ludC1wYXJzZS1kb3VibGUtZGVmYXVsdCgkZmlyc3QsICRzZWNvbmQpO1xuICB9XG5cbiAgQHJldHVybiAkbGVhZGVyICsgJHBhcnNlZDtcbn1cbiIsIkBmdW5jdGlvbiBicmVha3BvaW50LXBhcnNlLWRlZmF1bHQtcGFpcigkZmlyc3QsICRzZWNvbmQpIHtcbiAgJGRlZmF1bHQ6IGJyZWFrcG9pbnQtZ2V0KCdkZWZhdWx0IHBhaXInKTtcbiAgJG1pbjogJyc7XG4gICRtYXg6ICcnO1xuXG4gIC8vIFNvcnQgaW50byBtaW4gYW5kIG1heFxuICAkbWluOiBtaW4oJGZpcnN0LCAkc2Vjb25kKTtcbiAgJG1heDogbWF4KCRmaXJzdCwgJHNlY29uZCk7XG5cbiAgLy8gU2V0IENvbnRleHRcbiAgJGNvbnRleHQtc2V0dGVyOiBwcml2YXRlLWJyZWFrcG9pbnQtc2V0LWNvbnRleHQobWluLSN7JGRlZmF1bHR9LCAkbWluKTtcbiAgJGNvbnRleHQtc2V0dGVyOiBwcml2YXRlLWJyZWFrcG9pbnQtc2V0LWNvbnRleHQobWF4LSN7JGRlZmF1bHR9LCAkbWF4KTtcblxuICAvLyBNYWtlIHRoZW0gRU1zIGlmIG5lZWQgYmVcbiAgQGlmIChicmVha3BvaW50LWdldCgndG8gZW1zJykgPT0gdHJ1ZSkge1xuICAgICRtaW46IGJyZWFrcG9pbnQtdG8tYmFzZS1lbSgkbWluKTtcbiAgICAkbWF4OiBicmVha3BvaW50LXRvLWJhc2UtZW0oJG1heCk7XG4gIH1cblxuICBAcmV0dXJuICcobWluLSN7JGRlZmF1bHR9OiAjeyRtaW59KSBhbmQgKG1heC0jeyRkZWZhdWx0fTogI3skbWF4fSknO1xufVxuIiwiQGZ1bmN0aW9uIGJyZWFrcG9pbnQtcGFyc2UtZG91YmxlLXN0cmluZygkZmlyc3QsICRzZWNvbmQpIHtcbiAgJGZlYXR1cmU6ICcnO1xuICAkdmFsdWU6ICcnO1xuXG4gIC8vIFRlc3QgdG8gc2VlIHdoaWNoIGlzIHRoZSBmZWF0dXJlIGFuZCB3aGljaCBpcyB0aGUgdmFsdWVcbiAgQGlmIChicmVha3BvaW50LXN0cmluZy12YWx1ZSgkZmlyc3QpID09IHRydWUpIHtcbiAgICAkZmVhdHVyZTogJGZpcnN0O1xuICAgICR2YWx1ZTogJHNlY29uZDtcbiAgfVxuICBAZWxzZSBpZiAoYnJlYWtwb2ludC1zdHJpbmctdmFsdWUoJHNlY29uZCkgPT0gdHJ1ZSkge1xuICAgICRmZWF0dXJlOiAkc2Vjb25kO1xuICAgICR2YWx1ZTogJGZpcnN0O1xuICB9XG4gIEBlbHNlIHtcbiAgICBAd2FybiBcIk5laXRoZXIgI3skZmlyc3R9IG5vciAjeyRzZWNvbmR9IGlzIGEgdmFsaWQgbWVkaWEgcXVlcnkgbmFtZS5cIjtcbiAgfVxuXG4gIC8vIFNldCBDb250ZXh0XG4gICRjb250ZXh0LXNldHRlcjogcHJpdmF0ZS1icmVha3BvaW50LXNldC1jb250ZXh0KCRmZWF0dXJlLCAkdmFsdWUpO1xuXG4gIEByZXR1cm4gJygjeyRmZWF0dXJlfTogI3skdmFsdWV9KSc7XG59IiwiQGZ1bmN0aW9uIGJyZWFrcG9pbnQtcGFyc2UtZG91YmxlLWRlZmF1bHQoJGZpcnN0LCAkc2Vjb25kKSB7XG4gICRmZWF0dXJlOiAnJztcbiAgJHZhbHVlOiAnJztcblxuICBAaWYgdHlwZS1vZigkZmlyc3QpID09ICdzdHJpbmcnIHtcbiAgICAkZmVhdHVyZTogJGZpcnN0O1xuICAgICR2YWx1ZTogJHNlY29uZDtcbiAgfVxuICBAZWxzZSB7XG4gICAgJGZlYXR1cmU6ICRzZWNvbmQ7XG4gICAgJHZhbHVlOiAkZmlyc3Q7XG4gIH1cblxuICAvLyBTZXQgQ29udGV4dFxuICAkY29udGV4dC1zZXR0ZXI6IHByaXZhdGUtYnJlYWtwb2ludC1zZXQtY29udGV4dCgkZmVhdHVyZSwgJHZhbHVlKTtcblxuICBAaWYgKGJyZWFrcG9pbnQtZ2V0KCd0byBlbXMnKSA9PSB0cnVlKSB7XG4gICAgJHZhbHVlOiBicmVha3BvaW50LXRvLWJhc2UtZW0oJHZhbHVlKTtcbiAgfVxuXG4gIEByZXR1cm4gJygjeyRmZWF0dXJlfTogI3skdmFsdWV9KSdcbn1cbiIsIi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gSW1wb3J0IFBpZWNlc1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5AaW1wb3J0IFwidHJpcGxlL2RlZmF1bHRcIjtcblxuQGZ1bmN0aW9uIGJyZWFrcG9pbnQtcGFyc2UtdHJpcGxlKCRmZWF0dXJlLCAkZW1wdHktbWVkaWEsICRmaXJzdCkge1xuICAkcGFyc2VkOiAnJztcbiAgJGxlYWRlcjogJyc7XG5cbiAgLy8gSWYgd2UncmUgZm9yY2luZ1xuICBAaWYgbm90ICgkZW1wdHktbWVkaWEpIG9yIG5vdCAoJGZpcnN0KSB7XG4gICAgJGxlYWRlcjogJ2FuZCAnO1xuICB9XG5cbiAgLy8gc2VwYXJhdGUgdGhlIHN0cmluZyBmZWF0dXJlcyBmcm9tIHRoZSB2YWx1ZSBudW1iZXJzXG4gICRzdHJpbmc6IG51bGw7XG4gICRudW1iZXJzOiBudWxsO1xuICBAZWFjaCAkdmFsIGluICRmZWF0dXJlIHtcbiAgICBAaWYgdHlwZS1vZigkdmFsKSA9PSBzdHJpbmcge1xuICAgICAgJHN0cmluZzogJHZhbDtcbiAgICB9XG4gICAgQGVsc2Uge1xuICAgICAgQGlmIHR5cGUtb2YoJG51bWJlcnMpID09ICdudWxsJyB7XG4gICAgICAgICRudW1iZXJzOiAkdmFsO1xuICAgICAgfVxuICAgICAgQGVsc2Uge1xuICAgICAgICAkbnVtYmVyczogYXBwZW5kKCRudW1iZXJzLCAkdmFsKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAkcGFyc2VkOiBicmVha3BvaW50LXBhcnNlLXRyaXBsZS1kZWZhdWx0KCRzdHJpbmcsIG50aCgkbnVtYmVycywgMSksIG50aCgkbnVtYmVycywgMikpO1xuXG4gIEByZXR1cm4gJGxlYWRlciArICRwYXJzZWQ7XG5cbn1cbiIsIkBmdW5jdGlvbiBicmVha3BvaW50LXBhcnNlLXRyaXBsZS1kZWZhdWx0KCRmZWF0dXJlLCAkZmlyc3QsICRzZWNvbmQpIHtcblxuICAvLyBTb3J0IGludG8gbWluIGFuZCBtYXhcbiAgJG1pbjogbWluKCRmaXJzdCwgJHNlY29uZCk7XG4gICRtYXg6IG1heCgkZmlyc3QsICRzZWNvbmQpO1xuXG4gIC8vIFNldCBDb250ZXh0XG4gICRjb250ZXh0LXNldHRlcjogcHJpdmF0ZS1icmVha3BvaW50LXNldC1jb250ZXh0KG1pbi0jeyRmZWF0dXJlfSwgJG1pbik7XG4gICRjb250ZXh0LXNldHRlcjogcHJpdmF0ZS1icmVha3BvaW50LXNldC1jb250ZXh0KG1heC0jeyRmZWF0dXJlfSwgJG1heCk7XG5cbiAgLy8gTWFrZSB0aGVtIEVNcyBpZiBuZWVkIGJlXG4gIEBpZiAoYnJlYWtwb2ludC1nZXQoJ3RvIGVtcycpID09IHRydWUpIHtcbiAgICAkbWluOiBicmVha3BvaW50LXRvLWJhc2UtZW0oJG1pbik7XG4gICAgJG1heDogYnJlYWtwb2ludC10by1iYXNlLWVtKCRtYXgpO1xuICB9XG5cbiAgQHJldHVybiAnKG1pbi0jeyRmZWF0dXJlfTogI3skbWlufSkgYW5kIChtYXgtI3skZmVhdHVyZX06ICN7JG1heH0pJztcbn1cbiIsIkBpbXBvcnQgXCJyZXNvbHV0aW9uL3Jlc29sdXRpb25cIjtcblxuQGZ1bmN0aW9uIGJyZWFrcG9pbnQtYnVpbGQtcmVzb2x1dGlvbigkcXVlcnktcHJpbnQsICRxdWVyeS1yZXNvbHV0aW9uLCAkZW1wdHktbWVkaWEsICRmaXJzdCkge1xuICAkbGVhZGVyOiAnJztcbiAgLy8gSWYgd2UncmUgZm9yY2luZ1xuICBAaWYgbm90ICgkZW1wdHktbWVkaWEpIG9yIG5vdCAoJGZpcnN0KSB7XG4gICAgJGxlYWRlcjogJ2FuZCAnO1xuICB9XG5cbiAgQGlmIGJyZWFrcG9pbnQtZ2V0KCd0cmFuc2Zvcm0gcmVzb2x1dGlvbnMnKSBhbmQgJHF1ZXJ5LXJlc29sdXRpb24ge1xuICAgICRyZXNvbHV0aW9uczogYnJlYWtwb2ludC1tYWtlLXJlc29sdXRpb25zKCRxdWVyeS1yZXNvbHV0aW9uKTtcbiAgICAkbGVuZ3RoOiBsZW5ndGgoJHJlc29sdXRpb25zKTtcbiAgICAkcXVlcnktaG9sZGVyOiAnJztcblxuICAgIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggJGxlbmd0aCB7XG4gICAgICAkcXVlcnk6ICcjeyRxdWVyeS1wcmludH0gI3skbGVhZGVyfSN7bnRoKCRyZXNvbHV0aW9ucywgJGkpfSc7XG4gICAgICBAaWYgJGkgPT0gMSB7XG4gICAgICAgICRxdWVyeS1ob2xkZXI6ICRxdWVyeTtcbiAgICAgIH1cbiAgICAgIEBlbHNlIHtcbiAgICAgICAgJHF1ZXJ5LWhvbGRlcjogJyN7JHF1ZXJ5LWhvbGRlcn0sICN7JHF1ZXJ5fSc7XG4gICAgICB9XG4gICAgfVxuXG4gICAgQHJldHVybiAkcXVlcnktaG9sZGVyO1xuICB9XG4gIEBlbHNlIHtcbiAgICAvLyBSZXR1cm4gd2l0aCBhdHRhY2hlZCByZXNvbHV0aW9uXG4gICAgQHJldHVybiAkcXVlcnktcHJpbnQ7XG4gIH1cbn1cbiIsIkBmdW5jdGlvbiBicmVha3BvaW50LW1ha2UtcmVzb2x1dGlvbnMoJHJlc29sdXRpb24pIHtcbiAgJGxlbmd0aDogbGVuZ3RoKCRyZXNvbHV0aW9uKTtcblxuICAkb3V0cHV0OiAoKTtcblxuICBAaWYgJGxlbmd0aCA9PSAyIHtcbiAgICAkZmVhdHVyZTogJyc7XG4gICAgJHZhbHVlOiAnJztcblxuICAgIC8vIEZpbmQgd2hpY2ggaXMgbnVtYmVyXG4gICAgQGlmIHR5cGUtb2YobnRoKCRyZXNvbHV0aW9uLCAxKSkgPT0gJ251bWJlcicge1xuICAgICAgJHZhbHVlOiBudGgoJHJlc29sdXRpb24sIDEpO1xuICAgIH1cbiAgICBAZWxzZSB7XG4gICAgICAkdmFsdWU6IG50aCgkcmVzb2x1dGlvbiwgMik7XG4gICAgfVxuXG4gICAgLy8gRGV0ZXJtaW5lIG1pbi9tYXgvc3RhbmRhcmRcbiAgICBAaWYgaW5kZXgoJHJlc29sdXRpb24sICdtaW4tcmVzb2x1dGlvbicpIHtcbiAgICAgICRmZWF0dXJlOiAnbWluLSc7XG4gICAgfVxuICAgIEBlbHNlIGlmIGluZGV4KCRyZXNvbHV0aW9uLCAnbWF4LXJlc29sdXRpb24nKSB7XG4gICAgICAkZmVhdHVyZTogJ21heC0nO1xuICAgIH1cblxuICAgICRzdGFuZGFyZDogJygjeyRmZWF0dXJlfXJlc29sdXRpb246ICN7JHZhbHVlfSknO1xuXG4gICAgLy8gSWYgd2UncmUgbm90IGRlYWxpbmcgd2l0aCBkcHB4LFxuICAgIEBpZiB1bml0KCR2YWx1ZSkgIT0gJ2RwcHgnIHtcbiAgICAgICRiYXNlOiA5NmRwaTtcbiAgICAgIEBpZiB1bml0KCR2YWx1ZSkgPT0gJ2RwY20nIHtcbiAgICAgICAgJGJhc2U6IDI0My44NGRwY207XG4gICAgICB9XG4gICAgICAvLyBXcml0ZSBvdXQgZmVhdHVyZSB0ZXN0c1xuICAgICAgJHdlYmtpdDogJyc7XG4gICAgICAkbW96OiAnJztcbiAgICAgICR3ZWJraXQ6ICcoLXdlYmtpdC0jeyRmZWF0dXJlfWRldmljZS1waXhlbC1yYXRpbzogI3skdmFsdWUgLyAkYmFzZX0pJztcbiAgICAgICRtb3o6ICcoI3skZmVhdHVyZX0tbW96LWRldmljZS1waXhlbC1yYXRpbzogI3skdmFsdWUgLyAkYmFzZX0pJztcbiAgICAgIC8vIEFwcGVuZCB0byBvdXRwdXRcbiAgICAgICRvdXRwdXQ6IGFwcGVuZCgkb3V0cHV0LCAkc3RhbmRhcmQsIHNwYWNlKTtcbiAgICAgICRvdXRwdXQ6IGFwcGVuZCgkb3V0cHV0LCAkd2Via2l0LCBzcGFjZSk7XG4gICAgICAkb3V0cHV0OiBhcHBlbmQoJG91dHB1dCwgJG1veiwgc3BhY2UpO1xuICAgIH1cbiAgICBAZWxzZSB7XG4gICAgICAkd2Via2l0OiAnJztcbiAgICAgICRtb3o6ICcnO1xuICAgICAgJHdlYmtpdDogJygtd2Via2l0LSN7JGZlYXR1cmV9ZGV2aWNlLXBpeGVsLXJhdGlvOiAjeyR2YWx1ZSAvIDFkcHB4fSknO1xuICAgICAgJG1vejogJygjeyRmZWF0dXJlfS1tb3otZGV2aWNlLXBpeGVsLXJhdGlvOiAjeyR2YWx1ZSAvIDFkcHB4fSknO1xuICAgICAgJGZhbGxiYWNrOiAnKCN7JGZlYXR1cmV9cmVzb2x1dGlvbjogI3skdmFsdWUgLyAxZHBweCAqIDk2ZHBpfSknO1xuICAgICAgLy8gQXBwZW5kIHRvIG91dHB1dFxuICAgICAgJG91dHB1dDogYXBwZW5kKCRvdXRwdXQsICRzdGFuZGFyZCwgc3BhY2UpO1xuICAgICAgJG91dHB1dDogYXBwZW5kKCRvdXRwdXQsICR3ZWJraXQsIHNwYWNlKTtcbiAgICAgICRvdXRwdXQ6IGFwcGVuZCgkb3V0cHV0LCAkbW96LCBzcGFjZSk7XG4gICAgICAkb3V0cHV0OiBhcHBlbmQoJG91dHB1dCwgJGZhbGxiYWNrLCBzcGFjZSk7XG4gICAgfVxuXG4gIH1cblxuICBAcmV0dXJuICRvdXRwdXQ7XG59XG4iLCJAZnVuY3Rpb24gYnJlYWtwb2ludC1uby1xdWVyeSgkcXVlcnkpIHtcbiAgQGlmIHR5cGUtb2YoJHF1ZXJ5KSA9PSAnbGlzdCcge1xuICAgICRrZXl3b3JkOiBudGgoJHF1ZXJ5LCAxKTtcblxuICAgIEBpZiB0eXBlLW9mKCRrZXl3b3JkKSA9PSAnc3RyaW5nJyBhbmQgKCRrZXl3b3JkID09ICduby1xdWVyeScgb3IgJGtleXdvcmQgPT0gJ25vIHF1ZXJ5JyBvciAka2V5d29yZCA9PSAnZmFsbGJhY2snKSB7XG4gICAgICBAcmV0dXJuIG50aCgkcXVlcnksIDIpO1xuICAgIH1cbiAgICBAZWxzZSB7XG4gICAgICBAcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuICBAZWxzZSB7XG4gICAgQHJldHVybiBmYWxzZTtcbiAgfVxufVxuIiwiLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBEZWZhdWx0IHRoZSBCcmVha3BvaW50cyB2YXJpYWJsZVxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4kYnJlYWtwb2ludHM6ICgpICFkZWZhdWx0O1xuJEJSRUFLUE9JTlRTOiAoKSAhZGVmYXVsdDtcblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBSZXNwb25kLXRvIEFQSSBNaXhpblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5AbWl4aW4gcmVzcG9uZC10bygkY29udGV4dCwgJG5vLXF1ZXJ5OiBmYWxzZSkge1xuICBAaWYgbGVuZ3RoKCRicmVha3BvaW50cykgPiAwIGFuZCBsZW5ndGgoJEJSRUFLUE9JTlRTKSA9PSAwIHtcbiAgICBAd2FybiBcIkluIG9yZGVyIHRvIGF2b2lkIHZhcmlhYmxlIG5hbWVzcGFjZSBjb2xsaXNpb25zLCB3ZSBoYXZlIHVwZGF0ZWQgdGhlIHdheSB0byBhZGQgYnJlYWtwb2ludHMgZm9yIHJlc3BvbmQtdG8uIFBsZWFzZSBjaGFuZ2UgYWxsIGluc3RhbmNlcyBvZiBgJGJyZWFrcG9pbnRzOiBhZGQtYnJlYWtwb2ludCgpYCB0byBgQGluY2x1ZGUgYWRkLWJyZWFrcG9pbnQoKWAuIFRoZSBgYWRkLWJyZWFrcG9pbnQoKWAgZnVuY3Rpb24gd2lsbCBiZSBkZXByZWNhdGVkIGluIGEgZnV0dXJlIHJlbGVhc2UuXCI7XG4gICAgJEJSRUFLUE9JTlRTOiAkYnJlYWtwb2ludHMgIWdsb2JhbDtcbiAgICAkYnJlYWtwb2ludHM6ICgpICFnbG9iYWw7XG4gIH1cblxuICBAaWYgdHlwZS1vZigkQlJFQUtQT0lOVFMpICE9ICdtYXAnIHtcbiAgICAvLyBKdXN0IGluIGNhc2Ugc29tZW9uZSB3cml0ZXMgZ2liYmVyaXNoIHRvIHRoZSAkYnJlYWtwb2ludHMgdmFyaWFibGUuXG4gICAgQHdhcm4gXCJZb3VyIGJyZWFrcG9pbnRzIGFyZW4ndCBhIG1hcCEgYHJlc3BvbmQtdG9gIGV4cGVjdHMgYSBtYXAuIFBsZWFzZSBjaGVjayB0aGUgdmFsdWUgb2YgJEJSRUFLUE9JTlRTIHZhcmlhYmxlLlwiO1xuICAgIEBjb250ZW50O1xuICB9XG4gIEBlbHNlIGlmIG1hcC1oYXMta2V5KCRCUkVBS1BPSU5UUywgJGNvbnRleHQpIHtcbiAgICBAaW5jbHVkZSBicmVha3BvaW50KG1hcC1nZXQoJEJSRUFLUE9JTlRTLCAkY29udGV4dCksICRuby1xdWVyeSkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG4gIEBlbHNlIGlmIG5vdCBtYXAtaGFzLWtleSgkQlJFQUtQT0lOVFMsICRjb250ZXh0KSB7XG4gICAgQHdhcm4gXCJgI3skY29udGV4dH1gIGlzbid0IGEgZGVmaW5lZCBicmVha3BvaW50ISBQbGVhc2UgYWRkIGl0IHVzaW5nIGAkYnJlYWtwb2ludHM6IGFkZC1icmVha3BvaW50KGAjeyRjb250ZXh0fWAsICR2YWx1ZSk7YFwiO1xuICAgIEBjb250ZW50O1xuICB9XG4gIEBlbHNlIHtcbiAgICBAd2FybiBcIllvdSBoYXZlbid0IGNyZWF0ZWQgYW55IGJyZWFrcG9pbnRzIHlldCEgTWFrZSBzb21lIGFscmVhZHkhIGBAaW5jbHVkZSBhZGQtYnJlYWtwb2ludCgkbmFtZSwgJGJrcHQpYFwiO1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gQWRkIEJyZWFrcG9pbnQgdG8gQnJlYWtwb2ludHNcbi8vIFRPRE86IFJlbW92ZSBmdW5jdGlvbiBpbiBuZXh0IHJlbGVhc2Vcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuQGZ1bmN0aW9uIGFkZC1icmVha3BvaW50KCRuYW1lLCAkYmtwdCwgJG92ZXJ3cml0ZTogZmFsc2UpIHtcbiAgJG91dHB1dDogKCRuYW1lOiAkYmtwdCk7XG5cbiAgQGlmIGxlbmd0aCgkYnJlYWtwb2ludHMpID09IDAge1xuICAgIEByZXR1cm4gJG91dHB1dDtcbiAgfVxuICBAZWxzZSB7XG4gICAgQGlmIG1hcC1oYXMta2V5KCRicmVha3BvaW50cywgJG5hbWUpIGFuZCAkb3ZlcndyaXRlICE9IHRydWUge1xuICAgICAgQHdhcm4gXCJZb3UgYWxyZWFkeSBoYXZlIGEgYnJlYWtwb2ludCBuYW1lZCBgI3skbmFtZX1gLCBwbGVhc2UgY2hvb3NlIGFub3RoZXIgYnJlYWtwb2ludCBuYW1lLCBvciBwYXNzIGluIGAkb3ZlcndyaXRlOiB0cnVlYCB0byBvdmVyd3JpdGUgdGhlIHByZXZpb3VzIGJyZWFrcG9pbnQuXCI7XG4gICAgICBAcmV0dXJuICRicmVha3BvaW50cztcbiAgICB9XG4gICAgQGVsc2UgaWYgbm90IG1hcC1oYXMta2V5KCRicmVha3BvaW50cywgJG5hbWUpIG9yICRvdmVyd3JpdGUgPT0gdHJ1ZSB7XG4gICAgICBAcmV0dXJuIG1hcC1tZXJnZSgkYnJlYWtwb2ludHMsICRvdXRwdXQpO1xuICAgIH1cbiAgfVxufVxuXG5AbWl4aW4gYWRkLWJyZWFrcG9pbnQoJG5hbWUsICRia3B0LCAkb3ZlcndyaXRlOiBmYWxzZSkge1xuICAkb3V0cHV0OiAoJG5hbWU6ICRia3B0KTtcblxuICBAaWYgbGVuZ3RoKCRCUkVBS1BPSU5UUykgPT0gMCB7XG4gICAgJEJSRUFLUE9JTlRTOiAkb3V0cHV0ICFnbG9iYWw7XG4gIH1cbiAgQGVsc2Uge1xuICAgIEBpZiBtYXAtaGFzLWtleSgkQlJFQUtQT0lOVFMsICRuYW1lKSBhbmQgJG92ZXJ3cml0ZSAhPSB0cnVlIHtcbiAgICAgIEB3YXJuIFwiWW91IGFscmVhZHkgaGF2ZSBhIGJyZWFrcG9pbnQgbmFtZWQgYCN7JG5hbWV9YCwgcGxlYXNlIGNob29zZSBhbm90aGVyIGJyZWFrcG9pbnQgbmFtZSwgb3IgcGFzcyBpbiBgJG92ZXJ3cml0ZTogdHJ1ZWAgdG8gb3ZlcndyaXRlIHRoZSBwcmV2aW91cyBicmVha3BvaW50LlwiO1xuICAgICAgJEJSRUFLUE9JTlRTOiAkQlJFQUtQT0lOVFMgIWdsb2JhbDtcbiAgICB9XG4gICAgQGVsc2UgaWYgbm90IG1hcC1oYXMta2V5KCRCUkVBS1BPSU5UUywgJG5hbWUpIG9yICRvdmVyd3JpdGUgPT0gdHJ1ZSB7XG4gICAgICAkQlJFQUtQT0lOVFM6IG1hcC1tZXJnZSgkQlJFQUtQT0lOVFMsICRvdXRwdXQpICFnbG9iYWw7XG4gICAgfVxuICB9XG59XG5cbkBmdW5jdGlvbiBnZXQtYnJlYWtwb2ludCgkbmFtZTogZmFsc2UpIHtcbiAgQGlmICRuYW1lID09IGZhbHNlIHtcbiAgICBAcmV0dXJuICRCUkVBS1BPSU5UUztcbiAgfVxuICBAZWxzZSB7XG4gICAgQHJldHVybiBtYXAtZ2V0KCRCUkVBS1BPSU5UUywgJG5hbWUpO1xuICB9XG59XG4iLCJAbWl4aW4gbGVnYWN5LXNldHRpbmdzLXdhcm5pbmcge1xuICAkbGVnYWN5VmFyczogKFxuICAgICdkZWZhdWx0LW1lZGlhJzogJ2RlZmF1bHQgbWVkaWEnLFxuICAgICdkZWZhdWx0LWZlYXR1cmUnOiAnZGVmYXVsdCBmZWF0dXJlJyxcbiAgICAnZm9yY2UtbWVkaWEtYWxsJzogJ2ZvcmNlIGFsbCBtZWRpYSB0eXBlJyxcbiAgICAndG8tZW1zJzogJ3RvIGVtcycsXG4gICAgJ3Jlc29sdXRpb25zJzogJ3RyYW5zZm9ybSByZXNvbHV0aW9ucycsXG4gICAgJ25vLXF1ZXJpZXMnOiAnbm8gcXVlcmllcycsXG4gICAgJ25vLXF1ZXJ5LWZhbGxiYWNrcyc6ICdubyBxdWVyeSBmYWxsYmFja3MnLFxuICAgICdiYXNlLWZvbnQtc2l6ZSc6ICdiYXNlIGZvbnQgc2l6ZScsXG4gICAgJ2xlZ2FjeS1zeW50YXgnOiAnbGVnYWN5IHN5bnRheCdcbiAgKTtcblxuICBAZWFjaCAkbGVnYWN5LCAkbmV3IGluICRsZWdhY3lWYXJzIHtcbiAgICBAaWYgZ2xvYmFsLXZhcmlhYmxlLWV4aXN0cygnYnJlYWtwb2ludC0nICsgJGxlZ2FjeSkge1xuICAgICAgQHdhcm4gXCJJbiBvcmRlciB0byBhdm9pZCB2YXJpYWJsZSBuYW1zcGFjZSBjb2xsaXNpb25zLCB3ZSBoYXZlIHVwZGF0ZWQgdGhlIHdheSB0byBjaGFuZ2Ugc2V0dGluZ3MgZm9yIEJyZWFrcG9pbnQuIFBsZWFzZSBjaGFuZ2UgYWxsIGluc3RhbmNlcyBvZiBgJGJyZWFrcG9pbnQtI3skbGVnYWN5fToge3tzZXR0aW5nfX1gIHRvIGBAaW5jbHVkZSBicmVha3BvaW50LXNldCgnI3skbmV3fScsIHt7c2V0dGluZ319KWAuIFZhcmlhYmxlIHNldHRpbmdzLCBhcyB3ZWxsIGFzIHRoaXMgd2FybmluZyB3aWxsIGJlIGRlcHJlY2F0ZWQgaW4gYSBmdXR1cmUgcmVsZWFzZS5cIlxuICAgIH1cbiAgfTtcblxuICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgLy8gSGFuZCBjb3JyZWN0IGVhY2ggc2V0dGluZ1xuICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgQGlmIGdsb2JhbC12YXJpYWJsZS1leGlzdHMoJ2JyZWFrcG9pbnQtZGVmYXVsdC1tZWRpYScpIGFuZCAkYnJlYWtwb2ludC1kZWZhdWx0LW1lZGlhICE9IGJyZWFrcG9pbnQtZ2V0KCdkZWZhdWx0IG1lZGlhJykge1xuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQtc2V0KCdkZWZhdWx0IG1lZGlhJywgJGJyZWFrcG9pbnQtZGVmYXVsdC1tZWRpYSk7XG4gIH1cbiAgQGlmIGdsb2JhbC12YXJpYWJsZS1leGlzdHMoJ2JyZWFrcG9pbnQtZGVmYXVsdC1mZWF0dXJlJykgYW5kICRicmVha3BvaW50LWRlZmF1bHQtZmVhdHVyZSAhPSBicmVha3BvaW50LWdldCgnZGVmYXVsdCBmZWF0dXJlJykge1xuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQtc2V0KCdkZWZhdWx0IGZlYXR1cmUnLCAkYnJlYWtwb2ludC1kZWZhdWx0LWZlYXR1cmUpO1xuICB9XG4gIEBpZiBnbG9iYWwtdmFyaWFibGUtZXhpc3RzKCdicmVha3BvaW50LWZvcmNlLW1lZGlhLWFsbCcpIGFuZCAkYnJlYWtwb2ludC1mb3JjZS1tZWRpYS1hbGwgIT0gYnJlYWtwb2ludC1nZXQoJ2ZvcmNlIGFsbCBtZWRpYSB0eXBlJykge1xuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQtc2V0KCdmb3JjZSBhbGwgbWVkaWEgdHlwZScsICRicmVha3BvaW50LWZvcmNlLW1lZGlhLWFsbCk7XG4gIH1cbiAgQGlmIGdsb2JhbC12YXJpYWJsZS1leGlzdHMoJ2JyZWFrcG9pbnQtdG8tZW1zJykgYW5kICRicmVha3BvaW50LXRvLWVtcyAhPSBicmVha3BvaW50LWdldCgndG8gZW1zJykge1xuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQtc2V0KCd0byBlbXMnLCAkYnJlYWtwb2ludC10by1lbXMpO1xuICB9XG4gIEBpZiBnbG9iYWwtdmFyaWFibGUtZXhpc3RzKCdicmVha3BvaW50LXJlc29sdXRpb25zJykgYW5kICRicmVha3BvaW50LXJlc29sdXRpb25zICE9IGJyZWFrcG9pbnQtZ2V0KCd0cmFuc2Zvcm0gcmVzb2x1dGlvbnMnKSB7XG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludC1zZXQoJ3RyYW5zZm9ybSByZXNvbHV0aW9ucycsICRicmVha3BvaW50LXJlc29sdXRpb25zKTtcbiAgfVxuICBAaWYgZ2xvYmFsLXZhcmlhYmxlLWV4aXN0cygnYnJlYWtwb2ludC1uby1xdWVyaWVzJykgYW5kICRicmVha3BvaW50LW5vLXF1ZXJpZXMgIT0gYnJlYWtwb2ludC1nZXQoJ25vIHF1ZXJpZXMnKSB7XG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludC1zZXQoJ25vIHF1ZXJpZXMnLCAkYnJlYWtwb2ludC1uby1xdWVyaWVzKTtcbiAgfVxuICBAaWYgZ2xvYmFsLXZhcmlhYmxlLWV4aXN0cygnYnJlYWtwb2ludC1uby1xdWVyeS1mYWxsYmFja3MnKSBhbmQgJGJyZWFrcG9pbnQtbm8tcXVlcnktZmFsbGJhY2tzICE9IGJyZWFrcG9pbnQtZ2V0KCdubyBxdWVyeSBmYWxsYmFja3MnKSB7XG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludC1zZXQoJ25vIHF1ZXJ5IGZhbGxiYWNrcycsICRicmVha3BvaW50LW5vLXF1ZXJ5LWZhbGxiYWNrcyk7XG4gIH1cbiAgQGlmIGdsb2JhbC12YXJpYWJsZS1leGlzdHMoJ2JyZWFrcG9pbnQtYmFzZS1mb250LXNpemUnKSBhbmQgJGJyZWFrcG9pbnQtYmFzZS1mb250LXNpemUgIT0gYnJlYWtwb2ludC1nZXQoJ2Jhc2UgZm9udCBzaXplJykge1xuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQtc2V0KCdiYXNlIGZvbnQgc2l6ZScsICRicmVha3BvaW50LWJhc2UtZm9udC1zaXplKTtcbiAgfVxuICBAaWYgZ2xvYmFsLXZhcmlhYmxlLWV4aXN0cygnYnJlYWtwb2ludC1sZWdhY3ktc3ludGF4JykgYW5kICRicmVha3BvaW50LWxlZ2FjeS1zeW50YXggIT0gYnJlYWtwb2ludC1nZXQoJ2xlZ2FjeSBzeW50YXgnKSB7XG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludC1zZXQoJ2xlZ2FjeSBzeW50YXgnLCAkYnJlYWtwb2ludC1sZWdhY3ktc3ludGF4KTtcbiAgfVxufSIsIkBpbXBvcnQgJ2Z1bmN0aW9ucyc7XG5AaW1wb3J0ICd6LWluZGV4JztcbkBpbXBvcnQgJ21lZGlhLXF1ZXJpZXMnO1xuQGltcG9ydCAndmFyaWFibGVzJztcbkBpbXBvcnQgJ3VuaWJvYXJkJztcbkBpbXBvcnQgJ21peGlucyc7XG5AaW1wb3J0ICdleHRlbmRzJztcbkBpbXBvcnQgJ2ZsZXgnO1xuQGltcG9ydCAnYm94JztcbkBpbXBvcnQgJ2ZsdWlkLXNpemUnO1xuIiwiLy8vIFotaW5kZXhlcyBtYXAsIGdhdGhlcmluZyBhbGwgWiBsYXllcnMgb2YgdGhlIGFwcGxpY2F0aW9uXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy8gQHR5cGUgTWFwXG4vLy8gQHByb3Age1N0cmluZ30ga2V5IC0gTGF5ZXLigJlzIG5hbWVcbi8vLyBAcHJvcCB7TnVtYmVyfSB2YWx1ZSAtIFogdmFsdWUgbWFwcGVkIHRvIHRoZSBrZXlcbiR6LWluZGV4ZXM6IChcbiAgJ2NnX19wcm9tb3Rpb24nOiAyMDUsXG4gICdjZ19fcGllY2UuZHJhZ2dpbmcnOiAyMDQsXG4gICdjZ19fYm9hcmQub3ZlcmxheSc6IDEwMCxcbiAgJ2NnX19waWVjZS5hbmltJzogMyxcbiAgJ2NnX19zdmcuY2ctc2hhcGVzJzogMixcbiAgJ2NnX19zdmcuY2ctY3VzdG9tLXN2Z3MnOiA0LFxuICAnY2dfX3BpZWNlJzogMixcbiAgJ2NnX19waWVjZS5mYWRpbmcnOiAxLFxuICAncG93ZXJ0aXAnOiAxMjAsXG4gICdjb21wbGV0ZSc6IDExMixcbiAgJ2lucXVpcnknOiAxMTEsXG4gICd6ZW4tdG9nZ2xlJzogMTEwLFxuICAnbW9kYWwnOiAxMTAsXG4gICdtc2VsZWN0JzogMTEwLFxuICAndG9wbmF2JzogMTEwLFxuICAnZnVsbHNjcmVlbi1tYXNrJzogMTA5LFxuICAnZHJvcGRvd24nOiAxMDgsXG4gICdjb250ZXh0LW1lbnUnOiAxMDcsXG4gICdzaXRlLWhlYWRlcic6IDEwNixcbiAgJ3JlY29ubmVjdGluZyc6IDEwNSxcbiAgJ3RvdXItcmVtaW5kZXInOiAxMDQsXG4gICdtei1tZW51JzogNCxcbiAgJ2Fib3ZlLWxpbmstb3ZlcmxheSc6IDMsXG4gICdmcmllbmQtYm94JzogMixcbiAgJ2xpbmstb3ZlcmxheSc6IDIsXG4gICdnYW1lLWJvb2ttYXJrJzogMixcbiAgJ3N1Ym5hdi1zaWRlJzogMixcbiAgJ2RlZmF1bHQnOiAwLFxuKTtcblxuLy8vIEdldCBhIHotaW5kZXggdmFsdWUgZnJvbSBhIGxheWVyIG5hbWVcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkbGF5ZXIgLSBMYXllcuKAmXMgbmFtZVxuLy8vIEByZXR1cm4ge051bWJlcn1cbi8vLyBAcmVxdWlyZSAkei1pbmRleGVzXG5AZnVuY3Rpb24geigkbGF5ZXIpIHtcbiAgQHJldHVybiBtYXAtZ2V0KCR6LWluZGV4ZXMsICRsYXllcik7XG59XG4iLCIvKiBXaWR0aHMgKi9cblxuJG1xLXh4LXNtYWxsOiBtaW4td2lkdGggNTAwcHg7XG4kbXEteC1zbWFsbDogbWluLXdpZHRoIDY1MHB4O1xuJG1xLXNtYWxsOiBtaW4td2lkdGggODAwcHg7XG4kbXEtbWVkaXVtOiBtaW4td2lkdGggOTgwcHg7XG4kbXEtbGFyZ2U6IG1pbi13aWR0aCAxMTIwcHg7XG4kbXEteC1sYXJnZTogbWluLXdpZHRoIDEyNjBweDtcblxuJG1xLW5vdC14eC1zbWFsbDogbWF4LXdpZHRoIDQ5OXB4O1xuJG1xLW5vdC14LXNtYWxsOiBtYXgtd2lkdGggNjQ5cHg7XG4kbXEtbm90LXNtYWxsOiBtYXgtd2lkdGggNzk5cHg7XG4kbXEtbm90LW1lZGl1bTogbWF4LXdpZHRoIDk3OXB4O1xuJG1xLW5vdC1sYXJnZTogbWF4LXdpZHRoIDExMTlweDtcbiRtcS1ub3QteC1sYXJnZTogbWF4LXdpZHRoIDEyNTlweDtcblxuLyogSGVpZ2h0cyAqL1xuXG4kbXEteC1zaG9ydDogbWluLWhlaWdodCA0MDBweDtcbiRtcS1zaG9ydDogbWluLWhlaWdodCA1MDBweDtcbiRtcS10YWxsOiBtaW4taGVpZ2h0IDYwMHB4O1xuJG1xLXgtdGFsbDogbWluLWhlaWdodCA3MDBweDtcblxuJG1xLW5vdC14LXNob3J0OiBtYXgtaGVpZ2h0IDM5OXB4O1xuXG4vKiBPcmllbnRhdGlvbnMgKi9cblxuJG1xLXBvcnRyYWl0OiBvcmllbnRhdGlvbiBwb3J0cmFpdDtcbiRtcS1sYW5kc2NhcGU6IG9yaWVudGF0aW9uIGxhbmRzY2FwZTtcblxuLyogQ2FwYWJpbGl0aWVzICovXG5cbiRtcS1ob3Zlci15ZXM6ICdob3ZlcjogaG92ZXInO1xuJG1xLWhvdmVyLW5vOiBob3ZlciBub25lO1xuXG4vKiBBbGlhc2VzICovXG5cbiRtcS1tYWluLW1hcmdpbjogJG1xLXNtYWxsO1xuXG4kbXEtdG9wbmF2LXZpc2libGU6ICRtcS1tZWRpdW07XG4kbXEtdG9wbmF2LWhpZGRlbjogJG1xLW5vdC1tZWRpdW07XG5cbiRtcS1zaXRlLWhlYWRlci10YWxsOiAkbXEtdGFsbDtcblxuJG1xLXN1Ym5hdi10b3A6ICRtcS1ub3Qtc21hbGw7XG4kbXEtc3VibmF2LXNpZGU6ICRtcS1zbWFsbDtcblxuJG1xLXpvb20tZW5hYmxlZDogJG1xLXNtYWxsICRtcS1zaG9ydDtcbiIsIiRkZWJ1ZzogZmFsc2U7XG5cbiRmb250LXBhdGg6ICcuLi9mb250JztcbiRpbWctcGF0aDogJy4uL2ltYWdlcyc7XG5cbiR2aWV3cG9ydC1taW4td2lkdGg6IDMyMHB4O1xuXG4kYmxvY2stZ2FwOiAydm1pbjtcbiRibG9jay1nYXAtaGFsZjogMXZtaW47XG5cbiRibG9jay1nYXAtaDogMnZoO1xuJGJsb2NrLWdhcC13OiAydnc7XG4kYmxvY2stZ2FwLXctaGFsZjogMXZ3O1xuXG4kYm94LXJhZGl1cy1zaXplOiAzcHg7XG5cbiRzaXRlLWhlYWRlci10YWxsLWhlaWdodDogNjBweDtcbiRzaXRlLWhlYWRlci1zaG9ydC1oZWlnaHQ6IDQwcHg7XG5cbiR0cmFuc2l0aW9uLWR1cmF0aW9uOiAxNTBtcztcblxuJG1haW4tbWF4LXdpZHRoOiAxMzAwcHggIWRlZmF1bHQ7XG5cbiRtYWluLW1hcmdpbjogdmFyKC0tbWFpbi1tYXJnaW4pO1xuJHNpdGUtaGVhZGVyLWhlaWdodDogdmFyKC0tc2l0ZS1oZWFkZXItaGVpZ2h0KTtcblxuJHNpdGUtaGVhZGVyLW1hcmdpbjogdmFyKC0tc2l0ZS1oZWFkZXItbWFyZ2luKTtcblxuJHNpdGUtaGVhZGVyLW91dGVyLWhlaWdodDogY2FsYygjeyRzaXRlLWhlYWRlci1oZWlnaHR9ICsgI3skc2l0ZS1oZWFkZXItbWFyZ2lufSk7XG4iLCIvKiBVbmlib2FyZDoga2VlcCB0aGUgc2FtZSBwYWdlIGxheW91dCBhY3Jvc3MgcGFnZXMgKi9cblxuJG1xLWJvYXJkLXJlc2l6YWJsZTogJG1xLXNtYWxsO1xuJG1xLWNvbDEtdW5pYm9hcmQ6ICRtcS1ub3Qtc21hbGwgJG1xLXBvcnRyYWl0O1xuJG1xLWNvbDItdW5pYm9hcmQ6ICRtcS1zbWFsbCwgJG1xLWxhbmRzY2FwZTtcbiRtcS1jb2wzLXVuaWJvYXJkOiAkbXEteC1sYXJnZTtcblxuLyogd2hlbiB0aGUgd2lkdGggaXMgYXBwcm9wcmlhdGUgZm9yIGNvbDEsIGJ1dCBsYW5kc2NhcGUgcHJldmVudHMgaXQgKi9cbiRtcS1jb2wyLXVuaWJvYXJkLXNxdWVlemU6ICRtcS1ub3Qtc21hbGwgJG1xLWxhbmRzY2FwZTtcblxuJGNvbDMtdW5pYm9hcmQtc2lkZTogbWlubWF4KDIzMHB4LCAyMHZ3KTtcbiRjb2wzLXVuaWJvYXJkLXRhYmxlOiBtaW5tYXgoMjQwcHgsIDQwMHB4KTtcbiRjb2wzLXVuaWJvYXJkLWNvbnRyb2xzOiAzcmVtO1xuXG4kY29sMy11bmlib2FyZC1taW4td2lkdGg6IGNhbGMoNzB2bWluICogdmFyKC0tYm9hcmQtc2NhbGUpKTtcbiRjb2wzLXVuaWJvYXJkLW1heC13aWR0aDogY2FsYygxMDB2aCAqIHZhcigtLWJvYXJkLXNjYWxlKSAtICN7JHNpdGUtaGVhZGVyLW91dGVyLWhlaWdodH0gLSAjeyRjb2wzLXVuaWJvYXJkLWNvbnRyb2xzfSk7XG4kY29sMy11bmlib2FyZC13aWR0aDogbWlubWF4KCRjb2wzLXVuaWJvYXJkLW1pbi13aWR0aCwgJGNvbDMtdW5pYm9hcmQtbWF4LXdpZHRoKTtcblxuJGNvbDMtdW5pYm9hcmQtZGVmYXVsdC1zY2FsZTogMC45O1xuXG4vLyB6b29tOiA4NSVcbiRjb2wzLXVuaWJvYXJkLWRlZmF1bHQtbWluLXdpZHRoOiA1MDBweDtcbiRjb2wzLXVuaWJvYXJkLWRlZmF1bHQtbWF4LXdpZHRoOiBjYWxjKFxuICAxMDB2aCAqICN7JGNvbDMtdW5pYm9hcmQtZGVmYXVsdC1zY2FsZX0gLSAjeyRzaXRlLWhlYWRlci1vdXRlci1oZWlnaHR9IC0gI3skY29sMy11bmlib2FyZC1jb250cm9sc31cbik7XG4kY29sMy11bmlib2FyZC1kZWZhdWx0LXdpZHRoOiBtaW5tYXgoI3skY29sMy11bmlib2FyZC1kZWZhdWx0LW1pbi13aWR0aH0sICN7JGNvbDMtdW5pYm9hcmQtZGVmYXVsdC1tYXgtd2lkdGh9KTtcblxuJGNvbDItdW5pYm9hcmQtdGFibGU6ICRjb2wzLXVuaWJvYXJkLXRhYmxlO1xuJGNvbDItdW5pYm9hcmQtY29udHJvbHM6ICRjb2wzLXVuaWJvYXJkLWNvbnRyb2xzO1xuJGNvbDItdW5pYm9hcmQtd2lkdGg6ICRjb2wzLXVuaWJvYXJkLXdpZHRoO1xuJGNvbDItdW5pYm9hcmQtZGVmYXVsdC13aWR0aDogJGNvbDMtdW5pYm9hcmQtZGVmYXVsdC13aWR0aDtcblxuJGNvbDItdW5pYm9hcmQtc3F1ZWV6ZS10YWJsZTogbWlubWF4KDIwMHB4LCAyNDBweCk7XG4kY29sMi11bmlib2FyZC1zcXVlZXplLXdpZHRoOiBtaW5tYXgoY2FsYyg1NXZtaW4pLCBjYWxjKDEwMHZoIC0gI3skc2l0ZS1oZWFkZXItb3V0ZXItaGVpZ2h0fSAtICN7JGJsb2NrLWdhcH0pKTtcblxuJGNvbDEtdW5pYm9hcmQtY29udHJvbHM6ICRjb2wyLXVuaWJvYXJkLWNvbnRyb2xzO1xuIiwiQG1peGluIGJveC1yYWRpdXMge1xuICBib3JkZXItcmFkaXVzOiAkYm94LXJhZGl1cy1zaXplO1xufVxuXG5AbWl4aW4gYm94LXNoYWRvdyB7XG4gIGJveC1zaGFkb3c6ICRib3gtc2hhZG93O1xufVxuXG5AbWl4aW4gYm94LW5lYXQge1xuICBAaW5jbHVkZSBib3gtcmFkaXVzO1xuICBAaW5jbHVkZSBib3gtc2hhZG93O1xufVxuXG5AbWl4aW4gZGVidWctem9vbS1pbnB1dCB7XG4gICN6b29tLWlucHV0IHtcbiAgICBkaXNwbGF5OiBub25lO1xuXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkbXEtem9vbS1lbmFibGVkKSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgIGJvdHRvbTogM3B4O1xuICAgICAgcmlnaHQ6IDNweDtcbiAgICAgIHdpZHRoOiAxMHZ3O1xuICAgIH1cbiAgfVxufVxuXG5AbWl4aW4gdHJhbnNpdGlvbigkcHJvcDogYWxsLCAkZHVyOiAkdHJhbnNpdGlvbi1kdXJhdGlvbikge1xuICB0cmFuc2l0aW9uOiAkcHJvcCAkZHVyO1xufVxuXG5AbWl4aW4gaG92ZXJmbG93IHtcbiAgb3ZlcmZsb3cteTogYXV0bztcblxuICBAbWVkaWEgKGhvdmVyOiBob3Zlcikge1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgIG92ZXJmbG93LXk6IGF1dG87XG4gICAgfVxuICB9XG59XG5cbkBtaXhpbiBoaWRlIHtcbiAgZGlzcGxheTogbm9uZTtcblxuICAuYmxpbmQtbW9kZSAmIHtcbiAgICBkaXNwbGF5OiBpbmhlcml0O1xuICB9XG59XG5cbkBtaXhpbiBlbGxpcHNpcyB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xufVxuXG5AbWl4aW4gY3Jvc3N0YWJsZS1sYXJnZSB7XG4gIC5jcm9zc3RhYmxlX191c2VycyB7XG4gICAgZmxleDogNyAxIGF1dG87XG4gIH1cbn1cblxuQG1peGluIGNyb3NzdGFibGUtc21hbGwge1xuICAuY3Jvc3N0YWJsZV9fdXNlcnMge1xuICAgIGZsZXg6IDEgMSBhdXRvO1xuICB9XG59XG5cbi8qIGF0bSBvbmx5IGNocm9tZSBzdXBwb3J0cyBtaW4tY29udGVudCwgbWF4LWNvbnRlbnQgKi9cbkBtaXhpbiBwcm9wZXItZ3JpZCB7XG4gIEBzdXBwb3J0cyAoaGVpZ2h0OiBtYXgtY29udGVudCkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbkBtaXhpbiBib2R5LWZpeGVkLXNjcm9sbCB7XG4gIGJvZHkge1xuICAgIC8qIHByZXZlbnRzIHNjcm9sbCBiYXIgZmxpY2tlciB3aGVuIGRyYWdnaW5nIGEgcGllY2Ugb3V0ICovXG4gICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICB9XG59XG4iLCIlYmFzZS1mb250LWZhbGxiYWNrIHtcbiAgZm9udC1mYW1pbHk6ICdOb3RvIFNhbnMnLCBTYW5zLVNlcmlmO1xufVxuXG4lYmFzZS1mb250IHtcbiAgZm9udC1mYW1pbHk6ICdOb3RvIFNhbnMnLCBTYW5zLVNlcmlmO1xufVxuXG4lcm9ib3RvIHtcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBTYW5zLVNlcmlmO1xufVxuXG4lcm9ib3RvLWZhdCB7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgU2Fucy1TZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cblxuJWNoZXNzLWZvbnQge1xuICBmb250LWZhbWlseTogJ05vdG8gQ2hlc3MnLCAnTm90byBTYW5zJztcbn1cblxuJXNhbiB7XG4gIEBleHRlbmQgJWNoZXNzLWZvbnQ7XG5cbiAgLnBpZWNlLWxldHRlciAmIHtcbiAgICBAZXh0ZW5kICViYXNlLWZvbnQ7XG4gIH1cblxuICBkcmF3IHtcbiAgICBAZXh0ZW5kICVyb2JvdG87XG4gICAgbWFyZ2luLWxlZnQ6IDFjaDtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICB9XG59XG5cbi8qIHRleHQgcHJpbnRlZCBkaXJlY3RseSBvbiB0aGUgcGFnZSBiYWNrZ3JvdW5kIGRlc2VydmVzIHNwZWNpYWwgdHJlYXRtZW50ICh0cmFuc3AgdGhlbWUpICovXG4lcGFnZS1mb250IHtcbiAgY29sb3I6ICRjLWZvbnQtcGFnZTtcbn1cblxuJXBhZ2UtdGV4dCB7XG4gIEBleHRlbmQgJXBhZ2UtZm9udCwgJXBhZ2UtdGV4dC1zaGFkb3cgIW9wdGlvbmFsO1xufVxuXG4lcGFnZS1saW5rIHtcbiAgQGV4dGVuZCAlcGFnZS1saW5rLWZvbnQgIW9wdGlvbmFsO1xuXG4gIEBleHRlbmQgJXBhZ2UtdGV4dC1zaGFkb3cgIW9wdGlvbmFsO1xufVxuXG4lbWV0YWwge1xuICBAaW5jbHVkZSBtZXRhbDtcbn1cblxuJW1ldGFsLWhvdmVyIHtcbiAgQGluY2x1ZGUgbWV0YWwtaG92ZXI7XG59XG5cbiVwYWdlLW1ldGFsIHtcbiAgQGluY2x1ZGUgcGFnZS1tZXRhbDtcbn1cblxuJXBhZ2UtbWV0YWwtaG92ZXIge1xuICBAaW5jbHVkZSBwYWdlLW1ldGFsO1xufVxuXG4lbWV0YWwtYmcge1xuICBAaW5jbHVkZSBtZXRhbC1iZztcbn1cblxuJWFjdGl2ZS1pbnNldC1zaGFkb3cge1xuICBib3gtc2hhZG93OiAwIDNweCA0cHggaHNsYSgwLCAwLCAwLCAwLjE1KSBpbnNldDtcbn1cblxuJWFjdGl2ZSB7XG4gIEBleHRlbmQgJWFjdGl2ZS1pbnNldC1zaGFkb3c7XG5cbiAgYmFja2dyb3VuZDogJGMtYWNjZW50O1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1zaGFkb3c6IDAgMXB4IDFweCBibGFjayAhaW1wb3J0YW50O1xufVxuXG4lYWN0aXZlLWhvdmVyIHtcbiAgYmFja2dyb3VuZDogbWl4KHdoaXRlLCAkYy1hY2NlbnQsIDIwJSk7XG59XG5cbiVhY3RpdmUtc29mdCB7XG4gIEBleHRlbmQgJWFjdGl2ZS1pbnNldC1zaGFkb3c7XG5cbiAgYmFja2dyb3VuZDogJGMtc2hhZGU7XG4gIGNvbG9yOiAkYy1mb250LWNsZWFyZXI7XG4gIHRleHQtc2hhZG93OiAxcHggMXB4IDFweCAkYy1mb250LXNoYWRvdyAhaW1wb3J0YW50O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuJWRyb3Bkb3duLXNoYWRvdyB7XG4gIGJveC1zaGFkb3c6IC0xcHggNXB4IDZweCByZ2JhKDAsIDAsIDAsIDAuMyk7XG59XG5cbiVwb3B1cC1zaGFkb3cge1xuICBib3gtc2hhZG93OiAwIDE0cHggMjhweCByZ2JhKDAsIDAsIDAsIDAuMjUpLCAwIDEwcHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMjIpO1xufVxuXG4lYnV0dG9uLXNoYWRvdyB7XG4gIGJveC1zaGFkb3c6IDAgMnB4IDVweCAwIGhzbGEoMCwgMCwgMCUsIDAuMjI1KTtcbn1cblxuJWJ1dHRvbi1yYWlzZWQtc2hhZG93IHtcbiAgYm94LXNoYWRvdzogMCA0cHggMTBweCAwcHggaHNsYSgwLCAwLCAwLCAwLjIyNSk7XG59XG5cbiVidXR0b24tbm9uZSB7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGJvcmRlcjogbm9uZTtcbiAgb3V0bGluZTogbm9uZTtcbiAgY29sb3I6ICRjLWZvbnQ7XG59XG5cbiVjaGVja2JveCB7XG4gIEBleHRlbmQgJWJveC1yYWRpdXM7XG5cbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICBiYWNrZ3JvdW5kOiAkYy1iZy1wYWdlO1xuICBib3JkZXI6IDFweCBzb2xpZCAkYy1iZy1sb3c7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcGFkZGluZzogMC41ZW07XG5cbiAgJjpjaGVja2VkIHtcbiAgICBiYWNrZ3JvdW5kOiAkYy1zZWNvbmRhcnktZGltbWVyO1xuICAgIGJvcmRlci1jb2xvcjogJGMtc2Vjb25kYXJ5LWRpbTtcbiAgfVxufVxuXG4lZm9jdXMtc2hhZG93IHtcbiAgYm94LXNoYWRvdzogMCAwIDEycHggJGMtZm9udC1kaW07XG59XG5cbiV6YWxnb3ZlcmZsb3cge1xuICAvLyBtaXRpZ2F0ZSB6YWxnbyB0ZXh0XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbiVub3dyYXAtaGlkZGVuIHtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuJW5vd3JhcC1lbGxpcHNpcyB7XG4gIEBleHRlbmQgJWVsbGlwc2lzO1xuXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG5cbiVib3gtcGFkZGluZyB7XG4gIHBhZGRpbmc6IDV2aCB2YXIoLS1ib3gtcGFkZGluZyk7XG59XG5cbiVib3gtcGFkZGluZy1ob3JpeiB7XG4gIHBhZGRpbmc6IDAgdmFyKC0tYm94LXBhZGRpbmcpO1xufVxuXG4lYnJlYWstd29yZCB7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XG59XG5cbiVicmVhay13b3JkLWhhcmQge1xuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XG5cbiAgLyogc3VwcG9ydDogZmlyZWZveCAqL1xuICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xufVxuXG4lYnJlYWstbm9wZSB7XG4gIG92ZXJmbG93LXdyYXA6IG5vcm1hbDtcbiAgd29yZC1icmVhazogbm9ybWFsO1xufVxuXG4lZWxsaXBzaXMge1xuICBAaW5jbHVkZSBlbGxpcHNpcztcbn1cblxuJXNxdWFyZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMDtcbiAgcGFkZGluZy1ib3R0b206IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ldmlkZW8ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDA7XG4gIHBhZGRpbmctYm90dG9tOiA1Ni4yNSU7XG5cbiAgLyogMTYvOSAqL1xuICAvLyBwYWRkaW5nLWJvdHRvbTogNzUlOyAvKiA0LzMgKi9cbiAgd2lkdGg6IDEwMCU7XG5cbiAgPiAqIHtcbiAgICBAZXh0ZW5kICVhYnMtMTAwO1xuXG4gICAgYm9yZGVyOiBub25lO1xuICB9XG59XG5cbiVkYXRhLWljb24ge1xuICBmb250LXNpemU6IDEuMmVtO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBmb250LWZhbWlseTogJ2xpY2hlc3MnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICBzcGVhazogbm9uZTtcbiAgY29udGVudDogYXR0cihkYXRhLWljb24pO1xuICBvcGFjaXR5OiAwLjk7XG59XG5cbiVkYXRhLWljb24tdG9wIHtcbiAgJjo6YmVmb3JlIHtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdGV4dC10b3A7XG4gIH1cbn1cblxuJWZ1bGxzY3JlZW4tbWFzayB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBib3R0b206IDA7XG4gIHJpZ2h0OiAwO1xuICBiYWNrZ3JvdW5kOiAkYy1wYWdlLW1hc2s7XG4gIHotaW5kZXg6IHooJ2Z1bGxzY3JlZW4tbWFzaycpO1xufVxuXG4lbGluay1vdmVybGF5IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHotaW5kZXg6IHooJ2xpbmstb3ZlcmxheScpO1xufVxuXG4lYWJzLTEwMCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuJWRvdWJsZS10YXAge1xuICAvLyBwcmV2ZW50IGlQYWQgc2FmYXJpIGZyb20gem9vbWluZyBpbiBvbiBkb3VibGUgdGFwXG4gIHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uO1xufVxuIiwiJWZsZXgtd3JhcCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG59XG5cbiVmbGV4LWNlbnRlciB7XG4gIC8qIGV4dGVuZHMgJWZsZXgtd3JhcCAqL1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4lZmxleC1jZW50ZXItbm93cmFwIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiByb3cgbm93cmFwO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4lZmxleC1iZXR3ZWVuIHtcbiAgLyogZXh0ZW5kcyAlZmxleC1jZW50ZXIgKi9cbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG4lZmxleC1iZXR3ZWVuLW5vd3JhcCB7XG4gIC8qIGV4dGVuZHMgJWZsZXgtY2VudGVyICovXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG4lZmxleC1iZXR3ZWVuLXN0cmV0Y2gge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xufVxuXG4lZmxleC1hcm91bmQge1xuICAvKiBleHRlbmRzICVmbGV4LWNlbnRlciAqL1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbn1cblxuJWZsZXgtY29sdW1uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiBjb2x1bW47XG59XG4iLCIlYm94LXJhZGl1cyB7XG4gIEBpbmNsdWRlIGJveC1yYWRpdXM7XG59XG5cbiVib3gtcmFkaXVzLWZvcmNlIHtcbiAgQGV4dGVuZCAlYm94LXJhZGl1cztcblxuICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gIC8qIGhlbHBzIHdpdGggY2xpcHBpbmcgYmFja2dyb3VuZCBpbnRvIGJvcmRlci1yYWRpdXMgKi9cbn1cblxuJWJveC1yYWRpdXMtbGVmdCB7XG4gIGJvcmRlci1yYWRpdXM6ICRib3gtcmFkaXVzLXNpemUgMCAwICRib3gtcmFkaXVzLXNpemU7XG59XG5cbiVib3gtcmFkaXVzLXJpZ2h0IHtcbiAgYm9yZGVyLXJhZGl1czogMCAkYm94LXJhZGl1cy1zaXplICRib3gtcmFkaXVzLXNpemUgMDtcbn1cblxuJWJveC1yYWRpdXMtdG9wIHtcbiAgYm9yZGVyLXJhZGl1czogJGJveC1yYWRpdXMtc2l6ZSAkYm94LXJhZGl1cy1zaXplIDAgMDtcbn1cblxuJWJveC1yYWRpdXMtYm90dG9tIHtcbiAgYm9yZGVyLXJhZGl1czogMCAwICRib3gtcmFkaXVzLXNpemUgJGJveC1yYWRpdXMtc2l6ZTtcbn1cblxuJWJveC1yYWRpdXMtdG9wLWxlZnQge1xuICBib3JkZXItcmFkaXVzOiAkYm94LXJhZGl1cy1zaXplIDAgMCAwO1xufVxuXG4lYm94LXJhZGl1cy10b3AtcmlnaHQge1xuICBib3JkZXItcmFkaXVzOiAwICRib3gtcmFkaXVzLXNpemUgMCAwO1xufVxuXG4lYm94LXNoYWRvdyB7XG4gIEBpbmNsdWRlIGJveC1zaGFkb3c7XG59XG5cbiVib3gtbmVhdCB7XG4gIEBleHRlbmQgJWJveC1zaGFkb3csICVib3gtcmFkaXVzO1xufVxuXG4lYm94LW5lYXQtdG9wIHtcbiAgQGV4dGVuZCAlYm94LXNoYWRvdywgJWJveC1yYWRpdXMtdG9wO1xufVxuXG4lYm94LW5lYXQtZm9yY2Uge1xuICBAZXh0ZW5kICVib3gtc2hhZG93LCAlYm94LXJhZGl1cy1mb3JjZTtcbn1cbiIsIiR2cC1taW4td2lkdGg6IDMyMHB4ICFkZWZhdWx0O1xuJHZwLW1heC13aWR0aDogMTIwMHB4ICFkZWZhdWx0O1xuXG5AZnVuY3Rpb24gc3RyaXAtdW5pdCgkdmFsdWUpIHtcbiAgQHJldHVybiAkdmFsdWUgLyAoJHZhbHVlICogMCArIDEpO1xufVxuXG5AbWl4aW4gZmx1aWQtc2l6ZSgkcHJvcCwgJG1pbi1zaXplLCAkbWF4LXNpemUsICRtaW4tdnc6ICR2cC1taW4td2lkdGgsICRtYXgtdnc6ICR2cC1tYXgtd2lkdGgpIHtcbiAgJHUxOiB1bml0KCRtaW4tdncpO1xuICAkdTI6IHVuaXQoJG1heC12dyk7XG4gICR1MzogdW5pdCgkbWluLXNpemUpO1xuICAkdTQ6IHVuaXQoJG1heC1zaXplKTtcblxuICBAaWYgJHUxID09ICR1MiBhbmQgJHUxID09ICR1MyBhbmQgJHUxID09ICR1NCB7XG4gICAgJiB7XG4gICAgICAjeyRwcm9wfTogJG1pbi1zaXplO1xuXG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogJG1pbi12dykge1xuICAgICAgICAjeyRwcm9wfTogY2FsYyhcbiAgICAgICAgICAjeyRtaW4tc2l6ZX0gKyAje3N0cmlwLXVuaXQoJG1heC1zaXplIC0gJG1pbi1zaXplKX0gKlxuICAgICAgICAgICAgKCgxMDB2dyAtICN7JG1pbi12d30pIC8gI3tzdHJpcC11bml0KCRtYXgtdncgLSAkbWluLXZ3KX0pXG4gICAgICAgICk7XG4gICAgICB9XG5cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAkbWF4LXZ3KSB7XG4gICAgICAgICN7JHByb3B9OiAkbWF4LXNpemU7XG4gICAgICB9XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICBAZXJyb3IgXCJmbHVpZC1zaXplIHJlcXVpcmVzIHRoYXQgYWxsIHZhbHVlcyBoYXZlIHRoZSBzYW1lIHVuaXRcIjtcbiAgfVxufVxuIiwiY29vcmRzIHtcbiAgLyogaGFuZGxlIGhpZGRlbiBjb29yZHMgKi9cbiAgLmNvb3Jkcy1ubyAmIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgLyogaGFuZGxlIGlubmVyIGNvb3JkcyAqL1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuXG4gIEBpbmNsdWRlIGZsdWlkLXNpemUoJ2ZvbnQtc2l6ZScsIDhweCwgMTJweCk7XG5cbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXNoYWRvdzogMCAxcHggMnB4ICMwMDA7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuXG4gICYucmFua3Mge1xuICAgIGZsZXgtZmxvdzogY29sdW1uLXJldmVyc2U7XG4gICAgdG9wOiAxcHg7XG4gICAgcmlnaHQ6IDA7XG5cbiAgICAvLyBhIG5lZ2F0aXZlIHZhbHVlIGNyZWF0ZXMgZW1wdHkgc3BhY2Ugb24gdGhlIHJpZ2h0IHNpZGUgaW4gbW9iaWxlIGJyb3dzZXJzXG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHdpZHRoOiAwLjhlbTtcblxuICAgICYuYmxhY2sge1xuICAgICAgZmxleC1mbG93OiBjb2x1bW47XG4gICAgfVxuICB9XG5cbiAgJi5maWxlcyB7XG4gICAgYm90dG9tOiAwcHg7XG4gICAgbGVmdDogMDtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIGZsZXgtZmxvdzogcm93O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMS40ZW07XG5cbiAgICAmLmJsYWNrIHtcbiAgICAgIGZsZXgtZmxvdzogcm93LXJldmVyc2U7XG4gICAgfVxuXG4gICAgY29vcmQge1xuICAgICAgcGFkZGluZy1sZWZ0OiA0cHg7XG4gICAgfVxuICB9XG5cbiAgY29vcmQge1xuICAgIGZsZXg6IDEgMSBhdXRvO1xuICB9XG5cbiAgLyogbmVnYXRlIGlubmVyIGNvb3JkcyBjb2xvcnMgKi9cbiAgLmlzM2QgLmNnLXdyYXAgY29vcmRzIGNvb3JkIHtcbiAgICBjb2xvcjogI2ZmZiAhaW1wb3J0YW50O1xuICAgIHRleHQtc2hhZG93OiAwIDFweCAycHggIzAwMCAhaW1wb3J0YW50O1xuICB9XG5cbiAgLmlzM2QgLmNnLXdyYXAgY29vcmRzLmZpbGVzIHtcbiAgICBib3R0b206IGNhbGMoMXB4IC0gMi41JSk7XG5cbiAgICBjb29yZCB7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDNweDtcbiAgICB9XG4gIH1cbn1cblxuQGltcG9ydCAnY29vcmRzLWNvbG9ycyc7XG5cbi8qIGhhbmRsZSBvdXRlciBjb29yZHMgKi9cbkBpbmNsdWRlIGJyZWFrcG9pbnQoJG1xLWNvbDItdW5pYm9hcmQpIHtcbiAgLmNvb3Jkcy1vdXQgY29vcmRzIHtcbiAgICB0ZXh0LXNoYWRvdzogbm9uZTtcblxuICAgICYucmFua3Mge1xuICAgICAgcmlnaHQ6IC0xNXB4O1xuICAgICAgdG9wOiAwO1xuICAgICAgd2lkdGg6IDEycHg7XG5cbiAgICAgIGNvb3JkIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDQyJSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJi5maWxlcyB7XG4gICAgICBib3R0b206IC0xNXB4O1xuICAgICAgbGVmdDogMDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG5cbiAgICBjb29yZCB7XG4gICAgICBjb2xvcjogJGMtZm9udC1wYWdlICFpbXBvcnRhbnQ7XG4gICAgfVxuICB9XG59XG4iLCI6cm9vdCB7XG4gIC0tY2ctY29vcmQtY29sb3Itd2hpdGU6ICNmZmY7XG4gIC0tY2ctY29vcmQtY29sb3ItYmxhY2s6ICNmZmY7XG4gIC0tY2ctY29vcmQtc2hhZG93OiAwIDFweCAycHggIzAwMDtcbn1cblxuY29vcmRzIHtcbiAgdGV4dC1zaGFkb3c6IHZhcigtLWNnLWNvb3JkLXNoYWRvdyk7XG59XG5cbi5vcmllbnRhdGlvbi13aGl0ZSAuZmlsZXMgY29vcmQ6bnRoLWNoaWxkKDJuICsgMSksXG4ub3JpZW50YXRpb24td2hpdGUgLnJhbmtzIGNvb3JkOm50aC1jaGlsZCgybiksXG4ub3JpZW50YXRpb24tYmxhY2sgLmZpbGVzIGNvb3JkOm50aC1jaGlsZCgybiksXG4ub3JpZW50YXRpb24tYmxhY2sgLnJhbmtzIGNvb3JkOm50aC1jaGlsZCgybiArIDEpIHtcbiAgY29sb3I6IHZhcigtLWNnLWNvb3JkLWNvbG9yLXdoaXRlKTtcbn1cblxuLm9yaWVudGF0aW9uLXdoaXRlIC5maWxlcyBjb29yZDpudGgtY2hpbGQoMm4pLFxuLm9yaWVudGF0aW9uLXdoaXRlIC5yYW5rcyBjb29yZDpudGgtY2hpbGQoMm4gKyAxKSxcbi5vcmllbnRhdGlvbi1ibGFjayAuZmlsZXMgY29vcmQ6bnRoLWNoaWxkKDJuICsgMSksXG4ub3JpZW50YXRpb24tYmxhY2sgLnJhbmtzIGNvb3JkOm50aC1jaGlsZCgybikge1xuICBjb2xvcjogdmFyKC0tY2ctY29vcmQtY29sb3ItYmxhY2spO1xufVxuIiwiYm9keSB7XG4gIC0tYm9hcmQtc2NhbGU6IDE7XG5cbiAgQGluY2x1ZGUgYnJlYWtwb2ludCgkbXEtem9vbS1lbmFibGVkKSB7XG4gICAgLy8gLS16b29tOiA4MDsgZGVmaW5lZCBpbiB0aGUgSFRNTCwgbG9hZGVkIGZyb20gc2VydmVyXG4gICAgLS1ib2FyZC1zY2FsZTogY2FsYygodmFyKC0tem9vbSkgLyAxMDApICogMC43ICsgMC4zKTtcbiAgfVxufVxuXG5AaW5jbHVkZSBicmVha3BvaW50KCRtcS1jb2wxLXVuaWJvYXJkKSB7XG4gIGJvZHkge1xuICAgIC0tY29sMTogMTtcbiAgfVxuXG4gIC5tYWluLWJvYXJkIGNnLWJvYXJkIHtcbiAgICBib3JkZXItcmFkaXVzOiAwO1xuICB9XG59XG4iLCJib2R5IDo6LXdlYmtpdC1zY3JvbGxiYXIsXG5ib2R5IDo6LXdlYmtpdC1zY3JvbGxiYXItY29ybmVyIHtcbiAgd2lkdGg6IDAuNXJlbTtcbiAgYmFja2dyb3VuZDogJGMtYmctYm94O1xufVxuXG5ib2R5IDo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xuICBiYWNrZ3JvdW5kOiAkYy1zaGFkZTtcbn1cblxuYm9keSA6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iOmhvdmVyLFxuYm9keSA6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQ6ICRjLWZvbnQtZGltbWVyO1xufVxuIiwiYm9keS5yZXNpemluZyB7XG4gIHVzZXItc2VsZWN0OiBub25lO1xufVxuXG5jZy1yZXNpemUge1xuICAkcmVzaXplLXdpZHRoOiAyMnB4O1xuXG4gIGRpc3BsYXk6IG5vbmU7XG5cbiAgQGluY2x1ZGUgYnJlYWtwb2ludCgkbXEtYm9hcmQtcmVzaXphYmxlKSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAjezEzcHggLSAkcmVzaXplLXdpZHRofTtcbiAgICBib3R0b206ICN7MTNweCAtICRyZXNpemUtd2lkdGh9O1xuICAgIHdpZHRoOiAkcmVzaXplLXdpZHRoO1xuICAgIGhlaWdodDogJHJlc2l6ZS13aWR0aDtcbiAgICBjdXJzb3I6IG53c2UtcmVzaXplO1xuXG4gICAgJjo6YmVmb3JlLFxuICAgICY6OmFmdGVyIHtcbiAgICAgIGJhY2tncm91bmQ6ICMwMDA7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHdpZHRoOiAxMnB4O1xuICAgICAgaGVpZ2h0OiAxcHg7XG4gICAgfVxuXG4gICAgJjo6YmVmb3JlIHtcbiAgICAgIHdpZHRoOiA1cHg7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSg3cHgsIDhweCkgcm90YXRlKC00NWRlZyk7XG4gICAgfVxuXG4gICAgJjo6YWZ0ZXIge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMXB4LCA2cHgpIHJvdGF0ZSgtNDVkZWcpO1xuICAgIH1cblxuICAgICY6aG92ZXIge1xuICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgYmFja2dyb3VuZDogZmFkZS1vdXQoJGMtYWNjZW50LCAwLjUpO1xuICAgIH1cblxuICAgIC5yZXNpemluZyAmIHtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgIGJhY2tncm91bmQ6IGZhZGUtb3V0KCRjLXNlY29uZGFyeSwgMC41KTtcbiAgICB9XG4gIH1cbn1cbiIsIiNtb2RhbCB7XG4gICYtb3ZlcmxheSB7XG4gICAgQGV4dGVuZCAlZnVsbHNjcmVlbi1tYXNrLCAlZmxleC1jZW50ZXI7XG5cbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgfVxuXG4gICYtd3JhcCB7XG4gICAgQGV4dGVuZCAlYm94LXJhZGl1cywgJXBvcHVwLXNoYWRvdywgJWZsZXgtY29sdW1uO1xuXG4gICAgYmFja2dyb3VuZDogJGMtYmctYm94O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nOiAycmVtO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXgtd2lkdGg6IDEwMHZ3O1xuICAgIG1heC1oZWlnaHQ6IDk2dmg7XG5cbiAgICA+IGRpdiB7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICB9XG5cbiAgICAuY2xvc2Uge1xuICAgICAgY29sb3I6ICRjLWZvbnQ7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICBsaW5lLWhlaWdodDogMjdweDtcbiAgICAgIHdpZHRoOiAzMnB4O1xuICAgICAgaGVpZ2h0OiAzMnB4O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgdG9wOiAwO1xuICAgICAgcmlnaHQ6IDA7XG4gICAgICBiYWNrZ3JvdW5kOiBub25lO1xuXG4gICAgICBAaW5jbHVkZSBicmVha3BvaW50KCRtcS1zbWFsbCkge1xuICAgICAgICB0b3A6IC0xMnB4O1xuICAgICAgICByaWdodDogLTEycHg7XG4gICAgICAgIGJhY2tncm91bmQ6ICRjLWJnLXBvcHVwO1xuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLmNsb3NlOmhvdmVyIHtcbiAgICAgIEBleHRlbmQgJWJveC1zaGFkb3c7XG5cbiAgICAgIGJhY2tncm91bmQ6ICRjLWJhZDtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgIH1cbiAgfVxufVxuIiwiLmNvbnRpbnVlLXdpdGgge1xuICBAZXh0ZW5kICVmbGV4LWNvbHVtbjtcblxuICA+ICo6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgIG1hcmdpbi10b3A6IDFlbTtcbiAgfVxufVxuIiwiLmNvbG9yLWljb24ge1xuICBAaWYgJHRoZW1lLWxpZ2h0IHtcbiAgICAmLndoaXRlOjpiZWZvcmUge1xuICAgICAgY29udGVudDogJ0snO1xuICAgIH1cblxuICAgICYuYmxhY2s6OmJlZm9yZSB7XG4gICAgICBjb250ZW50OiAnSic7XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICAmLndoaXRlOjpiZWZvcmUge1xuICAgICAgY29udGVudDogJ0onO1xuICAgIH1cblxuICAgICYuYmxhY2s6OmJlZm9yZSB7XG4gICAgICBjb250ZW50OiAnSyc7XG4gICAgfVxuICB9XG5cbiAgJi5yYW5kb206OmJlZm9yZSB7XG4gICAgY29udGVudDogJ2wnO1xuICB9XG59XG4iLCJAaW5jbHVkZSBjcm9zc3RhYmxlLXNtYWxsO1xuXG4uY3Jvc3N0YWJsZSB7XG4gIEBleHRlbmQgJWJveC1uZWF0LWZvcmNlO1xuXG4gIHdpZHRoOiAxMDAlO1xuICBsaW5lLWhlaWdodDogMS45ZW07XG4gIGRpc3BsYXk6IGZsZXg7XG5cbiAgZmlsbCxcbiAgcG92cyB7XG4gICAgYmFja2dyb3VuZDogJGMtYmctYm94O1xuICAgIGZsZXg6IDEgMSBhdXRvO1xuICB9XG5cbiAgcG92cyxcbiAgJl9fdXNlcnMsXG4gICZfX3Njb3JlLFxuICAmX19tYXRjaHVwIHtcbiAgICBAZXh0ZW5kICVmbGV4LWNvbHVtbjtcblxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuXG4gICZfX3VzZXJzLFxuICAmX19zY29yZSB7XG4gICAgQGV4dGVuZCAlbWV0YWw7XG4gIH1cblxuICAmX191c2VycyB7XG4gICAgQGV4dGVuZCAlZWxsaXBzaXM7XG5cbiAgICBtYXgtd2lkdGg6IDQwdnc7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcblxuICAgIGEge1xuICAgICAgcGFkZGluZy1sZWZ0OiAkYmxvY2stZ2FwO1xuICAgIH1cbiAgfVxuXG4gICZfX3Njb3JlIHtcbiAgICBmbGV4OiAwIDAgYXV0bztcbiAgICBmb250LXdlaWdodDogYm9sZDtcblxuICAgIHNwYW4ge1xuICAgICAgcGFkZGluZzogMCAkYmxvY2stZ2FwO1xuICAgIH1cbiAgfVxuXG4gICZfX21hdGNodXAge1xuICAgIGZsZXg6IDEgMSBhdXRvO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGJhY2tncm91bmQ6IG1peCgkYy1wcmltYXJ5LCAkYy1iZy1ib3gsIDIwJSk7XG4gIH1cblxuICBwb3ZzIHtcbiAgICBhIHtcbiAgICAgIGNvbG9yOiAkYy1mb250LWRpbTtcbiAgICAgIGZsZXg6IDAgMCA1MCU7XG4gICAgfVxuXG4gICAgJjpob3ZlciB7XG4gICAgICBAZXh0ZW5kICVtZXRhbDtcblxuICAgICAgYSB7XG4gICAgICAgIG9wYWNpdHk6IDEgIWltcG9ydGFudDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBhLmxvc3Mge1xuICAgICAgb3BhY2l0eTogMC4yO1xuICAgIH1cblxuICAgICYuY3VycmVudCBhIHtcbiAgICAgIGJhY2tncm91bmQ6IG1peCgkYy1hY2NlbnQsICRjLWJnLWJveCwgNzAlKTtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgb3BhY2l0eTogMSAhaW1wb3J0YW50O1xuICAgIH1cblxuICAgICYubmV3IHtcbiAgICAgIGJvcmRlcjogJGMtYm9yZGVyO1xuICAgIH1cblxuICAgIGEubG9zcyB7XG4gICAgICBvcGFjaXR5OiAwLjI7XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkbXEtbm90LXgtc21hbGwpIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG5cbiAgICAgICY6bnRoLWxhc3QtY2hpbGQoLW4gKyAxMikge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5zZXAge1xuICAgIEBleHRlbmQgJWJveC1yYWRpdXMtbGVmdDtcblxuICAgIGJvcmRlci1sZWZ0OiAkYm9yZGVyO1xuICAgIG1hcmdpbi1sZWZ0OiAwLjNlbTtcbiAgfVxuXG4gIC53aW4ge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGNvbG9yOiAkYy1nb29kO1xuICB9XG5cbiAgLmxvc3Mge1xuICAgIGNvbG9yOiAkYy1iYWQ7XG4gIH1cblxuICAudW5hdmFpbGFibGUge1xuICAgIG1hcmdpbi10b3A6IDQwcHg7XG4gICAgb3BhY2l0eTogMC43O1xuICB9XG59XG4iLCIuZmJ0IHtcbiAgQGV4dGVuZCAlYnV0dG9uLW5vbmU7XG5cbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcblxuICBAaW5jbHVkZSB0cmFuc2l0aW9uO1xuXG4gIEBtZWRpYSAoaG92ZXI6IGhvdmVyKSB7XG4gICAgJjpob3Zlcjpub3QoLmRpc2FibGVkKTpub3QoW2Rpc2FibGVkXSkge1xuICAgICAgYmFja2dyb3VuZDogbWl4KCRjLXNlY29uZGFyeSwgJGMtYmctYm94LCA3NSUpO1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgfVxuICB9XG5cbiAgJi5hY3RpdmUge1xuICAgIGJhY2tncm91bmQ6ICRjLXNlY29uZGFyeSAhaW1wb3J0YW50O1xuICAgIGNvbG9yOiAjZmZmO1xuICB9XG5cbiAgJi5kaXNhYmxlZCxcbiAgJltkaXNhYmxlZF0ge1xuICAgIG9wYWNpdHk6IDAuNTtcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gIH1cbn1cbiIsIi5jbW4tdG9nZ2xlIHtcbiAgQGV4dGVuZCAlZG91YmxlLXRhcDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBtYXJnaW4tbGVmdDogLTk5OTk5cHg7XG59XG5cbi5jbW4tdG9nZ2xlICsgbGFiZWwge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIG91dGxpbmU6IG5vbmU7XG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG4gIHBhZGRpbmc6IDFweDtcbiAgd2lkdGg6IDQwcHg7XG4gIGhlaWdodDogMjRweDtcbiAgYm9yZGVyOiAxcHggc29saWQgJGMtYm9yZGVyO1xuICBib3JkZXItcmFkaXVzOiAyNHB4O1xuXG4gICY6OmJlZm9yZSxcbiAgJjo6YWZ0ZXIge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBjb250ZW50OiAnJztcbiAgICB3aWR0aDogMjJweDtcbiAgICBoZWlnaHQ6IDIycHg7XG4gICAgYm90dG9tOiAwLjFweDtcbiAgICBsZWZ0OiAwO1xuICB9XG5cbiAgJjo6YmVmb3JlIHtcbiAgICBAZXh0ZW5kICVkYXRhLWljb247XG4gICAgZm9udC1zaXplOiAxZW07XG4gICAgei1pbmRleDogMTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIH1cblxuICAmOjphZnRlciB7XG4gICAgQGV4dGVuZCAlbWV0YWw7XG5cbiAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICAgIGJveC1zaGFkb3c6IDAgMXB4IDIuNXB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgfVxufVxuXG4uY21uLXRvZ2dsZTpub3QoOmNoZWNrZWQpICsgbGFiZWwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkYy1iYWQ7XG59XG5cbi5jbW4tdG9nZ2xlLS1zdWJ0bGU6bm90KDpjaGVja2VkKSArIGxhYmVsIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogJGMtZm9udC1kaW1tZXI7XG59XG5cbi5jbW4tdG9nZ2xlOmNoZWNrZWQgKyBsYWJlbCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICRjLWdvb2Q7XG59XG5cbi5jbW4tdG9nZ2xlOmRpc2FibGVkICsgbGFiZWwge1xuICBvcGFjaXR5OiA2MCU7XG4gIGN1cnNvcjogbm90LWFsbG93ZWQgIWltcG9ydGFudDtcbn1cblxuLmNtbi10b2dnbGU6Zm9jdXM6bm90KDpkaXNhYmxlZCkgKyBsYWJlbCB7XG4gIEBleHRlbmQgJWZvY3VzLXNoYWRvdztcbn1cblxuLmNtbi10b2dnbGU6aG92ZXI6bm90KDpkaXNhYmxlZCkge1xuICArIGxhYmVsIHtcbiAgICBAZXh0ZW5kICVmb2N1cy1zaGFkb3c7XG4gICAgQGluY2x1ZGUgdHJhbnNpdGlvbihiYWNrZ3JvdW5kKTtcblxuICAgICY6OmJlZm9yZSB7XG4gICAgICB0cmFuc2l0aW9uOiBtYXJnaW4gJHRyYW5zaXRpb24tZHVyYXRpb24sIGNvbG9yICR0cmFuc2l0aW9uLWR1cmF0aW9uO1xuICAgIH1cblxuICAgICY6OmFmdGVyIHtcbiAgICAgIEBleHRlbmQgJW1ldGFsLWhvdmVyO1xuICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbihtYXJnaW4pO1xuICAgIH1cbiAgfVxufVxuXG4uY21uLXRvZ2dsZTpub3QoOmNoZWNrZWQpICsgbGFiZWwge1xuICAmOjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICdMJztcbiAgICBjb2xvcjogJGMtYmFkO1xuICB9XG59XG5cbi5jbW4tdG9nZ2xlLS1zdWJ0bGU6bm90KDpjaGVja2VkKSArIGxhYmVsIHtcbiAgJjo6YmVmb3JlIHtcbiAgICBjb2xvcjogJGMtZm9udC1kaW1tZXI7XG4gIH1cbn1cblxuLmNtbi10b2dnbGU6Y2hlY2tlZCArIGxhYmVsIHtcbiAgJjo6YmVmb3JlLFxuICAmOjphZnRlciB7XG4gICAgbWFyZ2luLWxlZnQ6IDE2cHg7XG4gIH1cblxuICAmOjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICdFJztcbiAgICBjb2xvcjogJGMtZ29vZDtcbiAgfVxufVxuIiwiQG1peGluIHJhbmdlLXRodW1iIHtcbiAgQGluY2x1ZGUgbWV0YWw7XG5cbiAgYm9yZGVyOiAxcHggc29saWQgJGMtZm9udC1kaW1tZXI7XG4gIGhlaWdodDogMWVtO1xuICB3aWR0aDogMS41ZW07XG4gIGJvcmRlci1yYWRpdXM6IDEycHg7XG4gIGJhY2tncm91bmQ6ICRjLWJnLWJveDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5AbWl4aW4gcmFuZ2UtdHJhY2sge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxZW07XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYmFja2dyb3VuZDogJGMtc2hhZGU7XG4gIGJvcmRlci1yYWRpdXM6IDAuNWVtO1xufVxuXG5pbnB1dC5yYW5nZSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYm9yZGVyOiAwO1xuXG4gICY6Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7XG4gIH1cblxuICAmOjotd2Via2l0LXNsaWRlci1ydW5uYWJsZS10cmFjayB7XG4gICAgQGluY2x1ZGUgcmFuZ2UtdHJhY2s7XG4gIH1cblxuICAmOjotd2Via2l0LXNsaWRlci10aHVtYiB7XG4gICAgQGluY2x1ZGUgcmFuZ2UtdGh1bWI7XG5cbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gICAgbWFyZ2luLXRvcDogLTAuM3B4O1xuICB9XG5cbiAgJjo6LW1vei1yYW5nZS10cmFjayB7XG4gICAgQGluY2x1ZGUgcmFuZ2UtdHJhY2s7XG4gIH1cblxuICAmOjotbW96LXJhbmdlLXRodW1iIHtcbiAgICBAaW5jbHVkZSByYW5nZS10aHVtYjtcbiAgfVxuXG4gICY6Oi1tcy10cmFjayB7XG4gICAgQGluY2x1ZGUgcmFuZ2UtdHJhY2s7XG4gIH1cblxuICAmOjotbXMtZmlsbC1sb3dlciB7XG4gICAgYmFja2dyb3VuZDogcmdiYSgxOTEsIDE5MSwgMTkxLCAwLjc4KTtcbiAgICBib3JkZXItcmFkaXVzOiAxMS44cHg7XG4gIH1cblxuICAmOjotbXMtZmlsbC11cHBlciB7XG4gICAgYmFja2dyb3VuZDogcmdiYSgyMTQsIDIxNCwgMjE0LCAwLjc4KTtcbiAgICBib3JkZXItcmFkaXVzOiAxMS44cHg7XG4gIH1cblxuICAmOjotbXMtdGh1bWIge1xuICAgIEBpbmNsdWRlIHJhbmdlLXRodW1iO1xuXG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogdHJhbnNwYXJlbnQ7XG4gIH1cbn1cbiIsIkBpbXBvcnQgJ2V4dGVuZCc7XG5cbiRjLWluYWNjdXJhY3k6ICM1NmI0ZTk7XG4kYy1taXN0YWtlOiAjZTY5ZjAwO1xuJGMtYmx1bmRlcjogI2RmNTM1MztcblxuLnR2aWV3MiB7XG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG5cbiAgJi1jb2x1bW4ge1xuICAgIEBleHRlbmQgJWZsZXgtd3JhcDtcbiAgfVxuXG4gICYtaW5saW5lIHtcbiAgICBwYWRkaW5nOiA3cHggM3B4IDdweCA3cHg7XG4gIH1cblxuICBtb3ZlIHtcbiAgICBAZXh0ZW5kICVtb3ZlO1xuXG4gICAgJi5pbmFjY3VyYWN5IHtcbiAgICAgIGNvbG9yOiAkYy1pbmFjY3VyYWN5O1xuICAgIH1cbiAgICAmLm1pc3Rha2Uge1xuICAgICAgY29sb3I6ICRjLW1pc3Rha2U7XG4gICAgfVxuICAgICYuYmx1bmRlciB7XG4gICAgICBjb2xvcjogJGMtYmx1bmRlcjtcbiAgICB9XG4gIH1cblxuICAmLWNvbHVtbiBtb3ZlIHtcbiAgICBmb250LXNpemU6IDEuMDkyZW07XG4gICAgcGFkZGluZzogMCAycHg7XG4gIH1cblxuICAmLWlubGluZSBtb3ZlIHtcbiAgICBwYWRkaW5nOiAwLjI1ZW0gMC4xN2VtO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cblxuICBtb3ZlLnBhcmVudCB7XG4gICAgY29sb3I6ICRjLXByaW1hcnk7XG4gIH1cblxuICBjb21tZW50IGEge1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIH1cblxuICBtb3ZlLmN1cnJlbnQge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICRjLWFjY2VudDtcbiAgfVxuXG4gIG1vdmUuYWN0aXZlIHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBiYWNrZ3JvdW5kOiBtaXgoJGMtcHJpbWFyeSwgJGMtYmctYm94LCAyMCUpO1xuICB9XG5cbiAgJi1pbmxpbmUgbW92ZS5hY3RpdmUge1xuICAgIEBleHRlbmQgJWJveC1yYWRpdXM7XG4gIH1cblxuICBtb3ZlLm5vbmdhbWUge1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgfVxuXG4gIG1vdmU6bm90KC5lbXB0eSk6aG92ZXIge1xuICAgICYsXG4gICAgaW5kZXgsXG4gICAgZXZhbCB7XG4gICAgICBiYWNrZ3JvdW5kOiAkYy1wcmltYXJ5O1xuICAgICAgY29sb3I6ICRjLXByaW1hcnktb3ZlcjtcbiAgICB9XG4gIH1cblxuICAmLWlubGluZSBtb3ZlOmhvdmVyIHtcbiAgICBAZXh0ZW5kICVib3gtcmFkaXVzO1xuICB9XG5cbiAgbW92ZS5lbXB0eSB7XG4gICAgY29sb3I6ICRjLWZvbnQtZGltbWVyO1xuICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgfVxuXG4gIG1vdmUgaW5kZXgge1xuICAgIGZvbnQtc2l6ZTogOTAlO1xuICAgIGNvbG9yOiAkYy1mb250LWRpbTtcbiAgfVxuXG4gIG1vdmUuY29udGV4dC1tZW51IHtcbiAgICBiYWNrZ3JvdW5kOiAkYy1hY2NlbnQ7XG4gICAgY29sb3I6ICRjLWFjY2VudC1vdmVyO1xuXG4gICAgaW5kZXgge1xuICAgICAgY29sb3I6ICRjLWFjY2VudC1vdmVyO1xuICAgIH1cbiAgfVxuXG4gICYtY29sdW1uIG1vdmUgaW5kZXgge1xuICAgIHBhZGRpbmctbGVmdDogNXB4O1xuICB9XG5cbiAgJi1jb2x1bW4gbW92ZSBpbmRleDpmaXJzdC1jaGlsZCB7XG4gICAgcGFkZGluZy1sZWZ0OiAwO1xuICB9XG5cbiAgJi1pbmxpbmUgbW92ZSBpbmRleCB7XG4gICAgcGFkZGluZy1yaWdodDogMC4yZW07XG4gICAgbGluZS1oZWlnaHQ6IDExMS4xMSU7XG4gIH1cblxuICBsaW5lIG1vdmUge1xuICAgIGNvbG9yOiAkYy1mb250O1xuICB9XG5cbiAgJi1jb2x1bW4gPiBtb3ZlIHtcbiAgICBmbGV4OiAwIDAgNDMuNSU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmb250LXNpemU6IDEuMTg1ZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuNzVlbTtcbiAgICBwYWRkaW5nOiAwIDAuM2VtIDAgMC41ZW07XG4gIH1cblxuICAmLWNvbHVtbiA+IGluZGV4ICsgbW92ZSB7XG4gICAgYm9yZGVyLXJpZ2h0OiAkYy1ib3JkZXI7XG4gIH1cblxuICBldmFsIHtcbiAgICBAZXh0ZW5kICVyb2JvdG87XG5cbiAgICBmbGV4OiAzIDAgYXV0bztcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICBmb250LXNpemU6IDAuOGVtO1xuICAgIGNvbG9yOiAkYy1mb250LWRpbTtcbiAgfVxuXG4gIGdseXBoIHtcbiAgICBAZXh0ZW5kICViYXNlLWZvbnQ7XG5cbiAgICBtYXJnaW4tbGVmdDogMC4wOGVtO1xuICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207XG4gIH1cblxuICBzaGFwZXMge1xuICAgIGZvbnQtc2l6ZTogMC43ZW07XG4gICAgbWFyZ2luLWxlZnQ6IDAuNGVtO1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgIGNvbG9yOiAkYy1nb29kO1xuICAgICY6OmJlZm9yZSB7XG4gICAgICBAZXh0ZW5kICVkYXRhLWljb247XG4gICAgICBjb250ZW50OiAnSyc7XG4gICAgfVxuICB9XG5cbiAgJi1jb2x1bW4gPiBtb3ZlIGdseXBoIHtcbiAgICBmbGV4OiAwIDEgYXV0bztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBmb250LXNpemU6IDAuODJlbTtcbiAgfVxuXG4gICYtY29sdW1uID4gaW5kZXgge1xuICAgIGZsZXg6IDAgMCAxMyU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBib3JkZXItcmlnaHQ6ICRib3JkZXI7XG4gICAgYmFja2dyb3VuZDogJGMtYmctemVicmE7XG4gICAgbGluZS1oZWlnaHQ6IDIuMDdlbTtcbiAgICBjb2xvcjogJGMtZm9udC1kaW1tZXI7XG4gIH1cblxuICA+IGludGVycnVwdCB7XG4gICAgZm9udC1zaXplOiA5NSU7XG4gIH1cblxuICAmLWNvbHVtbiA+IGludGVycnVwdCB7XG4gICAgZmxleDogMCAwIDEwMCU7XG4gICAgYmFja2dyb3VuZDogJGMtYmctemVicmE7XG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRjLWJvcmRlcjtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGMtYm9yZGVyO1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgfVxuXG4gICYtY29sdW1uID4gaW50ZXJydXB0ID4gY29tbWVudCB7XG4gICAgQGV4dGVuZCAlYnJlYWstd29yZDtcblxuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBhZGRpbmc6IDNweCA1cHg7XG4gIH1cblxuICAmLWlubGluZSBjb21tZW50IHtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogNDUlO1xuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgICBtYXJnaW46IDAgMC4yZW0gMCAwLjFlbTtcbiAgICBmb250LXNpemU6IDAuOWVtO1xuICB9XG5cbiAgY29tbWVudCAuYnkge1xuICAgIEBleHRlbmQgJW5vd3JhcC1lbGxpcHNpcywgJXJvYm90bztcblxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB2ZXJ0aWNhbC1hbGlnbjogLTAuM2VtO1xuICAgIGZvbnQtc2l6ZTogMC45ZW07XG4gICAgb3BhY2l0eTogMC44O1xuICAgIG1hcmdpbi1yaWdodDogMC40ZW07XG4gICAgbWF4LXdpZHRoOiA5ZW07XG4gIH1cblxuICAmLWNvbHVtbiBjb21tZW50LndoaXRlIHtcbiAgICBib3JkZXItbGVmdDogM3B4IHNvbGlkO1xuICB9XG5cbiAgJi1jb2x1bW4gY29tbWVudC5ibGFjayB7XG4gICAgYm9yZGVyLXJpZ2h0OiAzcHggc29saWQ7XG4gICAgb3ZlcmZsb3cteDogaGlkZGVuO1xuICB9XG5cbiAgJi1jb2x1bW4gY29tbWVudC5pbmFjY3VyYWN5IHtcbiAgICBib3JkZXItY29sb3I6ICRjLWluYWNjdXJhY3k7XG4gIH1cblxuICAmLWNvbHVtbiBjb21tZW50Lm1pc3Rha2Uge1xuICAgIGJvcmRlci1jb2xvcjogJGMtbWlzdGFrZTtcbiAgfVxuXG4gICYtY29sdW1uIGNvbW1lbnQuYmx1bmRlciB7XG4gICAgYm9yZGVyLWNvbG9yOiAkYy1ibHVuZGVyO1xuICB9XG5cbiAgJi1jb2x1bW4gY29tbWVudC51bmRlZmluZWQge1xuICAgIGJvcmRlci1jb2xvcjogIzY2NTU4YztcbiAgfVxuXG4gIGxpbmUgY29tbWVudCB7XG4gICAgZm9udC1zaXplOiA5MCU7XG4gIH1cblxuICAmLWNvbHVtbiBsaW5lIGNvbW1lbnQge1xuICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICBjb2xvcjogJGMtZm9udC1kaW07XG4gICAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICAgIHBhZGRpbmc6IDAgNXB4IDAgM3B4O1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIH1cblxuICBsaW5lIGNvbW1lbnQgLmJ5IHtcbiAgICBmb250LXNpemU6IDFlbTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICB9XG5cbiAgbGluZXMge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbi10b3A6IDJweDtcbiAgICBtYXJnaW4tbGVmdDogNnB4O1xuICAgIG1hcmdpbi1ib3R0b206IDAuOGVtO1xuICAgIGJvcmRlci1sZWZ0OiAycHggc29saWQgJGMtYm9yZGVyO1xuICB9XG5cbiAgPiBpbnRlcnJ1cHQgPiBsaW5lcyB7XG4gICAgbWFyZ2luLWxlZnQ6IDBweDtcbiAgfVxuXG4gIGxpbmVzLnNpbmdsZSB7XG4gICAgYm9yZGVyLWxlZnQ6IG5vbmU7XG4gIH1cblxuICBsaW5lczpsYXN0LWNoaWxkIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICB9XG5cbiAgbGluZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZy1sZWZ0OiA3cHg7XG4gIH1cblxuICAmLWNvbHVtbiBsaW5lIHtcbiAgICBtYXJnaW46IDJweCAwO1xuICB9XG5cbiAgbGluZXMgbGluZXMgbW92ZSB7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICB9XG5cbiAgbGluZXMgbGluZXMge1xuICAgIG1hcmdpbi1sZWZ0OiAxcHg7XG4gIH1cblxuICBsaW5lcyBsaW5lczo6YmVmb3JlIHtcbiAgICBjb250ZW50OiAnICc7XG4gICAgYm9yZGVyLXRvcDogMnB4IHNvbGlkICRjLWJvcmRlcjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbWFyZ2luLWxlZnQ6IC0xMXB4O1xuICAgIHdpZHRoOiA5cHg7XG4gICAgaGVpZ2h0OiA2cHg7XG4gIH1cblxuICBsaW5lcyBsaW5lOjpiZWZvcmUge1xuICAgIG1hcmdpbi10b3A6IDAuNjVlbTtcbiAgICBtYXJnaW4tbGVmdDogLThweDtcbiAgICBjb250ZW50OiAnICc7XG4gICAgYm9yZGVyLXRvcDogMnB4IHNvbGlkICRjLWJvcmRlcjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDhweDtcbiAgICBoZWlnaHQ6IDZweDtcbiAgfVxuXG4gIGxpbmVzIGxpbmVzOmxhc3QtY2hpbGQge1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cblxuICBpbmxpbmUge1xuICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgZm9udC1zaXplOiAwLjllbTtcbiAgICBvcGFjaXR5OiAwLjg7XG4gIH1cblxuICBpbmxpbmU6OmJlZm9yZSxcbiAgaW5saW5lOjphZnRlciB7XG4gICAgdmVydGljYWwtYWxpZ246IDAuNGVtO1xuICAgIG9wYWNpdHk6IDAuNztcbiAgICBmb250LXNpemU6IDAuOWVtO1xuICB9XG5cbiAgaW5saW5lOjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICcoJztcbiAgICBtYXJnaW4tbGVmdDogMnB4O1xuICB9XG5cbiAgaW5saW5lOjphZnRlciB7XG4gICAgY29udGVudDogJyknO1xuICAgIG1hcmdpbi1yaWdodDogMnB4O1xuICB9XG5cbiAgJi1pbmxpbmUgaW5saW5lOjpiZWZvcmUsXG4gICYtaW5saW5lIGlubGluZTo6YWZ0ZXIge1xuICAgIHZlcnRpY2FsLWFsaWduOiAwLjdlbTtcbiAgfVxuXG4gIC5jb25jZWFsIHtcbiAgICBvcGFjaXR5OiAwLjQ7XG4gIH1cblxuICAuaGlkZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuIiwiJW1vdmUge1xuICBAZXh0ZW5kICVzYW4sICVub3dyYXAtaGlkZGVuO1xuXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuIiwiQGltcG9ydCAnY3RybCc7XG5AaW1wb3J0ICdwdic7XG4iLCIuY2V2YWwge1xuICBAZXh0ZW5kICVtZXRhbC1iZztcblxuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xuXG4gICYuZW5hYmxlZCB7XG4gICAgcGFkZGluZy10b3A6IDJweDtcbiAgICBoZWlnaHQ6IDQwcHg7XG5cbiAgICAuc2hvdy10aHJlYXQge1xuICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgICB9XG4gIH1cblxuICAuc3dpdGNoIHtcbiAgICBAZXh0ZW5kICVmbGV4LWNlbnRlcjtcblxuICAgIGZsZXg6IDAgMCA0MHB4O1xuICAgIG1hcmdpbi1yaWdodDogOHB4O1xuICB9XG5cbiAgcGVhcmwge1xuICAgIGZsZXg6IDAgMCA3NXB4O1xuICAgIGxpbmUtaGVpZ2h0OiAzOHB4O1xuICAgIGZvbnQtc2l6ZTogMS42ZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG5cbiAgaGVscCxcbiAgLmVuZ2luZSB7XG4gICAgQGV4dGVuZCAlbm93cmFwLWhpZGRlbjtcblxuICAgIGZsZXg6IDEgMSBhdXRvO1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgICBtYXJnaW4tdG9wOiAzcHg7XG4gICAgY29sb3I6ICRjLWZvbnQtZGltO1xuICB9XG5cbiAgLmVuZ2luZSB7XG4gICAgLmNsb3VkIHtcbiAgICAgIEBleHRlbmQgJXJvYm90bywgJWJveC1yYWRpdXM7XG5cbiAgICAgIG1hcmdpbi1sZWZ0OiA0cHg7XG4gICAgICBiYWNrZ3JvdW5kOiAkYy1zZWNvbmRhcnktZGltO1xuICAgICAgY29sb3I6ICRjLXNlY29uZGFyeS1vdmVyO1xuICAgICAgcGFkZGluZzogMXB4IDNweDtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICBmb250LXNpemU6IDExcHg7XG4gICAgfVxuXG4gICAgLmluZm8ge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIH1cblxuICAgIC5kZWVwZXIge1xuICAgICAgY29sb3I6ICRjLXByaW1hcnk7XG4gICAgICBtYXJnaW4tbGVmdDogNHB4O1xuICAgIH1cblxuICAgIC5kZWVwZXI6OmJlZm9yZSB7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogLTJweDtcbiAgICB9XG4gIH1cblxuICAudGVjaG5vbG9neSB7XG4gICAgbWFyZ2luLWxlZnQ6IDVweDtcbiAgICAmLmdvb2Qge1xuICAgICAgY29sb3I6ICRjLWdvb2Q7XG4gICAgfVxuICB9XG5cbiAgLmJhciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogM3B4O1xuICAgIHRvcDogMHB4O1xuICB9XG5cbiAgQGtleWZyYW1lcyBiYXItYW5pbSB7XG4gICAgZnJvbSB7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDA7XG4gICAgfVxuXG4gICAgdG8ge1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMTAwMDAwcHggMDtcbiAgICB9XG4gIH1cblxuICAuYmFyIHNwYW4ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGhlaWdodDogM3B4O1xuICAgIHdpZHRoOiAwO1xuICAgIGJhY2tncm91bmQ6ICRjLWdvb2Q7XG4gICAgdHJhbnNpdGlvbjogd2lkdGggMXM7XG5cbiAgICAmLnRocmVhdCB7XG4gICAgICBiYWNrZ3JvdW5kOiAkYy1iYWQ7XG4gICAgfVxuICB9XG5cbiAgJi5jb21wdXRpbmcgLmJhciBzcGFuIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBpbWctdXJsKCdiYXItaGlnaGxpZ2h0LnBuZycpO1xuICAgIGFuaW1hdGlvbjogYmFyLWFuaW0gMTAwMHMgbGluZWFyIGluZmluaXRlO1xuICB9XG5cbiAgLnNob3ctdGhyZWF0IHtcbiAgICBmbGV4OiAwIDk5IGF1dG87XG4gICAgbGluZS1oZWlnaHQ6IDM4cHg7XG4gICAgY29sb3I6ICRjLWZvbnQtZGltO1xuICAgIGZvbnQtc2l6ZTogMC45ZW07XG4gICAgcGFkZGluZy1yaWdodDogMC41ZW07XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG5cbiAgICAmOmhvdmVyOm5vdCguaGlkZGVuKSxcbiAgICAmLmFjdGl2ZSB7XG4gICAgICBjb2xvcjogJGMtcmVkO1xuICAgIH1cblxuICAgICYuaGlkZGVuIHtcbiAgICAgIG9wYWNpdHk6IDAuMztcbiAgICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICB9XG4gIH1cbn1cbiIsIi5wdl9ib3gge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQ6ICRjLWJnLWJveDtcbiAgZm9udC1zaXplOiAxM3B4O1xuXG4gIC5wdiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIGxpbmUtaGVpZ2h0OiAyZW07XG4gICAgYm9yZGVyLXRvcDogJGJvcmRlcjtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxNHB4O1xuXG4gICAgJi5wdi0tbm93cmFwIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyAvLyBcImZsZXhcIiBkb2Vzbid0IHN1cHBvcnQgZWxsaXBzaXMgc28gc3dpdGNoIGJhY2sgdG8gXCJibG9ja1wiXG4gICAgICBmbGV4LXdyYXA6IGluaXRpYWw7XG4gICAgICBoZWlnaHQ6IDJlbTtcbiAgICAgIEBleHRlbmQgJW5vd3JhcC1lbGxpcHNpcztcbiAgICB9XG5cbiAgICAmW2RhdGEtdWNpXTpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kOiBtaXgoJGMtc2Vjb25kYXJ5LCAkYy1iZy1ib3gsIDIwJSk7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgfVxuXG4gICAgc3Ryb25nIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHdpZHRoOiAzNHB4O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIH1cblxuICAgIHNwYW4ge1xuICAgICAgQGV4dGVuZCAlc2FuO1xuXG4gICAgICBtYXJnaW4tbGVmdDogNHB4O1xuICAgIH1cblxuICAgICZbZGF0YS11Y2ldIC5wdi1zYW46aG92ZXIge1xuICAgICAgY29sb3I6ICRjLXByaW1hcnk7XG4gICAgfVxuXG4gICAgLnB2LXdyYXAtdG9nZ2xlIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHJpZ2h0OiAwO1xuICAgICAgcGFkZGluZzogMCA0cHg7XG4gICAgICBtYXJnaW46IDA7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICB0b3A6IDJweDtcblxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQ6ICRjLXNlY29uZGFyeTtcbiAgICAgICAgY29sb3I6ICRjLXNlY29uZGFyeS1vdmVyO1xuICAgICAgfVxuICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogJ+KvhSc7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJi5wdi0tbm93cmFwIC5wdi13cmFwLXRvZ2dsZSB7XG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xuICAgIH1cbiAgfVxuXG4gIC5wdi1ib2FyZCB7XG4gICAgQGV4dGVuZCAlcG9wdXAtc2hhZG93O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogODAlO1xuICAgIGxlZnQ6IDM0cHg7XG4gICAgbWF4LXdpZHRoOiAyNDBweDtcbiAgICB6LWluZGV4OiAxO1xuXG4gICAgLnB2LWJvYXJkLXNxdWFyZSB7XG4gICAgICBAZXh0ZW5kICVzcXVhcmU7XG5cbiAgICAgIC5jZy13cmFwIHtcbiAgICAgICAgQGV4dGVuZCAlYWJzLTEwMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIm1haW4ge1xuICBAaW5jbHVkZSBmbHVpZC1zaXplKCctLWdhdWdlLWdhcCcsIDhweCwgMTdweCk7XG59XG5cbi5ldmFsLWdhdWdlIHtcbiAgd2lkdGg6IHZhcigtLWdhdWdlLWdhcCk7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYmFja2dyb3VuZDogaWYoJHRoZW1lLWxpZ2h0LCAjZmZmLCAjYTBhMGEwKTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICBAaW5jbHVkZSBicmVha3BvaW50KCRtcS1jb2wxLXVuaWJvYXJkKSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gICYucmV2ZXJzZSB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGVYKDE4MGRlZyk7XG4gIH1cblxuICAmOjphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICBib3gtc2hhZG93OiAwIDAgNXB4IHJnYmEoMCwgMCwgMCwgMC43KSBpbnNldDtcbiAgfVxuXG4gIHRpY2sge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBib3JkZXItYm90dG9tOiAycHggcmlkZ2UgaWYoJHRoZW1lLWxpZ2h0LCAjZWVlLCAjYTBhMGEwKTtcbiAgICBvcGFjaXR5OiAwLjQ7XG4gIH1cblxuICB0aWNrLnplcm8ge1xuICAgIHRvcDogNnB4O1xuICAgIG9wYWNpdHk6IDE7XG4gICAgYm9yZGVyLWJvdHRvbTogN3B4IHNvbGlkIGZhZGUtb3V0KCRjLWFjY2VudCwgMC42KTtcbiAgICBtYXJnaW4tdG9wOiAtM3B4O1xuICB9XG5cbiAgLmJsYWNrIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDUwJTtcbiAgICBiYWNrZ3JvdW5kOiBpZigkdGhlbWUtbGlnaHQsICM4ODgsICM2NjYpO1xuICAgIHRyYW5zaXRpb246IGhlaWdodCAxcztcbiAgfVxufVxuIiwiLmFuYWx5c2UtY29udHJvbHMge1xuICBAZXh0ZW5kICVkb3VibGUtdGFwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xuICBmb250LXNpemU6IDEuM3JlbTtcblxuICAuZmJ0IHtcbiAgICBAZXh0ZW5kICVib3gtcmFkaXVzLWJvdHRvbTtcblxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuXG4gIC5oaWRkZW4ge1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgfVxuXG4gIC5qdW1wcyB7XG4gICAgZGlzcGxheTogZmxleDtcblxuICAgIC5mYnQge1xuICAgICAgZmxleDogMSAxIDMwJTtcblxuICAgICAgJjpmaXJzdC1jaGlsZCxcbiAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgIGZsZXg6IDEgMSAyMCU7XG4gICAgICAgIGZvbnQtc2l6ZTogMC43ZW07XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIjcHJvbW90aW9uLWNob2ljZSB7XG4gIEBleHRlbmQgJWFicy0xMDA7XG5cbiAgYmFja2dyb3VuZDogZmFkZS1vdXQoJGMtYmctcGFnZSwgMC4zKTtcbiAgei1pbmRleDogeignY2dfX3Byb21vdGlvbicpO1xuXG4gIHNxdWFyZSB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjBiMGIwO1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAyNXB4IDNweCAjODA4MDgwO1xuXG4gICAgQGluY2x1ZGUgdHJhbnNpdGlvbjtcbiAgfVxuXG4gIHBpZWNlIHtcbiAgICBwb2ludGVyLWV2ZW50czogYXV0bztcbiAgICBvcGFjaXR5OiAxO1xuXG4gICAgLyogY2FuY2VscyBibGluZGZvbGQgKi9cbiAgfVxuXG4gIC5pczJkICYgcGllY2Uge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcblxuICAgIEBpbmNsdWRlIHRyYW5zaXRpb247XG5cbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOCk7XG4gIH1cblxuICBzcXVhcmU6aG92ZXIge1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCA0OHB4IDhweCAkYy1hY2NlbnQ7XG4gICAgYm9yZGVyLXJhZGl1czogMCU7XG4gIH1cblxuICAuaXMyZCAmIHNxdWFyZTpob3ZlciBwaWVjZSB7XG4gICAgdHJhbnNmb3JtOiBub25lO1xuICB9XG59XG4iLCIudmFyaWFudC1yYWNpbmdLaW5ncyAuY2ctd3JhcCB7XG4gICYuY2ctd3JhcCBjZy1jb250YWluZXI6OmJlZm9yZSB7XG4gICAgQGV4dGVuZCAlcG9wdXAtc2hhZG93O1xuXG4gICAgYmFja2dyb3VuZDogaHNsYSgwLCAwJSwgOTAlLCAwLjIpO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTIuNSU7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgei1pbmRleDogMTtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgfVxuXG4gICYub3JpZW50YXRpb24td2hpdGUgY2ctY29udGFpbmVyOjpiZWZvcmUge1xuICAgIHRvcDogMDtcbiAgfVxuXG4gICYub3JpZW50YXRpb24tYmxhY2sgY2ctY29udGFpbmVyOjpiZWZvcmUge1xuICAgIGJvdHRvbTogMDtcbiAgfVxufVxuXG4udmFyaWFudC1raW5nT2ZUaGVIaWxsIGNnLWNvbnRhaW5lcjo6YmVmb3JlIHtcbiAgd2lkdGg6IDI1JTtcbiAgaGVpZ2h0OiAyNSU7XG4gIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC43KTtcbiAgYmFja2dyb3VuZDogaHNsYSgwLCAwJSwgOTAlLCAwLjIpO1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDM3LjUlO1xuICBsZWZ0OiAzNy41JTtcbiAgei1pbmRleDogMTtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG4iLCJAaW1wb3J0ICcuLi9hbmFseXNlLmJhc2UnO1xuQGltcG9ydCAnLi4vc3R1ZHkvZGVzYyc7XG5AaW1wb3J0ICcuLi9zdHVkeS9wbGF5ZXInO1xuQGltcG9ydCAnLi4vLi4vLi4vc2l0ZS9jc3MvcHJhY3RpY2UvaWNvbnMnO1xuQGltcG9ydCAnbGF5b3V0JztcbkBpbXBvcnQgJ3NpZGUnO1xuQGltcG9ydCAndW5kZXJib2FyZCc7XG4iLCJAaW1wb3J0ICd2YXJpYWJsZXMnO1xuXG4lYm9yZGVyLWJvdHRvbS1hY3RpdmUge1xuICBib3JkZXItYm90dG9tOiAkYm9yZGVyO1xuXG4gIEBpbmNsdWRlIGJyZWFrcG9pbnQoJG1xLWNvbDIpIHtcbiAgICBib3JkZXItYm90dG9tOiAzcHggc29saWQgJGMtc2Vjb25kYXJ5O1xuICB9XG59XG5cbkBpbXBvcnQgJ2xheW91dCc7XG5AaW1wb3J0ICd0b29scyc7XG5AaW1wb3J0ICdhY3Rpb24tbWVudSc7XG5AaW1wb3J0ICdleHBsb3Jlcic7XG5AaW1wb3J0ICd0cmFpbmluZyc7XG5AaW1wb3J0ICdwcmFjdGljZSc7XG5AaW1wb3J0ICdmb3JrJztcbkBpbXBvcnQgJ3NpZGUnO1xuQGltcG9ydCAnY29udGV4dC1tZW51JztcblxuLy8gQGltcG9ydCAnc2lkZS1jbG9jayc7XG4iLCIkbXEtY29sMTogJG1xLWNvbDEtdW5pYm9hcmQ7XG4kbXEtY29sMjogJG1xLWNvbDItdW5pYm9hcmQ7XG4kbXEtY29sMzogJG1xLWNvbDMtdW5pYm9hcmQ7XG5cbiRtZXRhLWhlaWdodDogdmFyKC0tbWV0YS1oZWlnaHQpO1xuJGNoYXQtaGVpZ2h0OiBmaXQtY29udGVudCgwKTtcbiIsImJvZHkge1xuICAvKiBwcmV2ZW50cyBzY3JvbGwgYmFyIGZsaWNrZXIgb24gcGFnZSBoZWlnaHQgY2hhbmdlcyAqL1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG59XG5cbiNtYWluLXdyYXAge1xuICAtLW1haW4tbWF4LXdpZHRoOiBjYWxjKDEwMHZoIC0gI3skc2l0ZS1oZWFkZXItb3V0ZXItaGVpZ2h0fSAtICN7JGNvbDEtdW5pYm9hcmQtY29udHJvbHN9KTtcblxuICBAaW5jbHVkZSBicmVha3BvaW50KCRtcS1jb2wyKSB7XG4gICAgLS1tYWluLW1heC13aWR0aDogYXV0bztcbiAgfVxufVxuXG4uYW5hbHlzZSB7XG4gIGdyaWQtYXJlYTogbWFpbjtcbiAgZGlzcGxheTogZ3JpZDtcblxuICAmX19zaWRlIHtcbiAgICBncmlkLWFyZWE6IHNpZGU7XG4gICAganVzdGlmeS1jb250ZW50OiBzdGFydDtcbiAgICBtYXJnaW46ICRibG9jay1nYXA7XG4gIH1cblxuICAmX19ib2FyZCxcbiAgLnJlbGF5LXRvdXIge1xuICAgIGdyaWQtYXJlYTogYm9hcmQ7XG4gIH1cblxuICAmX190b29scyB7XG4gICAgZ3JpZC1hcmVhOiB0b29scztcbiAgfVxuXG4gICZfX2NvbnRyb2xzIHtcbiAgICBncmlkLWFyZWE6IGNvbnRyb2xzO1xuICB9XG5cbiAgJl9fdW5kZXJib2FyZCB7XG4gICAgZ3JpZC1hcmVhOiB1bmRlcjtcblxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJG1xLWNvbDEtdW5pYm9hcmQpIHtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgICAgIC8vIGhlbHBzIHRydW5jYXRpbmcgbG9uZyBzdHVkeSBuYW1lc1xuICAgIH1cbiAgfVxuXG4gICZfX2FjcGwge1xuICAgIGdyaWQtYXJlYTogYWNwbDtcbiAgfVxuXG4gIC5jaGF0X19tZW1iZXJzIHtcbiAgICBncmlkLWFyZWE6IHVjaGF0O1xuICB9XG5cbiAgLmV2YWwtZ2F1Z2Uge1xuICAgIGdyaWQtYXJlYTogZ2F1Z2U7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gIC0tbWV0YS1oZWlnaHQ6IGF1dG87XG5cbiAgQGluY2x1ZGUgcHJvcGVyLWdyaWQge1xuICAgIC0tbWV0YS1oZWlnaHQ6IG1heC1jb250ZW50O1xuICB9XG5cbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIGF1dG8gbWlubWF4KDIwZW0sIDMwdmgpO1xuICBncmlkLXRlbXBsYXRlLWFyZWFzOiAnYm9hcmQnICdjb250cm9scycgJ3Rvb2xzJyAnc2lkZScgJ2FjcGwnICd1bmRlcicgJ2NoYXQnICd1Y2hhdCc7XG5cbiAgQGluY2x1ZGUgYnJlYWtwb2ludCgkbXEtY29sMikge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogJGNvbDItdW5pYm9hcmQtd2lkdGggdmFyKC0tZ2F1Z2UtZ2FwKSAkY29sMi11bmlib2FyZC10YWJsZTtcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGZpdC1jb250ZW50KDApO1xuICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6ICdib2FyZCAgICAgIGdhdWdlIHRvb2xzJyAndW5kZXIgICAgICAuICAgICBjb250cm9scycgJ3VuZGVyICAgICAgLiAgICAgYWNwbCcgJ3VuZGVyICAgICAgLiAgICAgc2lkZScgJ2NoYXQgICAgICAgLiAgICAgc2lkZScgJ3VjaGF0ICAgICAgLiAgICAgc2lkZSc7XG4gICAgZ3JpZC1yb3ctZ2FwOiAwO1xuXG4gICAgJl9fc2lkZSxcbiAgICAuY2hhdF9fbWVtYmVycyxcbiAgICAubWNoYXQge1xuICAgICAgbWFyZ2luOiAkYmxvY2stZ2FwIDAgMCAwO1xuICAgIH1cblxuICAgICZfX3VuZGVyYm9hcmQge1xuICAgICAgbWFyZ2luLXRvcDogJGJsb2NrLWdhcDtcbiAgICB9XG5cbiAgICAuZXZhbC1nYXVnZSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG4gIH1cblxuICBAaW5jbHVkZSBicmVha3BvaW50KCRtcS1jb2wyLXVuaWJvYXJkLXNxdWVlemUpIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6ICRjb2wyLXVuaWJvYXJkLXNxdWVlemUtd2lkdGggdmFyKC0tZ2F1Z2UtZ2FwKSAkY29sMi11bmlib2FyZC1zcXVlZXplLXRhYmxlO1xuICB9XG5cbiAgQGluY2x1ZGUgYnJlYWtwb2ludCgkbXEtY29sMykge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogJGNvbDMtdW5pYm9hcmQtc2lkZSAkYmxvY2stZ2FwICRjb2wzLXVuaWJvYXJkLXdpZHRoIHZhcigtLWdhdWdlLWdhcCkgJGNvbDMtdW5pYm9hcmQtdGFibGU7XG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAkbWV0YS1oZWlnaHQgJGNoYXQtaGVpZ2h0IDIuNWVtIGF1dG87XG4gICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogJ3NpZGUgICAgLiBib2FyZCBnYXVnZSB0b29scycgJ2NoYXQgICAgLiBib2FyZCBnYXVnZSB0b29scycgJ3VjaGF0ICAgLiB1bmRlciAuICAgICBjb250cm9scycgJ3VjaGF0ICAgLiB1bmRlciAuICAgICBhY3BsJztcblxuICAgICZfX3NpZGUge1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICB9XG5cbiAgICAubWNoYXQge1xuICAgICAgbWluLWhlaWdodDogMTBlbTtcbiAgICB9XG5cbiAgICBAaW5jbHVkZSBjcm9zc3RhYmxlLWxhcmdlO1xuICB9XG59XG4iLCIuYW5hbHlzZSB7XG4gICZfX3Rvb2xzIHtcbiAgICBAZXh0ZW5kICVib3gtbmVhdC1mb3JjZSwgJWZsZXgtY29sdW1uO1xuXG4gICAgYmFja2dyb3VuZDogJGMtYmctYm94O1xuXG4gICAgLmNldmFsIHtcbiAgICAgIGZsZXg6IDAgMCAzOHB4O1xuICAgIH1cblxuICAgIC5zdWItYm94IHtcbiAgICAgIEBleHRlbmQgJWJvcmRlci1ib3R0b20tYWN0aXZlO1xuXG4gICAgICB1c2VyLXNlbGVjdDogbm9uZTtcblxuICAgICAgLnRpdGxlIHtcbiAgICAgICAgZm9udC1zaXplOiAwLjlyZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjllbTtcbiAgICAgICAgYmFja2dyb3VuZDogbWl4KCRjLXNlY29uZGFyeSwgJGMtYmctYm94LCA0MCUpO1xuICAgICAgICBwYWRkaW5nOiAwIDdweDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAmX19tb3ZlcyB7XG4gICAgZmxleDogMiAxIDA7XG5cbiAgICAvLyAwIHNpemUgZm9yY2VzIHZlcnRpY2FsIHNjcm9sbGJhclxuICAgIG92ZXJmbG93LXk6IGF1dG87XG4gICAgb3ZlcmZsb3cteDogaGlkZGVuO1xuXG4gICAgLy8gZWxzZSBhIHNjcm9sbGJhciBhcHBlYXJzIHNvbWV0aW1lc1xuICAgIGJvcmRlci10b3A6ICRib3JkZXI7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgLyogcmVxdWlyZWQgc28gbGluZTo6YmVmb3JlIHNjcm9sbHMgYWxvbmcgdGhlIG1vdmVzISAqL1xuICAgIC5yZXN1bHQsXG4gICAgLnN0YXR1cyB7XG4gICAgICBiYWNrZ3JvdW5kOiAkYy1iZy16ZWJyYTtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG5cbiAgICAucmVzdWx0IHtcbiAgICAgIGJvcmRlci10b3A6ICRib3JkZXI7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIGZvbnQtc2l6ZTogMS4yZW07XG4gICAgICBwYWRkaW5nOiA1cHggMCAzcHggMDtcbiAgICB9XG5cbiAgICAuc3RhdHVzIHtcbiAgICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgICAgcGFkZGluZy1ib3R0b206IDdweDtcbiAgICB9XG4gIH1cblxuICAmX19jb250cm9scyB7XG4gICAgaGVpZ2h0OiAkY29sMy11bmlib2FyZC1jb250cm9scztcbiAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcblxuICAgIGRpdiB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleDogMSAxIGF1dG87XG4gICAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcbiAgICB9XG5cbiAgICAuanVtcHMge1xuICAgICAgZmxleDogMyAxIGF1dG87XG4gICAgfVxuXG4gICAgLmZidCB7XG4gICAgICBAZXh0ZW5kICVwYWdlLXRleHQ7XG5cbiAgICAgIGZsZXg6IDAgMCAyLjVyZW07XG4gICAgfVxuXG4gICAgLmFjdGl2ZSB7XG4gICAgICBtYXJnaW4tdG9wOiAtM3B4O1xuICAgICAgcGFkZGluZy10b3A6IDNweDtcbiAgICB9XG5cbiAgICA6OmJlZm9yZSB7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgIH1cbiAgfVxufVxuIiwiLmFjdGlvbi1tZW51IHtcbiAgQGV4dGVuZCAlYm9yZGVyLWJvdHRvbS1hY3RpdmU7XG5cbiAgZmxleDogMSAxIDA7XG5cbiAgLy8gMCBzaXplIGZvcmNlcyB2ZXJ0aWNhbCBzY3JvbGxiYXJcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiBjb2x1bW47XG4gIG92ZXJmbG93OiBhdXRvO1xuICBwYWRkaW5nOiAkYmxvY2stZ2FwO1xuXG4gIGgyIHtcbiAgICBmb250LXNpemU6IDFlbTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIG1hcmdpbjogJGJsb2NrLWdhcCAwIDNweCAwO1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIHBhZGRpbmc6IDAgMTBweDtcblxuICAgICY6YmVmb3JlLFxuICAgICY6YWZ0ZXIge1xuICAgICAgYm9yZGVyLXRvcDogJGJvcmRlcjtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHRvcDogMC41ZW07XG4gICAgICB3aWR0aDogNDUlO1xuICAgIH1cblxuICAgICY6YmVmb3JlIHtcbiAgICAgIHJpZ2h0OiA4cHg7XG4gICAgfVxuXG4gICAgJjphZnRlciB7XG4gICAgICBsZWZ0OiA4cHg7XG4gICAgfVxuICB9XG5cbiAgJl9fdG9vbHMge1xuICAgIGZsZXg6IDAgMCBhdXRvO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiByb3cgd3JhcDtcblxuICAgID4gKiB7XG4gICAgICBAZXh0ZW5kICVmbGV4LWNvbHVtbjtcblxuICAgICAgZmxleDogMCAwIDUwJTtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIHBhZGRpbmc6IDA7XG4gICAgICBoZWlnaHQ6IDc1cHg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB9XG5cbiAgICAuYnV0dG9uIHtcbiAgICAgIGNvbG9yOiAkYy1mb250O1xuICAgICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gICAgICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuXG4gICAgICAmOjpiZWZvcmUge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgZm9udC1zaXplOiAyZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxZW07XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDVweDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAuYXV0b3BsYXkge1xuICAgIGRpc3BsYXk6IGZsZXg7XG5cbiAgICBhIHtcbiAgICAgIGNvbG9yOiAkYy1mb250LWRpbTtcbiAgICAgIGZvbnQtc2l6ZTogMC45ZW07XG4gICAgICBmbGV4OiAxIDEgYXV0bztcbiAgICAgIHBhZGRpbmc6IDdweCAwO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIH1cbiAgfVxuXG4gIGZvcm0uZGVsZXRlIHtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICBtYXJnaW4tdG9wOiA2cHg7XG5cbiAgICAuYnV0dG9uIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHBhZGRpbmc6IDAgOHB4O1xuICAgIH1cblxuICAgIC5idXR0b246OmJlZm9yZSB7XG4gICAgICBmb250LXNpemU6IDEuMmVtO1xuICAgIH1cbiAgfVxuXG4gIC5zZXR0aW5nIHtcbiAgICBmbGV4OiAwIDAgYXV0bztcbiAgICBtYXJnaW4tdG9wOiAkYmxvY2stZ2FwO1xuICAgIGRpc3BsYXk6IGZsZXg7XG5cbiAgICBsYWJlbCB7XG4gICAgICBmbGV4OiA0IDEgYXV0bztcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgfVxuXG4gICAgaW5wdXRbdHlwZT0ncmFuZ2UnXSB7XG4gICAgICBmbGV4OiAxIDQgYXV0bztcbiAgICAgIHBhZGRpbmc6IDAgMCAwIDFlbTtcbiAgICAgIGhlaWdodDogMS42ZW07XG4gICAgICB3aWR0aDogMTAwJTtcblxuICAgICAgJlttaW49JzAnXSB7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLnJhbmdlX3ZhbHVlIHtcbiAgICAgIGZsZXg6IDAgMCBhdXRvO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICB9XG4gIH1cblxuICBAaW5jbHVkZSBicmVha3BvaW50KCRtcS1jb2wxKSB7XG4gICAgLmFic2V0LWlubGluZSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cblxuICAgIC8vIGZvcmNlIGlubGluZSBvbiBtb2JpbGVcbiAgfVxufVxuIiwiLmV4cGxvcmVyLWJveCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZmxleDogMi41IDEgMHB4O1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuXG4gIEBpbmNsdWRlIHRyYW5zaXRpb247XG5cbiAgdHJhbnNpdGlvbi1kZWxheTogMC4zcztcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICBmb250LXNpemU6IDAuOWVtO1xuXG4gICYucmVkdWNlZCB7XG4gICAgZmxleDogMC4zIDMgMHB4O1xuXG4gICAgJjpob3ZlciB7XG4gICAgICBmbGV4OiAxIDIgMHB4O1xuICAgIH1cbiAgfVxuXG4gIC5vdmVybGF5IHtcbiAgICBAZXh0ZW5kICVsaW5rLW92ZXJsYXk7XG5cbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgJi5sb2FkaW5nIC5vdmVybGF5IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gIHRib2R5IHtcbiAgICBAaW5jbHVkZSB0cmFuc2l0aW9uO1xuICB9XG5cbiAgJi5sb2FkaW5nIHRib2R5IHtcbiAgICBvcGFjaXR5OiAwLjQ7XG4gIH1cblxuICAudGl0bGUgc3BhbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luLXJpZ2h0OiAxLjllbTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgIHVzZXItc2VsZWN0OiB0ZXh0O1xuICB9XG5cbiAgLmVtcHR5IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogY29sdW1uO1xuICAgIGhlaWdodDogMTAwJTtcblxuICAgIC5tZXNzYWdlIHtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG4gIH1cblxuICB0ciB7XG4gICAgQGluY2x1ZGUgdHJhbnNpdGlvbjtcblxuICAgICY6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgICAgIGJhY2tncm91bmQ6ICRjLWJnLXplYnJhO1xuICAgIH1cblxuICAgICY6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZDogbWl4KCRjLXNlY29uZGFyeSwgJGMtYmctYm94LCAyMCUpO1xuICAgIH1cbiAgfVxuXG4gIHRkIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgcGFkZGluZy1sZWZ0OiA3cHg7XG4gIH1cblxuICAubW92ZXMgdGQ6Zmlyc3QtY2hpbGQge1xuICAgIEBleHRlbmQgJXNhbjtcblxuICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xuICAgIHBhZGRpbmctbGVmdDogN3B4O1xuICB9XG5cbiAgLm1vdmVzIHRkOm50aC1jaGlsZCgyKSB7XG4gICAgZm9udC1zaXplOiAwLjc1ZW07XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIH1cblxuICAubW92ZXMgdGQ6bGFzdC1jaGlsZCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZy1yaWdodDogN3B4O1xuICB9XG5cbiAgLmJhciBzcGFuIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICBib3JkZXI6IDAgc29saWQgJGMtYm9yZGVyO1xuICAgIGJvcmRlci13aWR0aDogMXB4IDA7XG4gICAgaGVpZ2h0OiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNHB4O1xuICAgIGZvbnQtc2l6ZTogMC45ZW07XG4gIH1cblxuICAud2hpdGUge1xuICAgIGJhY2tncm91bmQ6IGlmKCR0aGVtZS1saWdodCwgI2ZmZiwgI2NjYyk7XG4gICAgYm94LXNoYWRvdzogMCAtNXB4IDdweCByZ2JhKDAsIDAsIDAsIGlmKCR0aGVtZS1saWdodCwgMC4xLCAwLjI1KSkgaW5zZXQ7XG5cbiAgICBAaWYgJHRoZW1lLWRhcmsge1xuICAgICAgY29sb3I6ICMyMjI7XG4gICAgfVxuICB9XG5cbiAgLmRyYXdzLFxuICAuYmxhY2sge1xuICAgIGNvbG9yOiBpZigkdGhlbWUtbGlnaHQsICNmZmYsICNkZGQpO1xuICAgIGJveC1zaGFkb3c6IDAgNXB4IDdweCByZ2JhKDI1NSwgMjU1LCAyNTUsIGlmKCR0aGVtZS1saWdodCwgMC4yLCAwLjEpKSBpbnNldDtcbiAgfVxuXG4gIC5kcmF3cyB7XG4gICAgYmFja2dyb3VuZDogaWYoJHRoZW1lLWxpZ2h0LCAjYTBhMGEwLCAjNjY2KTtcbiAgfVxuXG4gIC5ibGFjayB7XG4gICAgYmFja2dyb3VuZDogaWYoJHRoZW1lLWxpZ2h0LCAjNTU1LCAjMzMzKTtcbiAgICBjb2xvcjogI2RkZDtcbiAgfVxuXG4gIC5iYXIgc3BhbjpmaXJzdC1jaGlsZCB7XG4gICAgQGV4dGVuZCAlYm94LXJhZGl1cy1sZWZ0O1xuXG4gICAgYm9yZGVyLWxlZnQtd2lkdGg6IDFweDtcbiAgfVxuXG4gIC5iYXIgc3BhbjpsYXN0LWNoaWxkIHtcbiAgICBAZXh0ZW5kICVib3gtcmFkaXVzLXJpZ2h0O1xuXG4gICAgYm9yZGVyLXJpZ2h0LXdpZHRoOiAxcHg7XG4gIH1cblxuICAuZ2FtZXMge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG5cbiAgLmdhbWVzIHRkIHtcbiAgICBwYWRkaW5nOiA1cHggMCA1cHggN3B4O1xuICAgIG1heC13aWR0aDogMTEwcHg7XG4gIH1cblxuICAuZ2FtZXMgdGQgc3BhbiB7XG4gICAgQGV4dGVuZCAlZWxsaXBzaXM7XG5cbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gIC5nYW1lcyByZXN1bHQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAzcHggNXB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICBmb250LXNpemU6IDAuOWVtO1xuICB9XG5cbiAgLmdhbWVfbWVudSB7XG4gICAgYmFja2dyb3VuZDogJGMtc2Vjb25kYXJ5O1xuICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICBwYWRkaW5nOiAwO1xuXG4gICAgLmdhbWVfdGl0bGUge1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgY29sb3I6ICRjLXNlY29uZGFyeS1vdmVyO1xuICAgICAgbWFyZ2luOiAzcHggMCAxcHggMDtcbiAgICB9XG5cbiAgICAubWVudSB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcblxuICAgICAgYSB7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICBwYWRkaW5nOiA0cHggOHB4O1xuICAgICAgfVxuXG4gICAgICBhOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC50YWJsZWJhc2Uge1xuICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgdGQ6Zmlyc3QtY2hpbGQge1xuICAgICAgQGV4dGVuZCAlc2FuO1xuXG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICBsaW5lLWhlaWdodDogMzBweDtcbiAgICAgIHBhZGRpbmctbGVmdDogN3B4O1xuICAgIH1cblxuICAgIHRkOmxhc3QtY2hpbGQge1xuICAgICAgcGFkZGluZy1yaWdodDogN3B4O1xuICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgfVxuXG4gICAgcmVzdWx0IHtcbiAgICAgIHBhZGRpbmc6IDNweCA1cHg7XG4gICAgICBtYXJnaW4tbGVmdDogNXB4O1xuICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgICAgZm9udC1zaXplOiAwLjllbTtcbiAgICB9XG4gIH1cblxuICAudG9jb25mIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6IDEuMmVtO1xuICAgIHdpZHRoOiAxLjVlbTtcbiAgICBsaW5lLWhlaWdodDogMS41ZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG9wYWNpdHk6IDAuODtcblxuICAgICY6aG92ZXIge1xuICAgICAgb3BhY2l0eTogMTtcbiAgICB9XG4gIH1cblxuICAubWVzc2FnZSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICBmbGV4OiAxIDEgMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB9XG5cbiAgJi5yZWR1Y2VkIC5tZXNzYWdlIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIH1cblxuICAubWVzc2FnZSBzdHJvbmcge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIG1hcmdpbjogMWVtIDA7XG4gIH1cblxuICAmOm5vdCgucmVkdWNlZCkgLm1lc3NhZ2UgaDMsXG4gICYucmVkdWNlZDpob3ZlciAubWVzc2FnZSBoMyB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cblxuICAubWVzc2FnZSBwIHtcbiAgICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAgIHBhZGRpbmc6IDAgOHB4O1xuICAgIG1hcmdpbjogMCAwIDhweCAwO1xuICB9XG5cbiAgJi5yZWR1Y2VkIC5tZXNzYWdlIHAsXG4gICYucmVkdWNlZCAubWVzc2FnZSBidXR0b24ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICAmLnJlZHVjZWQ6aG92ZXIgLm1lc3NhZ2UgcCxcbiAgJi5yZWR1Y2VkOmhvdmVyIC5tZXNzYWdlIGJ1dHRvbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cblxuICAubWVzc2FnZSBidXR0b24ge1xuICAgIG1hcmdpbjogMCAzMHB4O1xuICB9XG5cbiAgLm1lc3NhZ2UubWFzdGVycyBpIHtcbiAgICBmb250LXNpemU6IDQwcHg7XG4gICAgbWFyZ2luOiAxMHB4IDA7XG4gIH1cblxuICAuY29uZmlnIHtcbiAgICBzZWN0aW9uIHtcbiAgICAgIG1hcmdpbjogMC40ZW0gJGJsb2NrLWdhcCAwICRibG9jay1nYXA7XG4gICAgfVxuXG4gICAgc2VjdGlvbi5zYXZlIHtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIHBhZGRpbmc6IDE1cHggMCAxMHB4IDA7XG4gICAgfVxuXG4gICAgbGFiZWwge1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGxpbmUtaGVpZ2h0OiAyZW07XG4gICAgfVxuXG4gICAgLmNob2ljZXMge1xuICAgICAgZGlzcGxheTogZmxleDtcblxuICAgICAgc3BhbiB7XG4gICAgICAgIGZsZXgtZ3JvdzogMTtcbiAgICAgICAgcGFkZGluZzogNXB4IDA7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb247XG5cbiAgICAgICAgYm9yZGVyOiAkYm9yZGVyO1xuICAgICAgICBib3JkZXItd2lkdGg6IDFweCAwIDFweCAxcHg7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuXG4gICAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgIEBleHRlbmQgJWJveC1yYWRpdXMtbGVmdDtcbiAgICAgICAgfVxuXG4gICAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgQGV4dGVuZCAlYm94LXJhZGl1cy1yaWdodDtcblxuICAgICAgICAgIGJvcmRlci1yaWdodC13aWR0aDogMXB4O1xuICAgICAgICB9XG5cbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICAgICAgfVxuXG4gICAgICAgICYuc2VsZWN0ZWQge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICRjLXNlY29uZGFyeTtcbiAgICAgICAgICBjb2xvcjogJGMtc2Vjb25kYXJ5LW92ZXI7XG4gICAgICAgICAgdGV4dC1zaGFkb3c6IDFweCAwIDAgcmdiYSgwLCAwLCAwLCAwLjUpO1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICAgIGJveC1zaGFkb3c6IDAgM3B4IDVweCByZ2JhKDAsIDAsIDAsIDAuMikgaW5zZXQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi50cmFpbmluZy1ib3gge1xuICBAZXh0ZW5kICVmbGV4LWNvbHVtbjtcblxuICBmbGV4OiAxLjUgMSAwcHg7XG5cbiAgLmZlZWRiYWNrIHtcbiAgICBmbGV4OiAxIDEgMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB9XG5cbiAgLnByb2dyZXNzIHtcbiAgICBtYXJnaW4tdG9wOiA1cHg7XG4gICAgb3BhY2l0eTogMC44O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogNHB4O1xuICAgIGJhY2tncm91bmQ6ICRjLXNoYWRlO1xuICB9XG5cbiAgLnByb2dyZXNzIGRpdiB7XG4gICAgYmFja2dyb3VuZDogJGMtZ29vZDtcbiAgICBoZWlnaHQ6IDRweDtcbiAgICB0cmFuc2l0aW9uOiB3aWR0aCAwLjVzO1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgfVxuXG4gIC5wbGF5ZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgfVxuXG4gIC5uby1zcXVhcmUge1xuICAgIHdpZHRoOiA2NHB4O1xuICAgIGhlaWdodDogNjRweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gIH1cblxuICAuaXMzZCAmIGRpdi5uby1zcXVhcmUge1xuICAgIGhlaWdodDogODJweDtcbiAgfVxuXG4gIHBpZWNlIHtcbiAgICBwb3NpdGlvbjogaW5oZXJpdDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICAgIGhlaWdodDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLmljb24ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiA2NHB4O1xuICAgIGhlaWdodDogNjRweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gICAgZm9udC1zaXplOiA1MHB4O1xuICAgIGZvbnQtc2l6ZTogNjRweDtcbiAgICBsaW5lLWhlaWdodDogNjRweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cblxuICAuaW5zdHJ1Y3Rpb24gPiAqIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gIC5pbnN0cnVjdGlvbiA+IHN0cm9uZyB7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBmb250LXNpemU6IDEuMmVtO1xuICB9XG5cbiAgLmNob2ljZXMge1xuICAgIGxpbmUtaGVpZ2h0OiAxLjZlbTtcbiAgICBtYXJnaW46IDVweCAwIC01cHggMDtcbiAgfVxuXG4gIC5jaG9pY2VzIGEge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG4iLCIucHJhY3RpY2UtYm94IHtcbiAgZmxleDogMCAwIDEzNXB4O1xuICB1c2VyLXNlbGVjdDogbm9uZTtcblxuICAuY29tbWVudCB7XG4gICAgZmxleDogMCAwIDMwcHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcbiAgICBiYWNrZ3JvdW5kOiAkYy1iZy16ZWJyYTtcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgJGJvcmRlcjtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xuICB9XG5cbiAgLnByb2dyZXNzIGRpdiB7XG4gICAgYmFja2dyb3VuZDogJGMtc2hhZGU7XG4gIH1cblxuICAmLmdvb2RNb3ZlIC5wcm9ncmVzcyBkaXYge1xuICAgIGJhY2tncm91bmQ6ICRjLWdvb2Q7XG4gICAgY29sb3I6ICNmZmY7XG4gIH1cblxuICAmLmluYWNjdXJhY3kgLnRpdGxlLFxuICAmLmluYWNjdXJhY3kgLnByb2dyZXNzIGRpdiB7XG4gICAgYmFja2dyb3VuZDogJGMtYnJhZztcbiAgICBjb2xvcjogI2ZmZjtcbiAgfVxuXG4gICYubWlzdGFrZSAudGl0bGUsXG4gICYuYmx1bmRlciAudGl0bGUsXG4gICYubWlzdGFrZSAucHJvZ3Jlc3MgZGl2LFxuICAmLmJsdW5kZXIgLnByb2dyZXNzIGRpdiB7XG4gICAgYmFja2dyb3VuZDogJGMtYmFkO1xuICAgIGNvbG9yOiAjZmZmO1xuICB9XG5cbiAgLmNvbW1lbnQgLndhaXQge1xuICAgIHBhZGRpbmctbGVmdDogMTVweDtcbiAgfVxuXG4gIC52ZXJkaWN0IHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgfVxuXG4gIC52ZXJkaWN0OjpiZWZvcmUge1xuICAgIHdpZHRoOiAzMHB4O1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBtYXJnaW4tcmlnaHQ6IDdweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZm9udC1zaXplOiAxLjRlbTtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICB9XG5cbiAgJi5nb29kTW92ZSAudmVyZGljdCB7XG4gICAgY29sb3I6ICRjLWdvb2Q7XG4gIH1cblxuICAmLmdvb2RNb3ZlIC52ZXJkaWN0OjpiZWZvcmUge1xuICAgIGJhY2tncm91bmQ6ICRjLWdvb2Q7XG4gICAgY29udGVudDogJ+Kckyc7XG4gICAgZm9udC1zaXplOiAxLjdlbTtcbiAgfVxuXG4gICYuaW5hY2N1cmFjeSAudmVyZGljdCB7XG4gICAgY29sb3I6ICRjLWJyYWc7XG4gIH1cblxuICAmLmluYWNjdXJhY3kgLnZlcmRpY3Q6OmJlZm9yZSB7XG4gICAgYmFja2dyb3VuZDogJGMtYnJhZztcbiAgICBjb250ZW50OiAnPyc7XG4gIH1cblxuICAmLm1pc3Rha2UgLnZlcmRpY3QsXG4gICYuYmx1bmRlciAudmVyZGljdCB7XG4gICAgY29sb3I6ICRjLWJhZDtcbiAgfVxuXG4gICYubWlzdGFrZSAudmVyZGljdDo6YmVmb3JlLFxuICAmLmJsdW5kZXIgLnZlcmRpY3Q6OmJlZm9yZSB7XG4gICAgYmFja2dyb3VuZDogJGMtYmFkO1xuICAgIGNvbnRlbnQ6ICfinJcnO1xuICB9XG5cbiAgLmNvbW1lbnQgbW92ZSB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIG1hcmdpbi1sZWZ0OiA1cHg7XG4gICAgY29sb3I6ICRjLWxpbms7XG4gICAgdHJhbnNpdGlvbjogMC4zcztcbiAgfVxufVxuIiwiJGMtZm9yazogJGMtcHJpbWFyeTtcblxuLmFuYWx5c2VfX2Zvcmsge1xuICBAZXh0ZW5kICVmbGV4LWNlbnRlcjtcblxuICBmbGV4OiAwIDAgYXV0bztcblxuICBAaW5jbHVkZSBicmVha3BvaW50KCRtcS1jb2wxKSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gIG1vdmUge1xuICAgIEBleHRlbmQgJXNhbiwgJWZsZXgtY2VudGVyO1xuXG4gICAgYmFja2dyb3VuZDogbWl4KCRjLWZvcmssICRjLWJnLWJveCwgMjUlKTtcbiAgICBjb2xvcjogJGMtZm9udC1jbGVhcjtcbiAgICBmbGV4OiAwIDAgNTAlO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBwYWRkaW5nOiAwLjJlbSAxZW07XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRjLWJnLWJveDtcblxuICAgICY6bnRoLWNoaWxkKG9kZCkge1xuICAgICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJGMtYmctYm94O1xuICAgIH1cbiAgfVxuXG4gIG1vdmU6aG92ZXIsXG4gICY6bm90KDpob3ZlcikgbW92ZS5zZWxlY3RlZCB7XG4gICAgYmFja2dyb3VuZDogbWl4KCRjLWZvcmssICRjLWJnLWJveCwgMTAwJSk7XG4gICAgY29sb3I6ICNmZmY7XG4gIH1cblxuICBnbHlwaCB7XG4gICAgQGV4dGVuZCAlYmFzZS1mb250O1xuXG4gICAgbWFyZ2luLWxlZnQ6IDJweDtcbiAgfVxuXG4gIGV2YWwge1xuICAgIEBleHRlbmQgJXJvYm90bztcblxuICAgIGZsZXg6IDMgMCBhdXRvO1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgIGZvbnQtc2l6ZTogMC45ZW07XG4gIH1cbn1cbiIsIi5hbmFseXNlX19zaWRlIHtcbiAgYWxpZ24tc2VsZjogc3RhcnQ7XG5cbiAgLmJhY2stdG8tZ2FtZSB7XG4gICAgbWFyZ2luLXRvcDogMmVtO1xuXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkbXEtY29sMykge1xuICAgICAgbWFyZ2luLXRvcDogMTB2aDtcbiAgICB9XG5cbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICAuYnV0dG9uIHtcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIH1cbiAgfVxufVxuIiwiI2FuYWx5c2UtY20ge1xuICBAZXh0ZW5kICVib3gtcmFkaXVzLCAlcG9wdXAtc2hhZG93O1xuXG4gIGJhY2tncm91bmQ6ICRjLWJnLWJveDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBkaXNwbGF5OiBub25lO1xuICB6LWluZGV4OiB6KCdjb250ZXh0LW1lbnUnKTtcbiAgY3Vyc29yOiBkZWZhdWx0O1xuICB1c2VyLXNlbGVjdDogbm9uZTtcblxuICAmLnZpc2libGUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG5cbiAgLnRpdGxlIHtcbiAgICBAZXh0ZW5kICVzYW4sICVtZXRhbDtcblxuICAgIHBhZGRpbmc6IDAuNGVtO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDEuMmVtO1xuICAgIGJvcmRlci1ib3R0b206ICRib3JkZXI7XG4gICAgbWFyZ2luOiAwO1xuICB9XG5cbiAgYSB7XG4gICAgQGV4dGVuZCAlZmxleC1jZW50ZXItbm93cmFwO1xuXG4gICAgY29sb3I6ICRjLWZvbnQ7XG4gICAgcGFkZGluZzogMC41ZW0gMC42ZW0gMC41ZW0gMC4zZW07XG5cbiAgICAmOjpiZWZvcmUge1xuICAgICAgd2lkdGg6IDJlbTtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQ6IG1peCgkYy1hY2NlbnQsICRjLWJnLWJveCwgMTAlKTtcbiAgICB9XG4gIH1cbn1cbiIsIi5zdHVkeS1kZXNjIHtcbiAgQGV4dGVuZCAlYm94LW5lYXQ7XG5cbiAgYmFja2dyb3VuZDogJGMtYmctYm94O1xuICBwYWRkaW5nOiAwLjdlbSAxZW07XG4gIG1hcmdpbi10b3A6IDAuNWVtO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJi5lbXB0eSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gICAgLmJ1dHRvbiB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBtYXJnaW46IDJlbSBhdXRvO1xuICAgIH1cbiAgfVxuXG4gIC5jb250cmliIHtcbiAgICBAZXh0ZW5kICVwb3B1cC1zaGFkb3c7XG5cbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIGJhY2tncm91bmQ6IG1peCgkYy1hY2NlbnQsICRjLWJnLWJveCwgMTAlKTtcbiAgICBwYWRkaW5nOiAwLjVlbSAwLjhlbTtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIHotaW5kZXg6IDE7XG4gIH1cblxuICAmOmhvdmVyIC5jb250cmliIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gIC5jb250cmliIGEge1xuICAgIG1hcmdpbi1sZWZ0OiA4cHg7XG4gIH1cblxuICAuZW1iZWQge1xuICAgIEBleHRlbmQgJXZpZGVvO1xuXG4gICAgd2lkdGg6IGNhbGMoMTAwJSArIDJlbSk7XG4gICAgbWFyZ2luOiAtMC43ZW0gLTFlbTtcbiAgfVxufVxuXG4uc3R1ZHktZGVzYy1mb3JtIHtcbiAgLnRpdGxlIHtcbiAgICBAZXh0ZW5kICVmbGV4LWJldHdlZW47XG5cbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gIHRleHRhcmVhIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEyZW07XG4gIH1cbn1cbiIsIiRwbGF5ZXItaGVpZ2h0OiAxLjZyZW07XG5cbi5hbmFseXNlLmhhcy1wbGF5ZXJzIHtcbiAgY2ctYm9hcmQge1xuICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gIH1cblxuICBAaW5jbHVkZSBicmVha3BvaW50KCRtcS1jb2wyKSB7XG4gICAgLmFuYWx5c2VfX3VuZGVyYm9hcmQge1xuICAgICAgbWFyZ2luLXRvcDogY2FsYygjeyRwbGF5ZXItaGVpZ2h0IC8gMn0gKyAjeyRibG9jay1nYXAgLyAyfSk7XG4gICAgfVxuICB9XG5cbiAgQGluY2x1ZGUgYnJlYWtwb2ludCgkbXEtY29sMSkge1xuICAgIC5hbmFseXNlX19jb250cm9scyB7XG4gICAgICBtYXJnaW4tdG9wOiAkcGxheWVyLWhlaWdodDtcbiAgICB9XG4gIH1cbn1cblxuLnN0dWR5X19wbGF5ZXIge1xuICBAZXh0ZW5kICVmbGV4LWJldHdlZW4tbm93cmFwLCAlbWV0YWwsICVib3gtc2hhZG93O1xuXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBoZWlnaHQ6ICRwbGF5ZXItaGVpZ2h0O1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuXG4gICYtdG9wIHtcbiAgICBAZXh0ZW5kICVib3gtcmFkaXVzLXRvcDtcblxuICAgIHRvcDogI3stJHBsYXllci1oZWlnaHR9O1xuICB9XG5cbiAgJi1ib3Qge1xuICAgIEBleHRlbmQgJWJveC1yYWRpdXMtYm90dG9tO1xuXG4gICAgYm90dG9tOiAjey0kcGxheWVyLWhlaWdodH07XG4gIH1cblxuICAubGVmdCB7XG4gICAgZmxleDogMSAxIDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgfVxuXG4gIC5yZXN1bHQge1xuICAgIGZsZXg6IDAgMCBhdXRvO1xuICAgIG1hcmdpbi1sZWZ0OiAwLjhlbTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwLjhlbTtcbiAgICBib3JkZXItcmlnaHQ6ICRib3JkZXI7XG4gIH1cblxuICAuYW5hbHlzZV9fY2xvY2sge1xuICAgIEBleHRlbmQgJXJvYm90bywgJWZsZXgtY2VudGVyLW5vd3JhcDtcblxuICAgIGFsaWduLXNlbGY6IHN0cmV0Y2g7XG4gICAgZm9udC1zaXplOiAxLjJlbTtcbiAgICBwYWRkaW5nOiAwIDAuOGVtO1xuICAgIGJvcmRlci1yYWRpdXM6IDAgNHB4IDAgMDtcbiAgfVxuXG4gICYtYm90IC5hbmFseXNlX19jbG9jayB7XG4gICAgYm9yZGVyLXJhZGl1czogMCAwIDRweCAwO1xuICB9XG5cbiAgJi50aWNraW5nIC5hbmFseXNlX19jbG9jayB7XG4gICAgYmFja2dyb3VuZDogJGMtc2Vjb25kYXJ5O1xuICAgIGNvbG9yOiAkYy1zZWNvbmRhcnktb3ZlcjtcbiAgICB0ZXh0LXNoYWRvdzogbm9uZTtcbiAgfVxuXG4gIC5pbmZvIHtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgfVxuXG4gIC5lbG8ge1xuICAgIG1hcmdpbi1sZWZ0OiAwLjVlbTtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICB9XG59XG4iLCJpLnByYWN0aWNlIHtcbiAgYmFja2dyb3VuZDogaW1nLXVybCgncHJhY3RpY2UvaGVscC5zdmcnKTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3Zlcjtcbn1cblxuLnB0UTFMTHZtIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogaW1nLXVybCgncHJhY3RpY2UvYmFja3N0YWIuc3ZnJyk7XG59XG5cbi5FMWxxdHFGdCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGltZy11cmwoJ3ByYWN0aWNlL2Fycm93ZWQuc3ZnJyk7XG59XG5cbi54ZWJyRHZGZSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGltZy11cmwoJ3ByYWN0aWNlL2tleS5zdmcnKTtcbn1cblxuLkE0dWpZT2VyIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogaW1nLXVybCgncHJhY3RpY2UvcHVzaC5zdmcnKTtcbn1cblxuLlxcMzkgb2dGdjhBYyB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGltZy11cmwoJ3ByYWN0aWNlL3Zvb2Rvby1kb2xsLnN2ZycpO1xufVxuXG4uUWoyODF5MXAge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBpbWctdXJsKCdwcmFjdGljZS90cmlkZW50LnN2ZycpO1xufVxuXG4udHVvQnhWRTUge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBpbWctdXJsKCdwcmFjdGljZS9waWVyY2VkLWJvZHkuc3ZnJyk7XG59XG5cbi5CSnk2ZkVEZiB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGltZy11cmwoJ3ByYWN0aWNlL3N0b25lLXBpbGUuc3ZnJyk7XG59XG5cbi5SZzJjTUJaNiB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGltZy11cmwoJ3ByYWN0aWNlL3N0b25lLXNwZWFyLnN2ZycpO1xufVxuXG4uZkU0azIxTVcge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBpbWctdXJsKCdwcmFjdGljZS9wb2NrZXQtYm93LnN2ZycpO1xufVxuXG4uXFwzOCB5YWRGUHBVIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogaW1nLXVybCgncHJhY3RpY2Uvc3dvcmQtaW4tc3RvbmUuc3ZnJyk7XG59XG5cbi5QRGtRRHQ2dSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGltZy11cmwoJ3ByYWN0aWNlL2NhdGFwdWx0LnN2ZycpO1xufVxuXG4uXFwzOSBcXDM2IExpajd3SCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGltZy11cmwoJ3ByYWN0aWNlL211c2tldC5zdmcnKTtcbn1cblxuLm83MzRDTnFwIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogaW1nLXVybCgncHJhY3RpY2UvYnJlYWtpbmctY2hhaW4uc3ZnJyk7XG59XG5cbi5cXDM5IGNLZ1lySGIge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBpbWctdXJsKCdwcmFjdGljZS9jZW1lbnQtc2hvZXMuc3ZnJyk7XG59XG5cbi5NbnNKRVduSSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGltZy11cmwoJ3ByYWN0aWNlL2JveGluZy1nbG92ZS1zdXJwcmlzZS5zdmcnKTtcbn1cblxuLklUV1k0R04yIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogaW1nLXVybCgncHJhY3RpY2UvdHdvLXNoYWRvd3Muc3ZnJyk7XG59XG5cbi5zNXBMVTdPZiB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGltZy11cmwoJ3ByYWN0aWNlL3Ryb2phbi1ob3JzZS5zdmcnKTtcbn1cblxuLmcxZnhWWnU5IHtcbiAgYmFja2dyb3VuZC1pbWFnZTogaW1nLXVybCgncHJhY3RpY2UvYm9sdC1zaGllbGQuc3ZnJyk7XG59XG5cbi5SVVFBU2FabSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGltZy11cmwoJ3ByYWN0aWNlL3JvZ3VlLnN2ZycpO1xufVxuXG4uXFwzOSBjNkdyQ1RrIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogaW1nLXVybCgncHJhY3RpY2Uvc2llZ2UtdG93ZXIuc3ZnJyk7XG59XG5cbi5aMURLazRSbCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGltZy11cmwoJ3ByYWN0aWNlL3N0b25lLWNyYWZ0aW5nLnN2ZycpO1xufVxuXG4uQnlobFhubU0ge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBpbWctdXJsKCdwcmFjdGljZS9naG9zdC1hbGx5LnN2ZycpO1xufVxuXG4ucHQyMHlSa1Qge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBpbWctdXJsKCdwcmFjdGljZS9zdG9uZS10b3dlci5zdmcnKTtcbn1cblxuLk1rRFZpaWVUIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogaW1nLXVybCgncHJhY3RpY2UvZ3VhcmRlZC10b3dlci5zdmcnKTtcbn1cbiIsIi5hbmFseXNlIHtcbiAgLnByYWN0aWNlX19zaWRlIHtcbiAgICBncmlkLWFyZWE6IHNpZGU7XG4gICAgbWFyZ2luLXRvcDogJGJsb2NrLWdhcDtcbiAgfVxuXG4gICZfX2FjcGwge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XG4gIGdyaWQtdGVtcGxhdGUtYXJlYXM6ICdib2FyZCcgJ2NvbnRyb2xzJyAndW5kZXInICd0b29scycgJ3NpZGUnO1xuXG4gIEBpbmNsdWRlIGJyZWFrcG9pbnQoJG1xLWNvbDIpIHtcbiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiAnYm9hcmQgZ2F1Z2UgdG9vbHMnICd1bmRlciAuICAgICBjb250cm9scycgJ3NpZGUgIC4gICAgIC4nO1xuICB9XG5cbiAgQGluY2x1ZGUgYnJlYWtwb2ludCgkbXEtY29sMykge1xuICAgIGdyaWQtdGVtcGxhdGUtcm93czogZml0LWNvbnRlbnQoMCk7XG4gICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogJ3NpZGUgICAgLiBib2FyZCBnYXVnZSB0b29scycgJy4gICAgICAgLiB1bmRlciAuICAgICBjb250cm9scyc7XG5cbiAgICAucHJhY3RpY2VfX3NpZGUge1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICB9XG4gIH1cbn1cbiIsIi5wcmFjdGljZV9fc2lkZSB7XG4gIEBleHRlbmQgJWJveC1uZWF0LWZvcmNlLCAlZmxleC1jb2x1bW47XG5cbiAgYmFja2dyb3VuZDogJGMtYmctYm94O1xuXG4gICZfX3RpdGxlIHtcbiAgICBAZXh0ZW5kICVmbGV4LWNlbnRlci1ub3dyYXAsICVub3dyYXAtaGlkZGVuO1xuXG4gICAgZmxleDogMCAwIGF1dG87XG4gICAgcGFkZGluZzogMC43ZW07XG4gICAgYmFja2dyb3VuZDogJGMtcHJpbWFyeTtcbiAgICBjb2xvcjogJGMtcHJpbWFyeS1vdmVyO1xuXG4gICAgaSB7XG4gICAgICBmbGV4OiAwIDAgMy41ZW07XG4gICAgICBoZWlnaHQ6IDMuNWVtO1xuICAgICAgbWFyZ2luLXJpZ2h0OiAwLjZyZW07XG4gICAgICBvcGFjaXR5OiAwLjk7XG4gICAgfVxuXG4gICAgaDEge1xuICAgICAgZm9udC1zaXplOiAxLjJlbTtcbiAgICAgIG1hcmdpbjogMDtcbiAgICB9XG5cbiAgICBlbSB7XG4gICAgICBmb250LXNpemU6IDAuOWVtO1xuICAgICAgb3BhY2l0eTogMC45O1xuICAgIH1cbiAgfVxuXG4gICZfX2NoYXB0ZXJzIHtcbiAgICBmbGV4OiAxIDEgYXV0bztcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xuICB9XG5cbiAgLmZpbmFsbHkge1xuICAgIEBleHRlbmQgJWZsZXgtY2VudGVyLW5vd3JhcDtcblxuICAgIGZsZXg6IDAgMCBhdXRvO1xuICAgIHBhZGRpbmc6IDAuN2VtIDAuN2VtIDAuN2VtIDA7XG4gICAgYmFja2dyb3VuZDogJGMtYmctbG93O1xuICAgIGZvbnQtc2l6ZTogMC45ZW07XG5cbiAgICAuYmFjayB7XG4gICAgICBmbGV4OiAwIDAgMi41cmVtO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgbWFyZ2luLXJpZ2h0OiAwLjNyZW07XG4gICAgICBmb250LXNpemU6IDEuMjVlbTtcbiAgICB9XG5cbiAgICBzZWxlY3Qge1xuICAgICAgZmxleDogMSAxIGF1dG87XG4gICAgfVxuICB9XG59XG5cbi5wc19fY2hhcHRlciB7XG4gIEBleHRlbmQgJWZsZXgtY2VudGVyLW5vd3JhcDtcblxuICBib3JkZXItYm90dG9tOiAkYm9yZGVyO1xuICBhbGlnbi1pdGVtczogc3RyZXRjaDtcbiAgY29sb3I6ICRjLWZvbnQ7XG5cbiAgQGluY2x1ZGUgdHJhbnNpdGlvbjtcblxuICBoMyB7XG4gICAgQGV4dGVuZCAlZmxleC1jZW50ZXI7XG5cbiAgICBwYWRkaW5nOiAwLjVyZW0gMCAwLjVyZW0gMC4zcmVtO1xuICB9XG5cbiAgLnN0YXR1cyB7XG4gICAgQGV4dGVuZCAlZmxleC1jZW50ZXI7XG5cbiAgICBmbGV4OiAwIDAgMi41cmVtO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIG9wYWNpdHk6IDE7XG4gICAgZm9udC1zaXplOiAxLjI1ZW07XG4gICAgY29sb3I6ICRjLXNoYWRlO1xuXG4gICAgJi5kb25lIHtcbiAgICAgIGNvbG9yOiAkYy1wcmltYXJ5O1xuICAgIH1cbiAgfVxuXG4gICY6aG92ZXIge1xuICAgIGJhY2tncm91bmQ6IG1peCgkYy1wcmltYXJ5LCAkYy1iZy1ib3gsIDEwJSk7XG4gIH1cblxuICAmLmFjdGl2ZSB7XG4gICAgYmFja2dyb3VuZDogbWl4KCRjLXByaW1hcnksICRjLWJnLWJveCwgMTAlKTtcblxuICAgIC5zdGF0dXMge1xuICAgICAgYmFja2dyb3VuZDogJGMtcHJpbWFyeTtcbiAgICAgIGNvbG9yOiAkYy1wcmltYXJ5LW92ZXI7XG4gICAgfVxuICB9XG59XG4iLCJAa2V5ZnJhbWVzIHNvZnQtYnJpZ2h0IHtcbiAgNTAlIHtcbiAgICBmaWx0ZXI6IGJyaWdodG5lc3MoMS4yKTtcbiAgfVxufVxuXG4uZmVlZGJhY2sge1xuICBAZXh0ZW5kICVib3gtbmVhdDtcblxuICBkaXNwbGF5OiBmbGV4O1xuICBiYWNrZ3JvdW5kOiAkYy1iZy1ib3g7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG4gICYud2luLFxuICAmLmZhaWwge1xuICAgIHBhZGRpbmc6IDJlbSAxLjVlbTtcbiAgICBiYWNrZ3JvdW5kOiAkYy1nb29kO1xuICAgIGNvbG9yOiAkYy1nb29kLW92ZXI7XG4gICAgYW5pbWF0aW9uOiAxLjdzIHNvZnQtYnJpZ2h0IGVhc2UtaW4tb3V0IGluZmluaXRlO1xuICAgIG9wYWNpdHk6IDAuODtcblxuICAgIEBpbmNsdWRlIHRyYW5zaXRpb247XG4gIH1cblxuICAmLmZhaWwge1xuICAgIGJhY2tncm91bmQ6ICRjLWJhZDtcbiAgfVxuXG4gICY6aG92ZXIge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cblxuICBzcGFuIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDFlbTtcbiAgfVxuXG4gICYub25nb2luZyB7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAgZmxleC1mbG93OiBjb2x1bW47XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBwYWRkaW5nOiAxZW0gMS41ZW07XG4gIH1cblxuICAuZ29hbCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMC44ZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtc2l6ZTogMS4yZW07XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgfVxuXG4gIC5jb21tZW50IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBkaXNwbGF5OiBibG9jaztcblxuICAgIGlmcmFtZSB7XG4gICAgICBtYXJnaW46IDEwcHggMDtcbiAgICB9XG4gIH1cbn1cblxuLmFuYWx5c2VfX3VuZGVyYm9hcmQge1xuICAuc2V0dGluZyB7XG4gICAgQGV4dGVuZCAlZmxleC1jZW50ZXI7XG5cbiAgICBtYXJnaW4tdG9wOiAxZW07XG5cbiAgICA+IGxhYmVsIHtcbiAgICAgIG9yZGVyOiAxO1xuICAgICAgZmxleDogMSAwO1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgbWFyZ2luLWxlZnQ6IDAuOGVtO1xuICAgIH1cbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUVFQSxZQUFZO0FBa0JaLDZEQUE2RDtBQWM3RCxtQkFBbUI7QUFNbkIsa0NBQWtDO0FBRWxDLHNCQUFzQjtBQU10QixvQ0FBb0M7QUFFcEMsb0JBQW9CO0FBTXBCLGlDQUFpQztBQUVqQyxnQkFBZ0I7QUFJaEIsK0JBQStCO0FBRS9CLGdCQUFnQjtBQUtoQiwrQkFBK0I7QUFFL0IsaUJBQWlCO0FBSWpCLGtCQUFrQjtBQUlsQixjQUFjO0FBSWQsaUJBQWlCO0FBSWpCLCtCQUErQjtBQThCL0IsYUFBYTtBQU1iLGFBQWE7QUR4R2IsNkRBQTZEO0FBYzdELG1CQUFtQjtBQUtuQixzQkFBc0I7QUFLdEIsZ0JBQWdCO0FBR2hCLGlCQUFpQjtBQUdqQixpQkFBaUI7QUFJakIsa0JBQWtCO0FBSWxCLGNBQWM7QUt6RGQsd0NBQXdDO0FzQkF4QyxZQUFZO0FBZ0JaLGFBQWE7QUFTYixrQkFBa0I7QUFLbEIsa0JBQWtCO0FBS2xCLGFBQWE7QUVuQ2Isc0RBQXNEO0FBT3RELHVFQUF1RTtBQzZEdkUsdURBQXVEO0FDNUNyRCxBQXBCRixhQW9CZSxDZ0JsQmYsT0FBTyxDQVdMLElBQUksRUFYTixPQUFPLENoQmtCTCxhQUFhLENnQlBiLElBQUksRWhCT0osYUFBYSxDb0J4QmYsT0FBTyxDQUtMLEdBQUcsQ0EwQkQsSUFBSSxFQS9CUixPQUFPLENBS0wsR0FBRyxDcEJtQkgsYUFBYSxDb0JPWCxJQUFJLEVwQlBOLGFBQWEsQytCeEJmLGFBQWEsQ0F3RVgsTUFBTSxDQUFDLEVBQUUsQUFBQSxZQUFZLEVBeEV2QixhQUFhLENBd0VYLE1BQU0sQy9CaEROLGFBQWEsQytCZ0ROLEVBQUUsQUFBQSxZQUFZLEUvQmhEckIsYUFBYSxDK0J4QmYsYUFBYSxDQTJMWCxVQUFVLENBR1IsRUFBRSxBQUFBLFlBQVksRUE5TGxCLGFBQWEsQ0EyTFgsVUFBVSxDL0JuS1YsYUFBYSxDK0JzS1gsRUFBRSxBQUFBLFlBQVksRS9CdEtoQixhQUFhLENrQ3RCZixjQUFjLENBU1osSUFBSSxFQVROLGNBQWMsQ2xDc0JaLGFBQWEsQ2tDYmIsSUFBSSxFbENhSixhQUFhLENvQ3hCZixXQUFXLENBY1QsTUFBTSxFQWRSLFdBQVcsQ3BDd0JULGFBQWEsQ29DVmIsTUFBTSxFcEJSUixPQUFPLENBbUlMLEtBQUssRWtCdklQLGNBQWMsQ0E4QlosS0FBSyxDbEM1Qkk7RUFDVCxXQUFXLEVBQUUsdUJBQXVCO0NBQ3JDOztBZ0JBRCxBaEJFQSxPZ0JGTyxDQVdMLElBQUksQ2hCV0osSUFBSSxFb0I1Qk4sT0FBTyxDQUtMLEdBQUcsQ0EwQkQsSUFBSSxDcEJITixJQUFJLEUrQjVCTixhQUFhLENBd0VYLE1BQU0sQ0FBQyxFQUFFLEFBQUEsWUFBWSxDL0I1Q3JCLElBQUksRStCNUJOLGFBQWEsQ0EyTFgsVUFBVSxDQUdSLEVBQUUsQUFBQSxZQUFZLEMvQmxLaEIsSUFBSSxFa0MxQk4sY0FBYyxDQVNaLElBQUksQ2xDaUJKLElBQUksRW9DNUJOLFdBQVcsQ0FjVCxNQUFNLENwQ2NOLElBQUksRWdCdEJOLE9BQU8sQ0EwSEwsSUFBSSxFQTFITixPQUFPLENBZ01MLE9BQU8sQ0FBQyxHQUFHLEVHdE1iLE1BQU0sQ0EwQ0osT0FBTyxDQUNMLE1BQU0sRWV6Q1YsY0FBYyxDQW9DWixJQUFJLEVJbEJOLGNBQWMsQ0FrQ1osZUFBZSxDdEM5Q1Q7RUFDTixXQUFXLEVBQUUsb0JBQW9CO0NBQ2xDOztBZ0JKRCxBaEJXQSxPZ0JYTyxDQVdMLElBQUksRUlqQk4sT0FBTyxDQUtMLEdBQUcsQ0EwQkQsSUFBSSxFVy9CUixhQUFhLENBd0VYLE1BQU0sQ0FBQyxFQUFFLEFBQUEsWUFBWSxFQXhFdkIsYUFBYSxDQTJMWCxVQUFVLENBR1IsRUFBRSxBQUFBLFlBQVksRUc1TGxCLGNBQWMsQ0FTWixJQUFJLEVFWE4sV0FBVyxDQWNULE1BQU0sQ3BDR0k7RUFDVixXQUFXLEVBQUUseUJBQXlCO0NBQ3ZDOztBZ0JiRCxBaEJzQkUsT2dCdEJLLENBV0wsSUFBSSxDaEJXSixJQUFJLEVvQjVCTixPQUFPLENBS0wsR0FBRyxDQTBCRCxJQUFJLENwQkhOLElBQUksRStCNUJOLGFBQWEsQ0F3RVgsTUFBTSxDQUFDLEVBQUUsQUFBQSxZQUFZLEMvQjVDckIsSUFBSSxFK0I1Qk4sYUFBYSxDQTJMWCxVQUFVLENBR1IsRUFBRSxBQUFBLFlBQVksQy9CbEtoQixJQUFJLEVrQzFCTixjQUFjLENBU1osSUFBSSxDbENpQkosSUFBSSxFb0M1Qk4sV0FBVyxDQWNULE1BQU0sQ3BDY04sSUFBSSxDQUFDO0VBRUgsV0FBVyxFQUFFLEdBQUc7RUFDaEIsV0FBVyxFQUFFLE1BQU07Q0FDcEI7O0FBR0gsNEZBQTRGO0E2QnFCekYsQTdCcEJILGtCNkJvQmEsQ0FjVCxJQUFJLEM3QmxDRztFQUNULEtBQUssRTdCcENHLE9BQXdDO0M2QnFDakQ7O0FZZEUsQVowQkgsa0JZMUJVLEVBQ1Asa0JBQU8sRUF2QlYsV0FBVyxDQXFEVCxJQUFJLEFBTUQsTUFBTSxFRXZEWCxXQUFXLEdBQUcsS0FBSyxBQWdDaEIsT0FBTyxFc0J0Q1YsV0FBVyxDQWNULE1BQU0sRUVNUixjQUFjLEN0QzhCUDtFL0JzQ0wsVUFBVSxFQUFFLGlEQUFtRjtDK0JwQ2hHOztBY2VELEFkYkEsV2NhVyxBQUFBLE1BQU0sQUFBQSxJQUFLLENBQUEsU0FBUyxJQUMzQixLQUFLLEFBUUosT0FBTyxDZHRCQztFL0IwQ1gsVUFBVSxFQUFFLGlEQUFtRjtFQUMvRixLQUFLLEVFaEdHLE9BQXdDO0M2QnVEakQ7O0FtQnhERCxBbkJrRUEsTW1CbEVNLENuQmtFSTtFL0JzQlIsVUFBVSxFQUFFLGlEQUFtRjtDK0JwQmhHOztBUzdERSxBVDRGSCxXUzVGUSxFV1BSLE9BQU8sQ0ErREwsU0FBUyxFSS9EWCxvQkFBb0IsQ0FBQyxRQUFRLEFBQzFCLFFBQVEsQ0FBQyxZQUFZLEFBQUEsUUFBUSxFWURoQyxXQUFXLEVDQVgsV0FBVyxDQWlCVCxRQUFRLENyQ2tGSTtFQUNaLFVBQVUsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxtQkFBbUIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxtQkFBbUI7Q0FDN0U7O0FhckdELEFiK0dBLElhL0dJLENiK0dTO0VBQ1gsVUFBVSxFQUFFLElBQUk7RUFDaEIsTUFBTSxFQUFFLElBQUk7RUFDWixPQUFPLEVBQUUsSUFBSTtFQUNiLEtBQUssRS9CMUZFLE9BQWU7QytCMkZ2Qjs7QWNyREQsQWRzRUEsV2N0RVcsQUFBQSxNQUFNLEFBQUEsSUFBSyxDQUlBLFNBQVMsSUFKSSxLQUFLLEVBSXhDLFdBQVcsQUFBQSxNQUFNLEFBQUEsSUFBSyxDQUFBLFNBQVMsSUFDM0IsS0FBSyxDZGlFSztFQUNaLFVBQVUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQzdCcklaLE9BQXdDO0M2QnNJakQ7O0FnQmpJRCxBaEJ3SUEsT2dCeElPLENBV0wsSUFBSSxFR2pCTixNQUFNLENBK0JKLElBQUk7QUEvQk4sTUFBTSxDQWdDSixPQUFPLEVzQjNCTixzQkFBTyxDekN5SUs7RUFDYixXQUFXLEVBQUUsTUFBTTtFQUNuQixRQUFRLEVBQUUsTUFBTTtDQUNqQjs7QWdCM0lELEFoQjZJQSxPZ0I3SU8sQ0FnTUwsT0FBTyxDQUFDLEdBQUcsRUl0TWIsT0FBTyxDQUtMLEdBQUcsQUFRQSxXQUFXLENwQnNJQztFQUdmLFdBQVcsRUFBRSxNQUFNO0NBQ3BCOztBZ0JpQ0UsQWhCdkJILGNnQnVCVSxHQUFHLFNBQVMsR0FBRyxPQUFPLENoQnZCcEI7RUFDVixhQUFhLEVBQUUsVUFBVTtFQUN6QixVQUFVLEVBQUUsVUFBVTtDQUN2Qjs7QWdCOUpELEFoQjZLQSxPZ0I3S08sQ0FnTUwsT0FBTyxDQUFDLEdBQUcsRUl0TWIsT0FBTyxDQUtMLEdBQUcsQUFRQSxXQUFXLEVSV2Isa0JBQU8sRW1CeEJWLGFBQWEsQ0FrSlgsTUFBTSxDQUFDLEVBQUUsQ0FBQyxJQUFJLEMvQmlDTjtFRC9IUixRQUFRLEVBQUUsTUFBTTtFQUNoQixhQUFhLEVBQUUsUUFBUTtDQ2dJeEI7O0FvQnJMRCxBcEJ1TEEsT29CdkxPLENBK0RMLFNBQVMsQ0FRUCxnQkFBZ0IsQ3BCZ0haO0VBQ04sUUFBUSxFQUFFLFFBQVE7RUFDbEIsT0FBTyxFQUFFLEtBQUs7RUFDZCxNQUFNLEVBQUUsQ0FBQztFQUNULGNBQWMsRUFBRSxJQUFJO0VBQ3BCLEtBQUssRUFBRSxJQUFJO0NBQ1o7O0FxQzdMRCxBckMrTEEsV3FDL0xXLENBcUNULE1BQU0sQ3JDMEpEO0VBQ0wsUUFBUSxFQUFFLFFBQVE7RUFDbEIsT0FBTyxFQUFFLEtBQUs7RUFDZCxNQUFNLEVBQUUsQ0FBQztFQUNULGNBQWMsRUFBRSxNQUFNO0VBRXRCLFVBQVU7RUFFVixLQUFLLEVBQUUsSUFBSTtDQU9aOztBcUM5TUQsQXJDeU1FLFdxQ3pNUyxDQXFDVCxNQUFNLEdyQ29LSixDQUFDLENBQUM7RUFHRixNQUFNLEVBQUUsSUFBSTtDQUNiOztBY3ZNSCxBZDBNQSxXYzFNVyxHQUFHLEtBQUssQUF3QmhCLFFBQVEsRUV4QlgsT0FBTyxDQTBJTCxNQUFNLEFBS0gsUUFBUSxDaEIyREY7RUFDVCxTQUFTLEVBQUUsS0FBSztFQUNoQixjQUFjLEVBQUUsTUFBTTtFQUN0QixXQUFXLEVBQUUsU0FBUztFQUN0QixVQUFVLEVBQUUsTUFBTTtFQUNsQixXQUFXLEVBQUUsTUFBTTtFQUNuQixjQUFjLEVBQUUsSUFBSTtFQUNwQixLQUFLLEVBQUUsSUFBSTtFQUNYLE9BQU8sRUFBRSxlQUFlO0VBQ3hCLE9BQU8sRUFBRSxHQUFHO0NBQ2I7O0FTek5FLEFUaU9ILGNTak9XLENUaU9NO0VBQ2YsUUFBUSxFQUFFLEtBQUs7RUFDZixHQUFHLEVBQUUsQ0FBQztFQUNOLElBQUksRUFBRSxDQUFDO0VBQ1AsTUFBTSxFQUFFLENBQUM7RUFDVCxLQUFLLEVBQUUsQ0FBQztFQUNSLFVBQVUsRTlCbElFLGtCQUFtQjtFOEJtSS9CLE9BQU8sRUxwTlksR0FBRztDS3FOdkI7O0ErQjFPRCxBL0I0T0EsYStCNU9hLENBbUJYLFFBQVEsQy9CeU5JO0VBQ1osUUFBUSxFQUFFLFFBQVE7RUFDbEIsR0FBRyxFQUFFLENBQUM7RUFDTixJQUFJLEVBQUUsQ0FBQztFQUNQLEtBQUssRUFBRSxJQUFJO0VBQ1gsTUFBTSxFQUFFLElBQUk7RUFDWixPQUFPLEVMcE5TLENBQUM7Q0txTmxCOztBcUNuUEQsQXJDcVBBLFdxQ3JQVyxDQXFDVCxNQUFNLEdyQ29LSixDQUFDLEVvQnpNTCxPQUFPLENBK0RMLFNBQVMsQ0FRUCxnQkFBZ0IsQ0FHZCxRQUFRLEVHMUVkLGlCQUFpQixDdkJxUFI7RUFDUCxRQUFRLEVBQUUsUUFBUTtFQUNsQixLQUFLLEVBQUUsSUFBSTtFQUNYLE1BQU0sRUFBRSxJQUFJO0NBQ2I7O0FjelBELEFkMlBBLFdjM1BXLEVRQVgsaUJBQWlCLEN0QjJQTDtFQUVWLFlBQVksRUFBRSxZQUFZO0NBQzNCOztBZ0JyUEUsQWZUSCxjZVNVLENmVEM7RUFDVCxPQUFPLEVBQUUsSUFBSTtFQUNiLFNBQVMsRUFBRSxRQUFRO0NBQ3BCOztBUUZFLEFSSUgsY1FKVyxFVURYLE1BQU0sQ0FnQkosT0FBTyxFZWRULGNBQWMsRUFBZCxjQUFjLENBU1osSUFBSSxFTzhDTixZQUFZLENBU1YsRUFBRSxFQVRKLFlBQVksQ0FlVixPQUFPLEVDWFQsb0JBQW9CLENBQ2xCLFFBQVEsQ3pDekRHO0VBQ1gsd0JBQXdCO0VBQ3hCLE9BQU8sRUFBRSxJQUFJO0VBQ2IsU0FBUyxFQUFFLFFBQVE7RUFDbkIsV0FBVyxFQUFFLE1BQU07Q0FDcEI7O0FtQ1ZELEFuQ1lBLFdtQ1pXLENBd0JULENBQUMsRUVKSCxjQUFjLENBa0NaLGVBQWUsRUdqRGQsc0JBQU8sRUFMVixlQUFlLENBb0NiLFFBQVEsRUFxQlYsWUFBWSxDeEM3Q1E7RUFDbEIsT0FBTyxFQUFFLElBQUk7RUFDYixTQUFTLEVBQUUsVUFBVTtFQUNyQixXQUFXLEVBQUUsTUFBTTtDQUNwQjs7QW9DNkJELEFwQzNCQSxnQm9DMkJnQixDQUNkLE1BQU0sQ3BDNUJNO0VBQ1osMEJBQTBCO0VBQzFCLE9BQU8sRUFBRSxJQUFJO0VBQ2IsU0FBUyxFQUFFLFFBQVE7RUFDbkIsV0FBVyxFQUFFLE1BQU07RUFDbkIsZUFBZSxFQUFFLGFBQWE7Q0FDL0I7O0FxQ0pELEFyQ01BLGNxQ05jLENyQ01PO0VBQ25CLDBCQUEwQjtFQUMxQixPQUFPLEVBQUUsSUFBSTtFQUNiLFNBQVMsRUFBRSxVQUFVO0VBQ3JCLFdBQVcsRUFBRSxNQUFNO0VBQ25CLGVBQWUsRUFBRSxhQUFhO0NBQy9COztBUXpCRSxBUjBDSCxXUTFDUSxFQ1BSLGNBQWMsRUVFZCxXQUFXLENBYVQsSUFBSSxFQVNILGtCQUFPLEVBQ1Asa0JBQU8sRUFQUCxvQkFBUyxFaUJqQlQsZUFBTyxFQ3NDUCxtQkFBTyxHQUtKLENBQUMsRUU1Q1AsYUFBYSxFU0FiLGVBQWUsQ3hDaURGO0VBQ1gsT0FBTyxFQUFFLElBQUk7RUFDYixTQUFTLEVBQUUsTUFBTTtDQUNsQjs7QVdsREQsQVZGQSxXVUVXLEVpQkRSLGVBQU8sRVlEVixlQUFlLEVKQWYsV0FBVyxFS01YLFNBQVMsRWpDQ04sV0FBSyxFT29ETCxjQUFPLENBQUMsSUFBSSxBQUFBLE9BQU8sRUFpQm5CLGNBQU8sQ0FBQyxJQUFJLEFBQUEsTUFBTSxFRzVFckIsTUFBTSxDQTBDSixPQUFPLENBQ0wsTUFBTSxFaUIzQ1YsV0FBVyxDbENBQztFSENWLGFBQWEsRUZhRyxHQUFHO0NLWnBCOztBVUFELEFWRUEsV1VGVyxFaUJEUixlQUFPLEVZRFYsZUFBZSxDdkNJRztFQUdoQixRQUFRLEVBQUUsTUFBTTtFQUVoQix1REFBdUQ7Q0FDeEQ7O0FVUkQsQVZVQSxXVVZXLENBOEZULElBQUksRW1CaEdOLGFBQWEsQ0E2SFgsSUFBSSxDQUFDLElBQUksQUFBQSxZQUFZLEVBN0h2QixhQUFhLENBb1JYLE9BQU8sQ0FnQkwsUUFBUSxDQUdOLElBQUksQUFZRCxZQUFZLEM3QnZTSjtFQUNmLGFBQWEsRUxDRyxHQUFHLENLRGEsQ0FBQyxDQUFDLENBQUMsQ0xDbkIsR0FBRztDS0FwQjs7QTZCZEQsQTdCZ0JBLGE2QmhCYSxDQW1JWCxJQUFJLENBQUMsSUFBSSxBQUFBLFdBQVcsRUFuSXRCLGFBQWEsQ0FvUlgsT0FBTyxDQWdCTCxRQUFRLENBR04sSUFBSSxBQWdCRCxXQUFXLEM3QnZTRjtFQUNoQixhQUFhLEVBQUUsQ0FBQyxDTEhBLEdBQUcsQ0FBSCxHQUFHLENLR2dDLENBQUM7Q0FDckQ7O0FvQ1lFLEFwQ1ZILGtCb0NVTyxDcENWUztFQUNkLGFBQWEsRUxQRyxHQUFHLENBQUgsR0FBRyxDS084QixDQUFDLENBQUMsQ0FBQztDQUNyRDs7QW9CdEJELEFwQndCQSxpQm9CeEJpQixDQU9mLElBQUksRWdCNkJILGtCQUFJLENwQ1pZO0VBQ2pCLGFBQWEsRUFBRSxDQUFDLENBQUMsQ0FBQyxDTFhGLEdBQUcsQ0FBSCxHQUFHO0NLWXBCOztBbUMxQkQsQW5Db0NBLFdtQ3BDVyxFS01YLFNBQVMsRTlCSlQsV0FBVyxFaUJEUixlQUFPLEVZRFYsZUFBZSxFaENPWixXQUFLLENBbUNKLE1BQU0sQUFBQSxNQUFNLEU2QnRCaEIsY0FBYyxDcENnQkY7RUgvQlYsVUFBVSxFN0J3SEMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLG1CQUFtQixFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFFLElBQUcsQ0FBQyxrQkFBa0IsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsbUJBQW1CO0NnQ3ZGL0c7O0FFdENELEFBQUEsTUFBTSxDQUFDO0VBQ0wsMEJBQTBCO0VBSzFCLHlCQUF5QjtFQUN6QixRQUFRLEVBQUUsUUFBUTtFQUNsQixPQUFPLEVBQUUsSUFBSTtFQUNiLGNBQWMsRUFBRSxJQUFJO0VBSXBCLFdBQVcsRUFBRSxJQUFJO0VBQ2pCLEtBQUssRUFBRSxJQUFJO0VBQ1gsV0FBVyxFQUFFLGNBQWM7RUFDM0IsV0FBVyxFQUFFLElBQUk7RUFxQ2pCLGdDQUFnQztDQWFqQzs7QUFoRUMsQUFBQSxVQUFVLENBRlosTUFBTSxDQUVTO0VBQ1gsT0FBTyxFQUFFLElBQUk7Q0FDZDs7QUFKSCxBQUFBLE1BQU0sQ0RjQTtFQUNBLFNBQVEsRUNKcUIsR0FBRztDRGdCakM7O0FBVkMsTUFBTSxFQUFFLFNBQVMsRUFBRSxLQUFLO0VDakI5QixBQUFBLE1BQU0sQ0RjQTtJQUlFLFNBQVEsRUFBRSx3Q0FHVDtHQU1KOzs7QUFIQyxNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU07RUN4Qi9CLEFBQUEsTUFBTSxDRGNBO0lBV0UsU0FBUSxFQ2R3QixJQUFJO0dEZ0J2Qzs7O0FDM0JMLEFBa0JFLE1BbEJJLEFBa0JILE1BQU0sQ0FBQztFQUNOLFNBQVMsRUFBRSxjQUFjO0VBQ3pCLEdBQUcsRUFBRSxHQUFHO0VBQ1IsS0FBSyxFQUFFLENBQUM7RUFHUixNQUFNLEVBQUUsSUFBSTtFQUNaLEtBQUssRUFBRSxLQUFLO0NBS2I7O0FBOUJILEFBMkJJLE1BM0JFLEFBa0JILE1BQU0sQUFTSixNQUFNLENBQUM7RUFDTixTQUFTLEVBQUUsTUFBTTtDQUNsQjs7QUE3QkwsQUFnQ0UsTUFoQ0ksQUFnQ0gsTUFBTSxDQUFDO0VBQ04sTUFBTSxFQUFFLEdBQUc7RUFDWCxJQUFJLEVBQUUsQ0FBQztFQUNQLFVBQVUsRUFBRSxJQUFJO0VBQ2hCLFNBQVMsRUFBRSxHQUFHO0VBQ2QsS0FBSyxFQUFFLElBQUk7RUFDWCxNQUFNLEVBQUUsS0FBSztDQVNkOztBQS9DSCxBQXdDSSxNQXhDRSxBQWdDSCxNQUFNLEFBUUosTUFBTSxDQUFDO0VBQ04sU0FBUyxFQUFFLFdBQVc7Q0FDdkI7O0FBMUNMLEFBNENJLE1BNUNFLEFBZ0NILE1BQU0sQ0FZTCxLQUFLLENBQUM7RUFDSixZQUFZLEVBQUUsR0FBRztDQUNsQjs7QUE5Q0wsQUFpREUsTUFqREksQ0FpREosS0FBSyxDQUFDO0VBQ0osSUFBSSxFQUFFLFFBQVE7Q0FDZjs7QUFuREgsQUFzREUsTUF0REksQ0FzREosS0FBSyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDO0VBQzFCLEtBQUssRUFBRSxlQUFlO0VBQ3RCLFdBQVcsRUFBRSx5QkFBeUI7Q0FDdkM7O0FBekRILEFBMkRFLE1BM0RJLENBMkRKLEtBQUssQ0FBQyxRQUFRLENBQUMsTUFBTSxBQUFBLE1BQU0sQ0FBQztFQUMxQixNQUFNLEVBQUUsZ0JBQWdCO0NBS3pCOztBQWpFSCxBQThESSxNQTlERSxDQTJESixLQUFLLENBQUMsUUFBUSxDQUFDLE1BQU0sQUFBQSxNQUFNLENBR3pCLEtBQUssQ0FBQztFQUNKLFlBQVksRUFBRSxHQUFHO0NBQ2xCOztBQ2hFTCxBQUFBLEtBQUssQ0FBQztFQUNKLHNCQUFzQixDQUFBLEtBQUM7RUFDdkIsc0JBQXNCLENBQUEsS0FBQztFQUN2QixpQkFBaUIsQ0FBQSxlQUFDO0NBQ25COztBREpELEFBQUEsTUFBTSxDQ01DO0VBQ0wsV0FBVyxFQUFFLHNCQUFzQjtDQUNwQzs7QUFFRCxBQUFBLGtCQUFrQixDQUFDLE1BQU0sQ0FBQyxLQUFLLEFBQUEsVUFBVyxDQUFBLE1BQU07QUFDaEQsa0JBQWtCLENBQUMsTUFBTSxDQUFDLEtBQUssQUFBQSxVQUFXLENBQUEsRUFBRTtBQUM1QyxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsS0FBSyxBQUFBLFVBQVcsQ0FBQSxFQUFFO0FBQzVDLGtCQUFrQixDQUFDLE1BQU0sQ0FBQyxLQUFLLEFBQUEsVUFBVyxDQUFBLE1BQU0sRUFBRTtFQUNoRCxLQUFLLEVBQUUsMkJBQTJCO0NBQ25DOztBQUVELEFBQUEsa0JBQWtCLENBQUMsTUFBTSxDQUFDLEtBQUssQUFBQSxVQUFXLENBQUEsRUFBRTtBQUM1QyxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsS0FBSyxBQUFBLFVBQVcsQ0FBQSxNQUFNO0FBQ2hELGtCQUFrQixDQUFDLE1BQU0sQ0FBQyxLQUFLLEFBQUEsVUFBVyxDQUFBLE1BQU07QUFDaEQsa0JBQWtCLENBQUMsTUFBTSxDQUFDLEtBQUssQUFBQSxVQUFXLENBQUEsRUFBRSxFQUFFO0VBQzVDLEtBQUssRUFBRSwyQkFBMkI7Q0FDbkM7O0FEZ0RELHlCQUF5QjtBN0JOckIsTUFBTSxFQUFHLFNBQVMsRUFBRSxLQUFLLElBQUssV0FBVyxFQUFFLFNBQVM7RTZCUXRELEFBQUEsV0FBVyxDQUFDLE1BQU0sQ0FBQztJQUNqQixXQUFXLEVBQUUsSUFBSTtHQXFCbEI7RUF0QkQsQUFHRSxXQUhTLENBQUMsTUFBTSxBQUdmLE1BQU0sQ0FBQztJQUNOLEtBQUssRUFBRSxLQUFLO0lBQ1osR0FBRyxFQUFFLENBQUM7SUFDTixLQUFLLEVBQUUsSUFBSTtHQUtaO0VBWEgsQUFRSSxXQVJPLENBQUMsTUFBTSxBQUdmLE1BQU0sQ0FLTCxLQUFLLENBQUM7SUFDSixTQUFTLEVBQUUsZUFBZTtHQUMzQjtFQVZMLEFBYUUsV0FiUyxDQUFDLE1BQU0sQUFhZixNQUFNLENBQUM7SUFDTixNQUFNLEVBQUUsS0FBSztJQUNiLElBQUksRUFBRSxDQUFDO0lBQ1AsVUFBVSxFQUFFLE1BQU07R0FDbkI7RUFqQkgsQUFtQkUsV0FuQlMsQ0FBQyxNQUFNLENBbUJoQixLQUFLLENBQUM7SUFDSixLQUFLLEVqQzNGRCxPQUF3QyxDaUMyRnhCLFVBQVU7R0FDL0I7OztBRTdGTCxBQUFBLElBQUksQ0FBQztFQUNILGFBQWEsQ0FBQSxFQUFDO0NBTWY7O0EvQnlERyxNQUFNLEVBQUcsU0FBUyxFQUFFLEtBQUssT0FBTyxVQUFVLEVBQUUsS0FBSztFK0JoRXJELEFBQUEsSUFBSSxDQUFDO0lBS0QsYUFBYSxDQUFBLHNDQUFDO0dBRWpCOzs7QS9CeURHLE1BQU0sRUFBRyxTQUFTLEVBQUUsS0FBSyxPQUFPLFdBQVcsRUFBRSxRQUFRO0UrQmhFekQsQUFBQSxJQUFJLENBVUc7SUFDSCxNQUFNLENBQUEsRUFBQztHQUNSO0VBRUQsQUFBQSxXQUFXLENBQUMsUUFBUSxDQUFDO0lBQ25CLGFBQWEsRUFBRSxDQUFDO0dBQ2pCOzs7QUNoQkgsQUFBQSxJQUFJLENBQUMsbUJBQW1CO0FBQ3hCLElBQUksQ0FBQywwQkFBMEIsQ0FBQztFQUM5QixLQUFLLEVBQUUsTUFBTTtFQUNiLFVBQVUsRXRDYUEsT0FBeUI7Q3NDWnBDOztBQUVELEFBQUEsSUFBSSxDQUFDLHlCQUF5QixDQUFDO0VBQzdCLFVBQVUsRXBDTkYsT0FBd0M7Q29DT2pEOztBQUVELEFBQUEsSUFBSSxDQUFDLHlCQUF5QixBQUFBLE1BQU07QUFDcEMsSUFBSSxDQUFDLHlCQUF5QixBQUFBLE9BQU8sQ0FBQztFQUNwQyxVQUFVLEVwQ1hGLE9BQXdDO0NvQ1lqRDs7QUNiRCxBQUFBLElBQUksQUFBQSxTQUFTLENBQUM7RUFDWixXQUFXLEVBQUUsSUFBSTtDQUNsQjs7QUFFRCxBQUFBLFNBQVMsQ0FBQztFQUdSLE9BQU8sRUFBRSxJQUFJO0NBdUNkOztBakNrQkcsTUFBTSxFQUFHLFNBQVMsRUFBRSxLQUFLO0VpQzVEN0IsQUFBQSxTQUFTLENBQUM7SUFNTixPQUFPLEVBQUUsS0FBSztJQUNkLFFBQVEsRUFBRSxRQUFRO0lBQ2xCLEtBQUssRUFBQyxJQUFDO0lBQ1AsTUFBTSxFQUFDLElBQUM7SUFDUixLQUFLLEVBVFEsSUFBSTtJQVVqQixNQUFNLEVBVk8sSUFBSTtJQVdqQixNQUFNLEVBQUUsV0FBVztHQThCdEI7RUExQ0QsQUFjSSxTQWRLLEFBY0osUUFBUSxFQWRiLFNBQVMsQUFlSixPQUFPLENBQUM7SUFDUCxVQUFVLEVBQUUsSUFBSTtJQUNoQixPQUFPLEVBQUUsRUFBRTtJQUNYLFFBQVEsRUFBRSxRQUFRO0lBQ2xCLEtBQUssRUFBRSxJQUFJO0lBQ1gsTUFBTSxFQUFFLEdBQUc7R0FDWjtFQXJCTCxBQXVCSSxTQXZCSyxBQXVCSixRQUFRLENBQUM7SUFDUixLQUFLLEVBQUUsR0FBRztJQUNWLFNBQVMsRUFBRSxtQkFBbUIsQ0FBQyxjQUFjO0dBQzlDO0VBMUJMLEFBNEJJLFNBNUJLLEFBNEJKLE9BQU8sQ0FBQztJQUNQLFNBQVMsRUFBRSxtQkFBbUIsQ0FBQyxjQUFjO0dBQzlDO0VBOUJMLEFBZ0NJLFNBaENLLEFBZ0NKLE1BQU0sQ0FBQztJQUNOLGFBQWEsRUFBRSxHQUFHO0lBQ2xCLFVBQVUsRUFBRSxxQkFBd0I7R0FDckM7RUFFRCxBQUFBLFNBQVMsQ0FyQ2IsU0FBUyxDQXFDTztJQUNWLGFBQWEsRUFBRSxHQUFHO0lBQ2xCLFVBQVUsRUFBRSxzQkFBMkI7R0FDeEM7OztBQzNDRixBQUFELGNBQVMsQ0FBQztFQUdSLGVBQWUsRUFBRSxNQUFNO0NBQ3hCOztBQUVBLEFBQUQsV0FBTSxDQUFDO0VBR0wsVUFBVSxFeENNRixPQUF5QjtFd0NMakMsUUFBUSxFQUFFLFFBQVE7RUFDbEIsT0FBTyxFQUFFLElBQUk7RUFDYixVQUFVLEVBQUUsTUFBTTtFQUNsQixTQUFTLEVBQUUsS0FBSztFQUNoQixVQUFVLEVBQUUsSUFBSTtDQWlDakI7O0FBekNBLEFBVUMsV0FWSSxHQVVGLEdBQUcsQ0FBQztFQUNKLFFBQVEsRUFBRSxNQUFNO0VBQ2hCLFVBQVUsRUFBRSxJQUFJO0NBQ2pCOztBQWJGLEFBZUMsV0FmSSxDQWVKLE1BQU0sQ0FBQztFQUNMLEtBQUssRXhDRUYsT0FBZTtFd0NEbEIsUUFBUSxFQUFFLFFBQVE7RUFDbEIsU0FBUyxFQUFFLElBQUk7RUFDZixXQUFXLEVBQUUsSUFBSTtFQUNqQixLQUFLLEVBQUUsSUFBSTtFQUNYLE1BQU0sRUFBRSxJQUFJO0VBQ1osTUFBTSxFQUFFLE9BQU87RUFDZixHQUFHLEVBQUUsQ0FBQztFQUNOLEtBQUssRUFBRSxDQUFDO0VBQ1IsVUFBVSxFQUFFLElBQUk7Q0FRakI7O0FsQ3dCRCxNQUFNLEVBQUcsU0FBUyxFQUFFLEtBQUs7RWtDekQxQixBQWVDLFdBZkksQ0FlSixNQUFNLENBQUM7SUFhSCxHQUFHLEVBQUUsS0FBSztJQUNWLEtBQUssRUFBRSxLQUFLO0lBQ1osVUFBVSxFeENwQlAsT0FBeUI7SXdDcUI1QixhQUFhLEVBQUUsR0FBRztHQUVyQjs7O0FBakNGLEFBbUNDLFdBbkNJLENBbUNKLE1BQU0sQUFBQSxNQUFNLENBQUM7RUFHWCxVQUFVLEV2Q29CUixPQUFnQjtFdUNuQmxCLEtBQUssRUFBRSxJQUFJO0NBQ1o7O0FDL0NMLEFBR0UsY0FIWSxHQUdWLENBQUMsQUFBQSxJQUFLLENBQUEsWUFBWSxFQUFFO0VBQ3BCLFVBQVUsRUFBRSxHQUFHO0NBQ2hCOztBQ0xILEFBVUksV0FWTyxBQVVOLE1BQU0sQUFBQSxRQUFRLENBQUM7RUFDZCxPQUFPLEVBQUUsR0FBRztDQUNiOztBQVpMLEFBY0ksV0FkTyxBQWNOLE1BQU0sQUFBQSxRQUFRLENBQUM7RUFDZCxPQUFPLEVBQUUsR0FBRztDQUNiOztBQWhCTCxBQW1CRSxXQW5CUyxBQW1CUixPQUFPLEFBQUEsUUFBUSxDQUFDO0VBQ2YsT0FBTyxFQUFFLEdBQUc7Q0FDYjs7QVowQ0QsQUFBQSxrQkFBa0IsQ0FBQztFQUNqQixJQUFJLEVBQUUsUUFBUTtDQUNmOztBYS9ESCxBQUFBLFdBQVcsQ0FBQztFQUdWLEtBQUssRUFBRSxJQUFJO0VBQ1gsV0FBVyxFQUFFLEtBQUs7RUFDbEIsT0FBTyxFQUFFLElBQUk7Q0E2R2Q7O0FBbEhELEFBT0UsV0FQUyxDQU9ULElBQUk7QUFQTixXQUFXLENBUVQsSUFBSSxDQUFDO0VBQ0gsVUFBVSxFM0NLRixPQUF5QjtFMkNKakMsSUFBSSxFQUFFLFFBQVE7Q0FDZjs7QUFYSCxBQWFFLFdBYlMsQ0FhVCxJQUFJLEVBQ0gsa0JBQU8sRUFDUCxrQkFBTyxFQUNQLG9CQUFTLENBQUM7RUFHVCxVQUFVLEVBQUUsTUFBTTtDQUNuQjs7QWJ5Q0QsQUFBQSxrQkFBa0IsQ2FsQ1Q7RUFHUCxTQUFTLEVBQUUsSUFBSTtFQUNmLFVBQVUsRUFBRSxJQUFJO0NBS2pCOztBQVRBLEFBTUMsa0JBTk0sQ0FNTixDQUFDLENBQUM7RUFDQSxZQUFZLEVmN0JOLEtBQUs7Q2U4Qlo7O0FBR0YsQUFBRCxrQkFBUSxDQUFDO0VBQ1AsSUFBSSxFQUFFLFFBQVE7RUFDZCxXQUFXLEVBQUUsSUFBSTtDQUtsQjs7QUFQQSxBQUlDLGtCQUpNLENBSU4sSUFBSSxDQUFDO0VBQ0gsT0FBTyxFQUFFLENBQUMsQ2Z0Q0osS0FBSztDZXVDWjs7QUFHRixBQUFELG9CQUFVLENBQUM7RUFDVCxJQUFJLEVBQUUsUUFBUTtFQUNkLFdBQVcsRUFBRSxJQUFJO0VBQ2pCLFVBQVUsRUFBRSxPQUErQjtDQUM1Qzs7QUFuREgsQUFzREksV0F0RE8sQ0FxRFQsSUFBSSxDQUNGLENBQUMsQ0FBQztFQUNBLEtBQUssRXpDeERELE9BQXdDO0V5Q3lENUMsSUFBSSxFQUFFLE9BQU87Q0FDZDs7QUF6REwsQUE4RE0sV0E5REssQ0FxRFQsSUFBSSxBQU1ELE1BQU0sQ0FHTCxDQUFDLENBQUM7RUFDQSxPQUFPLEVBQUUsWUFBWTtDQUN0Qjs7QUFoRVAsQUFtRUksV0FuRU8sQ0FxRFQsSUFBSSxDQWNGLENBQUMsQUFBQSxLQUFLLENBQUM7RUFDTCxPQUFPLEVBQUUsR0FBRztDQUNiOztBQXJFTCxBQXVFSSxXQXZFTyxDQXFEVCxJQUFJLEFBa0JELFFBQVEsQ0FBQyxDQUFDLENBQUM7RUFDVixVQUFVLEVBQUUsT0FBOEI7RUFDMUMsS0FBSyxFQUFFLElBQUk7RUFDWCxPQUFPLEVBQUUsWUFBWTtDQUN0Qjs7QUEzRUwsQUE2RUksV0E3RU8sQ0FxRFQsSUFBSSxBQXdCRCxJQUFJLENBQUM7RUFDSixNQUFNLEUzQ0FELE9BQWU7QzJDQ3JCOztBQS9FTCxBQW1FSSxXQW5FTyxDQXFEVCxJQUFJLENBY0YsQ0FBQyxBQUFBLEtBQUssQ0FjQztFQUNMLE9BQU8sRUFBRSxHQUFHO0NBQ2I7O0FyQ3JCRCxNQUFNLEVBQUcsU0FBUyxFQUFFLEtBQUs7RXFDOUQ3QixBQXFERSxXQXJEUyxDQXFEVCxJQUFJLENBQUM7SUFpQ0QsT0FBTyxFQUFFLElBQUk7R0FNaEI7RUE1RkgsQUF3Rk0sV0F4RkssQ0FxRFQsSUFBSSxBQW1DQyxlQUFnQixDQUFBLE9BQU8sRUFBRTtJQUN4QixPQUFPLEVBQUUsSUFBSTtHQUNkOzs7QUExRlAsQUE4RkUsV0E5RlMsQ0E4RlQsSUFBSSxDQUFDO0VBR0gsV0FBVyxFMUNvQkEsR0FBRyxDQUNILEtBQUssQ0R4Q1QsT0FBZTtFMkNvQnRCLFdBQVcsRUFBRSxLQUFLO0NBQ25COztBQW5HSCxBQXFHRSxXQXJHUyxDQXFHVCxJQUFJLENBQUM7RUFDSCxXQUFXLEVBQUUsSUFBSTtFQUNqQixLQUFLLEUzQ2xFSyxPQUFpQjtDMkNtRTVCOztBQXhHSCxBQTBHRSxXQTFHUyxDQTBHVCxLQUFLLENBQUM7RUFDSixLQUFLLEUxQzVDRCxPQUFnQjtDMEM2Q3JCOztBQTVHSCxBQThHRSxXQTlHUyxDQThHVCxZQUFZLENBQUM7RUFDWCxVQUFVLEVBQUUsSUFBSTtFQUNoQixPQUFPLEVBQUUsR0FBRztDQUNiOztBQ25ISCxBQUFBLElBQUksQ0FBQztFQUdILGNBQWMsRUFBRSxTQUFTO0VBQ3pCLFdBQVcsRUFBRSxHQUFHO0Vkd0JoQixVQUFVLEVBRGEsR0FBRyxDRlJOLEtBQUs7Q2dCTTFCOztBQWpCQyxNQUFNLEVBQUUsS0FBSyxFQUFFLEtBQUs7RUFSdEIsQUFTSSxJQVRBLEFBU0MsTUFBTSxBQUFBLElBQUssQ0FBQSxTQUFTLENBQUMsSUFBSyxFQUFBLEFBQUEsUUFBQyxBQUFBLEdBQVc7SUFDckMsVUFBVSxFQUFFLE9BQWlDO0lBQzdDLEtBQUssRUFBRSxJQUFJO0dBQ1o7OztBQVpMLEFBZUUsSUFmRSxBQWVELE9BQU8sQ0FBQztFQUNQLFVBQVUsRTVDdUJBLE9BQWlCLEM0Q3ZCRixVQUFVO0VBQ25DLEtBQUssRUFBRSxJQUFJO0NBQ1o7O0FBbEJILEFBb0JFLElBcEJFLEFBb0JELFNBQVMsRUFwQlosSUFBSSxDQXFCRCxBQUFBLFFBQUMsQUFBQSxFQUFVO0VBQ1YsT0FBTyxFQUFFLEdBQUc7RUFDWixNQUFNLEVBQUUsT0FBTztDQUNoQjs7QUN4QkgsQUFBQSxXQUFXLENBQUM7RUFFVixRQUFRLEVBQUUsUUFBUTtFQUNsQixXQUFXLEVBQUUsUUFBUTtDQUN0Qjs7QUFFRCxBQUFBLFdBQVcsR0FBRyxLQUFLLENBQUM7RUFDbEIsT0FBTyxFQUFFLEtBQUs7RUFDZCxRQUFRLEVBQUUsUUFBUTtFQUNsQixNQUFNLEVBQUUsT0FBTztFQUNmLE9BQU8sRUFBRSxJQUFJO0VBQ2IsbUJBQW1CLEVBQUUsSUFBSTtFQUN6QixnQkFBZ0IsRUFBRSxJQUFJO0VBQ3RCLE9BQU8sRUFBRSxHQUFHO0VBQ1osS0FBSyxFQUFFLElBQUk7RUFDWCxNQUFNLEVBQUUsSUFBSTtFQUNaLE1BQU0sRUFBRSxHQUFHLENBQUMsS0FBSyxDN0NnRVIsT0FBZTtFNkMvRHhCLGFBQWEsRUFBRSxJQUFJO0NBMkJwQjs7QUF0Q0QsQUFhRSxXQWJTLEdBQUcsS0FBSyxBQWFoQixRQUFRLEVBYlgsV0FBVyxHQUFHLEtBQUssQUFjaEIsT0FBTyxDQUFDO0VBQ1AsT0FBTyxFQUFFLEtBQUs7RUFDZCxRQUFRLEVBQUUsUUFBUTtFQUNsQixPQUFPLEVBQUUsRUFBRTtFQUNYLEtBQUssRUFBRSxJQUFJO0VBQ1gsTUFBTSxFQUFFLElBQUk7RUFDWixNQUFNLEVBQUUsS0FBSztFQUNiLElBQUksRUFBRSxDQUFDO0NBQ1I7O0FBdEJILEFBd0JFLFdBeEJTLEdBQUcsS0FBSyxBQXdCaEIsUUFBUSxDQUFDO0VBRVIsU0FBUyxFQUFFLEdBQUc7RUFDZCxPQUFPLEVBQUUsQ0FBQztFQUNWLFVBQVUsRUFBRSxNQUFNO0VBQ2xCLFdBQVcsRUFBRSxJQUFJO0NBQ2xCOztBQTlCSCxBQWdDRSxXQWhDUyxHQUFHLEtBQUssQUFnQ2hCLE9BQU8sQ0FBQztFQUdQLGFBQWEsRUFBRSxJQUFJO0VBQ25CLFVBQVUsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxrQkFBa0I7Q0FDM0M7O0FBR0gsQUFBQSxXQUFXLEFBQUEsSUFBSyxDQUFBLFFBQVEsSUFBSSxLQUFLLENBQUM7RUFDaEMsZ0JBQWdCLEU1Q2tCVixPQUFnQjtDNENqQnZCOztBQUVELEFBQUEsbUJBQW1CLEFBQUEsSUFBSyxDQUpSLFFBQVEsSUFJWSxLQUFLLENBQUM7RUFDeEMsZ0JBQWdCLEUzQ2xEUixPQUF3QztDMkNtRGpEOztBQUVELEFBQUEsV0FBVyxBQUFBLFFBQVEsR0FBRyxLQUFLLENBQUM7RUFDMUIsZ0JBQWdCLEU3Q2hCSixPQUFpQjtDNkNpQjlCOztBQUVELEFBQUEsV0FBVyxBQUFBLFNBQVMsR0FBRyxLQUFLLENBQUM7RUFDM0IsT0FBTyxFQUFFLEdBQUc7RUFDWixNQUFNLEVBQUUsc0JBQXNCO0NBQy9COztBQU1ELEFBQ0UsV0FEUyxBQUFBLE1BQU0sQUFBQSxJQUFLLENBQUEsU0FBUyxJQUMzQixLQUFLLENBQUM7RWZ4Q1IsVUFBVSxFZTBDWSxVQUFVLENqQm5EWixLQUFLO0NpQjZEeEI7O0FBYkgsQUFLSSxXQUxPLEFBQUEsTUFBTSxBQUFBLElBQUssQ0FBQSxTQUFTLElBQzNCLEtBQUssQUFJSixRQUFRLENBQUM7RUFDUixVQUFVLEVBQUUsTUFBTSxDakJ0REYsS0FBSyxFaUJzRG9CLEtBQUssQ2pCdEQ5QixLQUFLO0NpQnVEdEI7O0FBUEwsQUFTSSxXQVRPLEFBQUEsTUFBTSxBQUFBLElBQUssQ0FBQSxTQUFTLElBQzNCLEtBQUssQUFRSixPQUFPLENBQUM7RWZoRFgsVUFBVSxFZWtEYyxNQUFNLENqQjNEVixLQUFLO0NpQjREdEI7O0FBSUwsQUFDRSxXQURTLEFBQUEsSUFBSyxDQXJDQSxRQUFRLElBcUNJLEtBQUssQUFDOUIsUUFBUSxDQUFDO0VBQ1IsT0FBTyxFQUFFLEdBQUc7RUFDWixLQUFLLEU1Q3JCRCxPQUFnQjtDNENzQnJCOztBQUdILEFBQ0UsbUJBRGlCLEFBQUEsSUFBSyxDQTVDUixRQUFRLElBNENZLEtBQUssQUFDdEMsUUFBUSxDQUFDO0VBQ1IsS0FBSyxFM0MzRkMsT0FBd0M7QzJDNEYvQzs7QUFHSCxBQUNFLFdBRFMsQUFBQSxRQUFRLEdBQUcsS0FBSyxBQUN4QixRQUFRLEVBRFgsV0FBVyxBQUFBLFFBQVEsR0FBRyxLQUFLLEFBRXhCLE9BQU8sQ0FBQztFQUNQLFdBQVcsRUFBRSxJQUFJO0NBQ2xCOztBQUpILEFBTUUsV0FOUyxBQUFBLFFBQVEsR0FBRyxLQUFLLEFBTXhCLFFBQVEsQ0FBQztFQUNSLE9BQU8sRUFBRSxHQUFHO0VBQ1osS0FBSyxFN0NqRUssT0FBaUI7QzZDa0U1Qjs7QUN0RkgsQUFBQSxLQUFLLEFBQUEsTUFBTSxDQUFDO0VBQ1Ysa0JBQWtCLEVBQUUsSUFBSTtFQUN4QixVQUFVLEVBQUUsSUFBSTtFQUNoQixNQUFNLEVBQUUsQ0FBQztDQTZDVjs7QUFoREQsQUFLRSxLQUxHLEFBQUEsTUFBTSxBQUtSLE1BQU0sQ0FBQztFQUNOLE9BQU8sRUFBRSxJQUFJO0NBQ2Q7O0FBUEgsQUFTRSxLQVRHLEFBQUEsTUFBTSxBQVNSLCtCQUErQixDQUFDO0VBaEJqQyxLQUFLLEVBQUUsSUFBSTtFQUNYLE1BQU0sRUFBRSxHQUFHO0VBQ1gsTUFBTSxFQUFFLE9BQU87RUFDZixVQUFVLEU1Q2RGLE9BQXdDO0U0Q2VoRCxhQUFhLEVBQUUsS0FBSztDQWNuQjs7QUFYSCxBQWFFLEtBYkcsQUFBQSxNQUFNLEFBYVIsc0JBQXNCLENBQUM7RTlDd0R4QixVQUFVLEVBQUUsaURBQW1GO0U4Q3JGL0YsTUFBTSxFQUFFLEdBQUcsQ0FBQyxLQUFLLEM1Q0ZULE9BQXdDO0U0Q0doRCxNQUFNLEVBQUUsR0FBRztFQUNYLEtBQUssRUFBRSxLQUFLO0VBQ1osYUFBYSxFQUFFLElBQUk7RUFDbkIsVUFBVSxFOUNTQSxPQUF5QjtFOENSbkMsTUFBTSxFQUFFLE9BQU87RUEyQmIsa0JBQWtCLEVBQUUsSUFBSTtFQUN4QixVQUFVLEVBQUUsTUFBTTtDQUNuQjs7QUFsQkgsQUFvQkUsS0FwQkcsQUFBQSxNQUFNLEFBb0JSLGtCQUFrQixDQUFDO0VBM0JwQixLQUFLLEVBQUUsSUFBSTtFQUNYLE1BQU0sRUFBRSxHQUFHO0VBQ1gsTUFBTSxFQUFFLE9BQU87RUFDZixVQUFVLEU1Q2RGLE9BQXdDO0U0Q2VoRCxhQUFhLEVBQUUsS0FBSztDQXlCbkI7O0FBdEJILEFBd0JFLEtBeEJHLEFBQUEsTUFBTSxBQXdCUixrQkFBa0IsQ0FBQztFOUM2Q3BCLFVBQVUsRUFBRSxpREFBbUY7RThDckYvRixNQUFNLEVBQUUsR0FBRyxDQUFDLEtBQUssQzVDRlQsT0FBd0M7RTRDR2hELE1BQU0sRUFBRSxHQUFHO0VBQ1gsS0FBSyxFQUFFLEtBQUs7RUFDWixhQUFhLEVBQUUsSUFBSTtFQUNuQixVQUFVLEU5Q1NBLE9BQXlCO0U4Q1JuQyxNQUFNLEVBQUUsT0FBTztDQXFDZDs7QUExQkgsQUE0QkUsS0E1QkcsQUFBQSxNQUFNLEFBNEJSLFdBQVcsQ0FBQztFQW5DYixLQUFLLEVBQUUsSUFBSTtFQUNYLE1BQU0sRUFBRSxHQUFHO0VBQ1gsTUFBTSxFQUFFLE9BQU87RUFDZixVQUFVLEU1Q2RGLE9BQXdDO0U0Q2VoRCxhQUFhLEVBQUUsS0FBSztDQWlDbkI7O0FBOUJILEFBZ0NFLEtBaENHLEFBQUEsTUFBTSxBQWdDUixnQkFBZ0IsQ0FBQztFQUNoQixVQUFVLEVBQUUseUJBQXlCO0VBQ3JDLGFBQWEsRUFBRSxNQUFNO0NBQ3RCOztBQW5DSCxBQXFDRSxLQXJDRyxBQUFBLE1BQU0sQUFxQ1IsZ0JBQWdCLENBQUM7RUFDaEIsVUFBVSxFQUFFLHlCQUF5QjtFQUNyQyxhQUFhLEVBQUUsTUFBTTtDQUN0Qjs7QUF4Q0gsQUEwQ0UsS0ExQ0csQUFBQSxNQUFNLEFBMENSLFdBQVcsQ0FBQztFOUMyQmIsVUFBVSxFQUFFLGlEQUFtRjtFOENyRi9GLE1BQU0sRUFBRSxHQUFHLENBQUMsS0FBSyxDNUNGVCxPQUF3QztFNENHaEQsTUFBTSxFQUFFLEdBQUc7RUFDWCxLQUFLLEVBQUUsS0FBSztFQUNaLGFBQWEsRUFBRSxJQUFJO0VBQ25CLFVBQVUsRTlDU0EsT0FBeUI7RThDUm5DLE1BQU0sRUFBRSxPQUFPO0VBd0RiLFlBQVksRUFBRSxXQUFXO0VBQ3pCLEtBQUssRUFBRSxXQUFXO0NBQ25COztBQzVESCxBQ05BLE9ETU8sQ0FXTCxJQUFJLENDakJBO0VBR0osT0FBTyxFQUFFLFlBQVk7RUFDckIsTUFBTSxFQUFFLE9BQU87Q0FDaEI7O0FEQ0QsQUFBQSxPQUFPLENBQUM7RUFDTixXQUFXLEVBQUUsTUFBTTtDQW9WcEI7O0FBOVVFLEFBQUQsY0FBUSxDQUFDO0VBQ1AsT0FBTyxFQUFFLGVBQWU7Q0FDekI7O0FBVEgsQUFjSSxPQWRHLENBV0wsSUFBSSxBQUdELFdBQVcsQ0FBQztFQUNYLEtBQUssRUFuQkksT0FBTztDQW9CakI7O0FBaEJMLEFBaUJJLE9BakJHLENBV0wsSUFBSSxBQU1ELFFBQVEsQ0FBQztFQUNSLEtBQUssRUFyQkMsT0FBTztDQXNCZDs7QUFuQkwsQUFvQkksT0FwQkcsQ0FXTCxJQUFJLEFBU0QsUUFBUSxDQUFDO0VBQ1IsS0FBSyxFQXZCQyxPQUFPO0NBd0JkOztBQUdGLEFBQUQsY0FBUSxDQUFDLElBQUksQ0FBQztFQUNaLFNBQVMsRUFBRSxPQUFPO0VBQ2xCLE9BQU8sRUFBRSxLQUFLO0NBQ2Y7O0FBRUEsQUFBRCxjQUFRLENBQUMsSUFBSSxDQUFDO0VBQ1osT0FBTyxFQUFFLGFBQWE7RUFDdEIsV0FBVyxFQUFFLE1BQU07RUFDbkIsV0FBVyxFQUFFLElBQUk7Q0FDbEI7O0FBbENILEFBb0NFLE9BcENLLENBb0NMLElBQUksQUFBQSxPQUFPLENBQUM7RUFDVixLQUFLLEUvQ1RHLE9BQWtCO0MrQ1UzQjs7QUF0Q0gsQUF3Q0UsT0F4Q0ssQ0F3Q0wsT0FBTyxDQUFDLENBQUMsQ0FBQztFQUNSLGNBQWMsRUFBRSxHQUFHO0NBQ3BCOztBQTFDSCxBQTRDRSxPQTVDSyxDQTRDTCxJQUFJLEFBQUEsUUFBUSxDQUFDO0VBQ1gsTUFBTSxFQUFFLEdBQUcsQ0FBQyxLQUFLLEM5Q0FWLE9BQWtCO0M4Q0MxQjs7QUE5Q0gsQUFnREUsT0FoREssQ0FnREwsSUFBSSxBQUFBLE9BQU8sQ0FBQztFQUNWLFdBQVcsRUFBRSxJQUFJO0VBQ2pCLFVBQVUsRUFBRSxPQUErQjtDQUM1Qzs7QUFuREgsQUF5REUsT0F6REssQ0F5REwsSUFBSSxBQUFBLFFBQVEsQ0FBQztFQUNYLFVBQVUsRUFBRSxNQUFNO0NBQ25COztBQTNESCxBQThESSxPQTlERyxDQTZETCxJQUFJLEFBQUEsSUFBSyxDQUFBLE1BQU0sQ0FBQyxNQUFNO0FBN0R4QixPQUFPLENBNkRMLElBQUksQUFBQSxJQUFLLENBQUEsTUFBTSxDQUFDLE1BQU0sQ0FFcEIsS0FBSztBQS9EVCxPQUFPLENBNkRMLElBQUksQUFBQSxJQUFLLENBQUEsTUFBTSxDQUFDLE1BQU0sQ0FHcEIsSUFBSSxDQUFDO0VBQ0gsVUFBVSxFL0NyQ0osT0FBa0I7RStDc0N4QixLQUFLLEU5Q2xDTSxJQUFJO0M4Q21DaEI7O0FBbkVMLEFBMEVFLE9BMUVLLENBMEVMLElBQUksQUFBQSxNQUFNLENBQUM7RUFDVCxLQUFLLEU3Q2hGQyxPQUF3QztFNkNpRjlDLE1BQU0sRUFBRSxPQUFPO0NBQ2hCOztBQTdFSCxBQStFRSxPQS9FSyxDQStFTCxJQUFJLENBQUMsS0FBSyxDQUFDO0VBQ1QsU0FBUyxFQUFFLEdBQUc7RUFDZCxLQUFLLEU3Q3RGQyxPQUF3QztDNkN1Ri9DOztBQWxGSCxBQW9GRSxPQXBGSyxDQW9GTCxJQUFJLEFBQUEsYUFBYSxDQUFDO0VBQ2hCLFVBQVUsRTlDeENILE9BQWtCO0U4Q3lDekIsS0FBSyxFOUN0Q08sSUFBSTtDOEMyQ2pCOztBQTNGSCxBQXdGSSxPQXhGRyxDQW9GTCxJQUFJLEFBQUEsYUFBYSxDQUlmLEtBQUssQ0FBQztFQUNKLEtBQUssRTlDekNLLElBQUk7QzhDMENmOztBQUdGLEFBQUQsY0FBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7RUFDbEIsWUFBWSxFQUFFLEdBQUc7Q0FDbEI7O0FBRUEsQUFBRCxjQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQUFBQSxZQUFZLENBQUM7RUFDOUIsWUFBWSxFQUFFLENBQUM7Q0FDaEI7O0FBRUEsQUFBRCxjQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztFQUNsQixhQUFhLEVBQUUsS0FBSztFQUNwQixXQUFXLEVBQUUsT0FBTztDQUNyQjs7QUF4R0gsQUEwR0UsT0ExR0ssQ0EwR0wsSUFBSSxDQUFDLElBQUksQ0FBQztFQUNSLEtBQUssRS9DeEZBLE9BQWU7QytDeUZyQjs7QUFFQSxBQUFELGNBQVEsR0FBRyxJQUFJLENBQUM7RUFDZCxJQUFJLEVBQUUsU0FBUztFQUNmLE9BQU8sRUFBRSxJQUFJO0VBQ2IsU0FBUyxFQUFFLE9BQU87RUFDbEIsV0FBVyxFQUFFLE1BQU07RUFDbkIsT0FBTyxFQUFFLGVBQWU7Q0FDekI7O0FBRUEsQUFBRCxjQUFRLEdBQUcsS0FBSyxHQUFHLElBQUksQ0FBQztFQUN0QixZQUFZLEUvQzdDTCxPQUFlO0MrQzhDdkI7O0FBeEhILEFBMEhFLE9BMUhLLENBMEhMLElBQUksQ0FBQztFQUdILElBQUksRUFBRSxRQUFRO0VBQ2QsVUFBVSxFQUFFLEtBQUs7RUFDakIsU0FBUyxFQUFFLEtBQUs7RUFDaEIsS0FBSyxFN0NySUMsT0FBd0M7QzZDc0kvQzs7QUFqSUgsQUFtSUUsT0FuSUssQ0FtSUwsS0FBSyxDQUFDO0VBR0osV0FBVyxFQUFFLE1BQU07RUFDbkIsY0FBYyxFQUFFLE1BQU07Q0FDdkI7O0FBeElILEFBMElFLE9BMUlLLENBMElMLE1BQU0sQ0FBQztFQUNMLFNBQVMsRUFBRSxLQUFLO0VBQ2hCLFdBQVcsRUFBRSxLQUFLO0VBQ2xCLFVBQVUsRUFBRSxLQUFLO0VBQ2pCLEtBQUssRS9DN0dLLE9BQWlCO0MrQ2tINUI7O0FBbkpILEFBK0lJLE9BL0lHLENBMElMLE1BQU0sQUFLSCxRQUFRLENBQUM7RUFFUixPQUFPLEVBQUUsR0FBRztDQUNiOztBQUdGLEFBQUQsY0FBUSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7RUFDcEIsSUFBSSxFQUFFLFFBQVE7RUFDZCxVQUFVLEVBQUUsTUFBTTtFQUNsQixRQUFRLEVBQUUsTUFBTTtFQUNoQixTQUFTLEVBQUUsTUFBTTtDQUNsQjs7QUFFQSxBQUFELGNBQVEsR0FBRyxLQUFLLENBQUM7RUFDZixJQUFJLEVBQUUsT0FBTztFQUNiLE9BQU8sRUFBRSxJQUFJO0VBQ2IsZUFBZSxFQUFFLE1BQU07RUFDdkIsWUFBWSxFOUMvQ0QsR0FBRyxDQUNILEtBQUssQ0R4Q1QsT0FBZTtFK0N1RnRCLFVBQVUsRS9DbkpELE9BQXlCO0UrQ29KbEMsV0FBVyxFQUFFLE1BQU07RUFDbkIsS0FBSyxFN0N4S0MsT0FBd0M7QzZDeUsvQzs7QUFwS0gsQUFzS0UsT0F0S0ssR0FzS0gsU0FBUyxDQUFDO0VBQ1YsU0FBUyxFQUFFLEdBQUc7Q0FDZjs7QUFFQSxBQUFELGNBQVEsR0FBRyxTQUFTLENBQUM7RUFDbkIsSUFBSSxFQUFFLFFBQVE7RUFDZCxVQUFVLEUvQzlKRCxPQUF5QjtFK0MrSmxDLFVBQVUsRUFBRSxHQUFHLENBQUMsS0FBSyxDL0NuR2QsT0FBZTtFK0NvR3RCLGFBQWEsRUFBRSxHQUFHLENBQUMsS0FBSyxDL0NwR2pCLE9BQWU7RStDcUd0QixTQUFTLEVBQUUsSUFBSTtDQUNoQjs7QUFFQSxBQUFELGNBQVEsR0FBRyxTQUFTLEdBQUcsT0FBTyxDQUFDO0VBRzdCLE9BQU8sRUFBRSxLQUFLO0VBQ2QsT0FBTyxFQUFFLE9BQU87Q0FDakI7O0FBRUEsQUFBRCxjQUFRLENBQUMsT0FBTyxDQUFDO0VBQ2YsY0FBYyxFQUFFLEdBQUc7RUFDbkIsU0FBUyxFQUFFLFVBQVU7RUFDckIsTUFBTSxFQUFFLGVBQWU7RUFDdkIsU0FBUyxFQUFFLEtBQUs7Q0FDakI7O0FBOUxILEFBZ01FLE9BaE1LLENBZ01MLE9BQU8sQ0FBQyxHQUFHLENBQUM7RUFHVixPQUFPLEVBQUUsWUFBWTtFQUNyQixjQUFjLEVBQUUsTUFBTTtFQUN0QixTQUFTLEVBQUUsS0FBSztFQUNoQixPQUFPLEVBQUUsR0FBRztFQUNaLFlBQVksRUFBRSxLQUFLO0VBQ25CLFNBQVMsRUFBRSxHQUFHO0NBQ2Y7O0FBRUEsQUFBRCxjQUFRLENBQUMsT0FBTyxBQUFBLE1BQU0sQ0FBQztFQUNyQixXQUFXLEVBQUUsU0FBUztDQUN2Qjs7QUFFQSxBQUFELGNBQVEsQ0FBQyxPQUFPLEFBQUEsTUFBTSxDQUFDO0VBQ3JCLFlBQVksRUFBRSxTQUFTO0VBQ3ZCLFVBQVUsRUFBRSxNQUFNO0NBQ25COztBQUVBLEFBQUQsY0FBUSxDQUFDLE9BQU8sQUFBQSxXQUFXLENBQUM7RUFDMUIsWUFBWSxFQXpORCxPQUFPO0NBME5uQjs7QUFFQSxBQUFELGNBQVEsQ0FBQyxPQUFPLEFBQUEsUUFBUSxDQUFDO0VBQ3ZCLFlBQVksRUE1TkosT0FBTztDQTZOaEI7O0FBRUEsQUFBRCxjQUFRLENBQUMsT0FBTyxBQUFBLFFBQVEsQ0FBQztFQUN2QixZQUFZLEVBL05KLE9BQU87Q0FnT2hCOztBQUVBLEFBQUQsY0FBUSxDQUFDLE9BQU8sQUFBQSxVQUFVLENBQUM7RUFDekIsWUFBWSxFQUFFLE9BQU87Q0FDdEI7O0FBbE9ILEFBb09FLE9BcE9LLENBb09MLElBQUksQ0FBQyxPQUFPLENBQUM7RUFDWCxTQUFTLEVBQUUsR0FBRztDQUNmOztBQUVBLEFBQUQsY0FBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7RUFDcEIsT0FBTyxFQUFFLE1BQU07RUFDZixLQUFLLEU3Qy9PQyxPQUF3QztFNkNnUDlDLFNBQVMsRUFBRSxVQUFVO0VBQ3JCLE9BQU8sRUFBRSxXQUFXO0VBQ3BCLGNBQWMsRUFBRSxHQUFHO0NBQ3BCOztBQTlPSCxBQWdQRSxPQWhQSyxDQWdQTCxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQztFQUNmLFNBQVMsRUFBRSxHQUFHO0VBQ2QsY0FBYyxFQUFFLEdBQUc7Q0FDcEI7O0FBblBILEFBcVBFLE9BclBLLENBcVBMLEtBQUssQ0FBQztFQUNKLE9BQU8sRUFBRSxLQUFLO0VBQ2QsVUFBVSxFQUFFLEdBQUc7RUFDZixXQUFXLEVBQUUsR0FBRztFQUNoQixhQUFhLEVBQUUsS0FBSztFQUNwQixXQUFXLEVBQUUsR0FBRyxDQUFDLEtBQUssQy9DaExmLE9BQWU7QytDaUx2Qjs7QUEzUEgsQUE2UEUsT0E3UEssR0E2UEgsU0FBUyxHQUFHLEtBQUssQ0FBQztFQUNsQixXQUFXLEVBQUUsR0FBRztDQUNqQjs7QUEvUEgsQUFpUUUsT0FqUUssQ0FpUUwsS0FBSyxBQUFBLE9BQU8sQ0FBQztFQUNYLFdBQVcsRUFBRSxJQUFJO0NBQ2xCOztBQW5RSCxBQXFRRSxPQXJRSyxDQXFRTCxLQUFLLEFBQUEsV0FBVyxDQUFDO0VBQ2YsYUFBYSxFQUFFLENBQUM7Q0FDakI7O0FBdlFILEFBeVFFLE9BelFLLENBeVFMLElBQUksQ0FBQztFQUNILE9BQU8sRUFBRSxLQUFLO0VBQ2QsWUFBWSxFQUFFLEdBQUc7Q0FDbEI7O0FBRUEsQUFBRCxjQUFRLENBQUMsSUFBSSxDQUFDO0VBQ1osTUFBTSxFQUFFLEtBQUs7Q0FDZDs7QUFoUkgsQUFrUkUsT0FsUkssQ0FrUkwsS0FBSyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUM7RUFDZixTQUFTLEVBQUUsSUFBSTtDQUNoQjs7QUFwUkgsQUFzUkUsT0F0UkssQ0FzUkwsS0FBSyxDQUFDLEtBQUssQ0FBQztFQUNWLFdBQVcsRUFBRSxHQUFHO0NBQ2pCOztBQXhSSCxBQTBSRSxPQTFSSyxDQTBSTCxLQUFLLENBQUMsS0FBSyxBQUFBLFFBQVEsQ0FBQztFQUNsQixPQUFPLEVBQUUsR0FBRztFQUNaLFVBQVUsRUFBRSxHQUFHLENBQUMsS0FBSyxDL0NsTmQsT0FBZTtFK0NtTnRCLFFBQVEsRUFBRSxRQUFRO0VBQ2xCLFdBQVcsRUFBRSxLQUFLO0VBQ2xCLEtBQUssRUFBRSxHQUFHO0VBQ1YsTUFBTSxFQUFFLEdBQUc7Q0FDWjs7QUFqU0gsQUFtU0UsT0FuU0ssQ0FtU0wsS0FBSyxDQUFDLElBQUksQUFBQSxRQUFRLENBQUM7RUFDakIsVUFBVSxFQUFFLE1BQU07RUFDbEIsV0FBVyxFQUFFLElBQUk7RUFDakIsT0FBTyxFQUFFLEdBQUc7RUFDWixVQUFVLEVBQUUsR0FBRyxDQUFDLEtBQUssQy9DN05kLE9BQWU7RStDOE50QixRQUFRLEVBQUUsUUFBUTtFQUNsQixLQUFLLEVBQUUsR0FBRztFQUNWLE1BQU0sRUFBRSxHQUFHO0NBQ1o7O0FBM1NILEFBNlNFLE9BN1NLLENBNlNMLEtBQUssQ0FBQyxLQUFLLEFBQUEsV0FBVyxDQUFDO0VBQ3JCLGFBQWEsRUFBRSxDQUFDO0NBQ2pCOztBQS9TSCxBQWlURSxPQWpUSyxDQWlUTCxNQUFNLENBQUM7RUFDTCxPQUFPLEVBQUUsTUFBTTtFQUNmLFVBQVUsRUFBRSxNQUFNO0VBQ2xCLFNBQVMsRUFBRSxLQUFLO0VBQ2hCLE9BQU8sRUFBRSxHQUFHO0NBQ2I7O0FBdFRILEFBd1RFLE9BeFRLLENBd1RMLE1BQU0sQUFBQSxRQUFRO0FBeFRoQixPQUFPLENBeVRMLE1BQU0sQUFBQSxPQUFPLENBQUM7RUFDWixjQUFjLEVBQUUsS0FBSztFQUNyQixPQUFPLEVBQUUsR0FBRztFQUNaLFNBQVMsRUFBRSxLQUFLO0NBQ2pCOztBQTdUSCxBQStURSxPQS9USyxDQStUTCxNQUFNLEFBQUEsUUFBUSxDQUFDO0VBQ2IsT0FBTyxFQUFFLEdBQUc7RUFDWixXQUFXLEVBQUUsR0FBRztDQUNqQjs7QUFsVUgsQUFvVUUsT0FwVUssQ0FvVUwsTUFBTSxBQUFBLE9BQU8sQ0FBQztFQUNaLE9BQU8sRUFBRSxHQUFHO0VBQ1osWUFBWSxFQUFFLEdBQUc7Q0FDbEI7O0FBRUEsQUFBRCxjQUFRLENBQUMsTUFBTSxBQUFBLFFBQVE7QUFDdEIsY0FBTyxDQUFDLE1BQU0sQUFBQSxPQUFPLENBQUM7RUFDckIsY0FBYyxFQUFFLEtBQUs7Q0FDdEI7O0FBNVVILEFBOFVFLE9BOVVLLENBOFVMLFFBQVEsQ0FBQztFQUNQLE9BQU8sRUFBRSxHQUFHO0NBQ2I7O0FBaFZILEFBa1ZFLE9BbFZLLENBa1ZMLEtBQUssQ0FBQztFQUNKLE9BQU8sRUFBRSxJQUFJO0NBQ2Q7O0FHMVZILEFBQUEsTUFBTSxDQUFDO0VBR0wsUUFBUSxFQUFFLFFBQVE7RUFDbEIsT0FBTyxFQUFFLElBQUk7RUFDYixXQUFXLEVBQUUsT0FBTztDQTRIckI7O0FBaklELEFBT0UsTUFQSSxBQU9ILFFBQVEsQ0FBQztFQUNSLFdBQVcsRUFBRSxHQUFHO0VBQ2hCLE1BQU0sRUFBRSxJQUFJO0NBS2I7O0FBZEgsQUFXSSxNQVhFLEFBT0gsUUFBUSxDQUlQLFlBQVksQ0FBQztFQUNYLFVBQVUsRUFBRSxPQUFPO0NBQ3BCOztBQWJMLEFBZ0JFLE1BaEJJLENBZ0JKLE9BQU8sQ0FBQztFQUdOLElBQUksRUFBRSxRQUFRO0VBQ2QsWUFBWSxFQUFFLEdBQUc7Q0FDbEI7O0FBckJILEFBdUJFLE1BdkJJLENBdUJKLEtBQUssQ0FBQztFQUNKLElBQUksRUFBRSxRQUFRO0VBQ2QsV0FBVyxFQUFFLElBQUk7RUFDakIsU0FBUyxFQUFFLEtBQUs7RUFDaEIsVUFBVSxFQUFFLE1BQU07RUFDbEIsV0FBVyxFQUFFLElBQUk7Q0FDbEI7O0FBN0JILEFBK0JFLE1BL0JJLENBK0JKLElBQUk7QUEvQk4sTUFBTSxDQWdDSixPQUFPLENBQUM7RUFHTixJQUFJLEVBQUUsUUFBUTtFQUNkLFNBQVMsRUFBRSxJQUFJO0VBQ2YsV0FBVyxFQUFFLElBQUk7RUFDakIsVUFBVSxFQUFFLEdBQUc7RUFDZixLQUFLLEVoRHRDQyxPQUF3QztDZ0R1Qy9DOztBQXhDSCxBQTJDSSxNQTNDRSxDQTBDSixPQUFPLENBQ0wsTUFBTSxDQUFDO0VBR0wsV0FBVyxFQUFFLEdBQUc7RUFDaEIsVUFBVSxFbER2Q04sT0FBMEI7RWtEd0M5QixLQUFLLEVqREZRLElBQUk7RWlER2pCLE9BQU8sRUFBRSxPQUFPO0VBQ2hCLGNBQWMsRUFBRSxTQUFTO0VBQ3pCLFNBQVMsRUFBRSxJQUFJO0NBQ2hCOztBQXBETCxBQXNESSxNQXRERSxDQTBDSixPQUFPLENBWUwsS0FBSyxDQUFDO0VBQ0osT0FBTyxFQUFFLEtBQUs7RUFDZCxXQUFXLEVBQUUsTUFBTTtDQUNwQjs7QUF6REwsQUEyREksTUEzREUsQ0EwQ0osT0FBTyxDQWlCTCxPQUFPLENBQUM7RUFDTixLQUFLLEVsRDFCQyxPQUFrQjtFa0QyQnhCLFdBQVcsRUFBRSxHQUFHO0NBQ2pCOztBQTlETCxBQWdFSSxNQWhFRSxDQTBDSixPQUFPLENBc0JMLE9BQU8sQUFBQSxRQUFRLENBQUM7RUFDZCxjQUFjLEVBQUUsSUFBSTtDQUNyQjs7QUFsRUwsQUFxRUUsTUFyRUksQ0FxRUosV0FBVyxDQUFDO0VBQ1YsV0FBVyxFQUFFLEdBQUc7Q0FJakI7O0FBMUVILEFBdUVJLE1BdkVFLENBcUVKLFdBQVcsQUFFUixLQUFLLENBQUM7RUFDTCxLQUFLLEVsRGpDRyxPQUFpQjtDa0RrQzFCOztBQXpFTCxBQTRFRSxNQTVFSSxDQTRFSixJQUFJLENBQUM7RUFDSCxRQUFRLEVBQUUsUUFBUTtFQUNsQixLQUFLLEVBQUUsSUFBSTtFQUNYLE1BQU0sRUFBRSxHQUFHO0VBQ1gsR0FBRyxFQUFFLEdBQUc7Q0FDVDs7QUFFRCxVQUFVLENBQVYsUUFBVTtFQUNSLElBQUk7SUFDRixtQkFBbUIsRUFBRSxHQUFHOztFQUcxQixFQUFFO0lBQ0EsbUJBQW1CLEVBQUUsVUFBVTs7OztBQXpGckMsQUE2RkUsTUE3RkksQ0E2RkosSUFBSSxDQUFDLElBQUksQ0FBQztFQUNSLE9BQU8sRUFBRSxLQUFLO0VBQ2QsTUFBTSxFQUFFLEdBQUc7RUFDWCxLQUFLLEVBQUUsQ0FBQztFQUNSLFVBQVUsRWxEMURBLE9BQWlCO0VrRDJEM0IsVUFBVSxFQUFFLFFBQVE7Q0FLckI7O0FBdkdILEFBb0dJLE1BcEdFLENBNkZKLElBQUksQ0FBQyxJQUFJLEFBT04sT0FBTyxDQUFDO0VBQ1AsVUFBVSxFakRwQ1IsT0FBZ0I7Q2lEcUNuQjs7QUF0R0wsQUF5R0UsTUF6R0ksQUF5R0gsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7RUFDcEIsZ0JBQWdCLEVoRHJHVixrQ0FBNEI7RWdEc0dsQyxTQUFTLEVBQUUsOEJBQThCO0NBQzFDOztBQTVHSCxBQThHRSxNQTlHSSxDQThHSixZQUFZLENBQUM7RUFDWCxJQUFJLEVBQUUsU0FBUztFQUNmLFdBQVcsRUFBRSxJQUFJO0VBQ2pCLEtBQUssRWhEaEhDLE9BQXdDO0VnRGlIOUMsU0FBUyxFQUFFLEtBQUs7RUFDaEIsYUFBYSxFQUFFLEtBQUs7RUFDcEIsUUFBUSxFQUFFLE1BQU07RUFDaEIsVUFBVSxFQUFFLE1BQU07Q0FXbkI7O0FBaElILEFBdUhJLE1BdkhFLENBOEdKLFlBQVksQUFTVCxNQUFNLEFBQUEsSUFBSyxDQUFBLE9BQU8sR0F2SHZCLE1BQU0sQ0E4R0osWUFBWSxBQVVULE9BQU8sQ0FBQztFQUNQLEtBQUssRWpEeERILE9BQWdCO0NpRHlEbkI7O0FBMUhMLEFBNEhJLE1BNUhFLENBOEdKLFlBQVksQUFjVCxPQUFPLENBQUM7RUFDUCxPQUFPLEVBQUUsR0FBRztFQUNaLE1BQU0sRUFBRSxPQUFPO0NBQ2hCOztBQy9ITCxBQUFBLE9BQU8sQ0FBQztFQUNOLFFBQVEsRUFBRSxRQUFRO0VBQ2xCLFVBQVUsRW5EY0EsT0FBeUI7RW1EYm5DLFNBQVMsRUFBRSxJQUFJO0NBNEVoQjs7QUEvRUQsQUFLRSxPQUxLLENBS0wsR0FBRyxDQUFDO0VBQ0YsUUFBUSxFQUFFLFFBQVE7RUFDbEIsT0FBTyxFQUFFLElBQUk7RUFDYixTQUFTLEVBQUUsSUFBSTtFQUNmLFdBQVcsRUFBRSxHQUFHO0VBQ2hCLFVBQVUsRWxENkdDLEdBQUcsQ0FDSCxLQUFLLENEeENULE9BQWU7RW1EckV0QixhQUFhLEVBQUUsSUFBSTtDQWtEcEI7O0FBN0RILEFBYUksT0FiRyxDQUtMLEdBQUcsQUFRQSxXQUFXLENBQUM7RUFDWCxPQUFPLEVBQUUsS0FBSztFQUNkLFNBQVMsRUFBRSxPQUFPO0VBQ2xCLE1BQU0sRUFBRSxHQUFHO0NBRVo7O0FBbEJMLEFBb0JJLE9BcEJHLENBS0wsR0FBRyxDQWVBLEFBQUEsUUFBQyxBQUFBLENBQVMsTUFBTSxDQUFDO0VBQ2hCLFVBQVUsRUFBRSxPQUFpQztFQUM3QyxNQUFNLEVBQUUsT0FBTztDQUNoQjs7QUF2QkwsQUF5QkksT0F6QkcsQ0FLTCxHQUFHLENBb0JELE1BQU0sQ0FBQztFQUNMLE9BQU8sRUFBRSxZQUFZO0VBQ3JCLEtBQUssRUFBRSxJQUFJO0VBQ1gsVUFBVSxFQUFFLE1BQU07Q0FDbkI7O0FBN0JMLEFBK0JJLE9BL0JHLENBS0wsR0FBRyxDQTBCRCxJQUFJLENBQUM7RUFHSCxXQUFXLEVBQUUsR0FBRztDQUNqQjs7QUFuQ0wsQUFxQ0ksT0FyQ0csQ0FLTCxHQUFHLENBZ0NBLEFBQUEsUUFBQyxBQUFBLEVBQVUsT0FBTyxBQUFBLE1BQU0sQ0FBQztFQUN4QixLQUFLLEVuREpDLE9BQWtCO0NtREt6Qjs7QUF2Q0wsQUF5Q0ksT0F6Q0csQ0FLTCxHQUFHLENBb0NELGVBQWUsQ0FBQztFQUNkLFFBQVEsRUFBRSxRQUFRO0VBQ2xCLEtBQUssRUFBRSxDQUFDO0VBQ1IsT0FBTyxFQUFFLEtBQUs7RUFDZCxNQUFNLEVBQUUsQ0FBQztFQUNULE1BQU0sRUFBRSxPQUFPO0VBQ2YsR0FBRyxFQUFFLEdBQUc7Q0FTVDs7QUF4REwsQUFpRE0sT0FqREMsQ0FLTCxHQUFHLENBb0NELGVBQWUsQUFRWixNQUFNLENBQUM7RUFDTixVQUFVLEVuRFhKLE9BQWlCO0VtRFl2QixLQUFLLEVsRExNLElBQUk7Q2tETWhCOztBQXBEUCxBQXFETSxPQXJEQyxDQUtMLEdBQUcsQ0FvQ0QsZUFBZSxBQVlaLFFBQVEsQ0FBQztFQUNSLE9BQU8sRUFBRSxJQUFJO0NBQ2Q7O0FBdkRQLEFBMERJLE9BMURHLENBS0wsR0FBRyxBQXFEQSxXQUFXLENBQUMsZUFBZSxDQUFDO0VBQzNCLFNBQVMsRUFBRSxjQUFjO0NBQzFCOztBQTVETCxBQStERSxPQS9ESyxDQStETCxTQUFTLENBQUM7RUFFUixRQUFRLEVBQUUsUUFBUTtFQUNsQixLQUFLLEVBQUUsR0FBRztFQUNWLElBQUksRUFBRSxJQUFJO0VBQ1YsU0FBUyxFQUFFLEtBQUs7RUFDaEIsT0FBTyxFQUFFLENBQUM7Q0FTWDs7QUM5RUgsQWxCY0ksSWtCZEEsQ2xCY0U7RUFDQSxXQUFRLEVrQmR1QixHQUFHO0NsQjBCbkM7O0FBVkMsTUFBTSxFQUFFLFNBQVMsRUFBRSxLQUFLO0VrQmpCOUIsQWxCY0ksSWtCZEEsQ2xCY0U7SUFJRSxXQUFRLEVBQUUsd0NBR1Q7R0FNSjs7O0FBSEMsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNO0VrQnhCL0IsQWxCY0ksSWtCZEEsQ2xCY0U7SUFXRSxXQUFRLEVrQnhCMEIsSUFBSTtHbEIwQnpDOzs7QWtCdkJMLEFBQUEsV0FBVyxDQUFDO0VBQ1YsS0FBSyxFQUFFLGdCQUFnQjtFQUN2QixRQUFRLEVBQUUsUUFBUTtFQUNsQixVQUFVLEVBQXlCLE9BQU87RUFDMUMsUUFBUSxFQUFFLE1BQU07Q0EyQ2pCOztBOUNhRyxNQUFNLEVBQUcsU0FBUyxFQUFFLEtBQUssT0FBTyxXQUFXLEVBQUUsUUFBUTtFOEM1RHpELEFBQUEsV0FBVyxDQUFDO0lBT1IsT0FBTyxFQUFFLElBQUk7R0F3Q2hCOzs7QUEvQ0QsQUFVRSxXQVZTLEFBVVIsUUFBUSxDQUFDO0VBQ1IsU0FBUyxFQUFFLGVBQWU7Q0FDM0I7O0FBWkgsQUFjRSxXQWRTLEFBY1IsT0FBTyxDQUFDO0VBQ1AsT0FBTyxFQUFFLEVBQUU7RUFDWCxPQUFPLEVBQUUsS0FBSztFQUNkLFFBQVEsRUFBRSxRQUFRO0VBQ2xCLEdBQUcsRUFBRSxDQUFDO0VBQ04sTUFBTSxFQUFFLENBQUM7RUFDVCxJQUFJLEVBQUUsQ0FBQztFQUNQLEtBQUssRUFBRSxDQUFDO0VBQ1IsVUFBVSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFDLEtBQUs7Q0FDN0M7O0FBdkJILEFBeUJFLFdBekJTLENBeUJULElBQUksQ0FBQztFQUNILFFBQVEsRUFBRSxRQUFRO0VBQ2xCLEdBQUcsRUFBRSxDQUFDO0VBQ04sSUFBSSxFQUFFLENBQUM7RUFDUCxLQUFLLEVBQUUsSUFBSTtFQUNYLGFBQWEsRUFBRSxHQUFHLENBQUMsS0FBSyxDQUF3QixPQUFPO0VBQ3ZELE9BQU8sRUFBRSxHQUFHO0NBQ2I7O0FBaENILEFBa0NFLFdBbENTLENBa0NULElBQUksQUFBQSxLQUFLLENBQUM7RUFDUixHQUFHLEVBQUUsR0FBRztFQUNSLE9BQU8sRUFBRSxDQUFDO0VBQ1YsYUFBYSxFQUFFLEdBQUcsQ0FBQyxLQUFLLENBQUMscUJBQXdCO0VBQ2pELFVBQVUsRUFBRSxJQUFJO0NBQ2pCOztBQXZDSCxBQXlDRSxXQXpDUyxDQXlDVCxNQUFNLENBQUM7RUFDTCxLQUFLLEVBQUUsSUFBSTtFQUNYLE1BQU0sRUFBRSxHQUFHO0VBQ1gsVUFBVSxFQUF5QixJQUFJO0VBQ3ZDLFVBQVUsRUFBRSxTQUFTO0NBQ3RCOztBQ2xESCxBQUFBLGlCQUFpQixDQUFDO0VBRWhCLE9BQU8sRUFBRSxJQUFJO0VBQ2IsZUFBZSxFQUFFLGFBQWE7RUFDOUIsV0FBVyxFQUFFLE9BQU87RUFDcEIsU0FBUyxFQUFFLE1BQU07Q0F5QmxCOztBQTlCRCxBQU9FLGlCQVBlLENBT2YsSUFBSSxDQUFDO0VBR0gsVUFBVSxFQUFFLE1BQU07Q0FDbkI7O0FBWEgsQUFhRSxpQkFiZSxDQWFmLE9BQU8sQ0FBQztFQUNOLFVBQVUsRUFBRSxNQUFNO0NBQ25COztBQWZILEFBaUJFLGlCQWpCZSxDQWlCZixNQUFNLENBQUM7RUFDTCxPQUFPLEVBQUUsSUFBSTtDQVdkOztBQTdCSCxBQW9CSSxpQkFwQmEsQ0FpQmYsTUFBTSxDQUdKLElBQUksQ0FBQztFQUNILElBQUksRUFBRSxPQUFPO0NBT2Q7O0FBNUJMLEFBdUJNLGlCQXZCVyxDQWlCZixNQUFNLENBR0osSUFBSSxBQUdELFlBQVksRUF2Qm5CLGlCQUFpQixDQWlCZixNQUFNLENBR0osSUFBSSxBQUlELFdBQVcsQ0FBQztFQUNYLElBQUksRUFBRSxPQUFPO0VBQ2IsU0FBUyxFQUFFLEtBQUs7Q0FDakI7O0FDM0JQLEFBQUEsaUJBQWlCLENBQUM7RUFHaEIsVUFBVSxFQUFFLHFCQUF5QjtFQUNyQyxPQUFPLEU1QkVVLEdBQUc7QzRCaUNyQjs7QUF2Q0QsQUFNRSxpQkFOZSxDQU1mLE1BQU0sQ0FBQztFQUNMLE1BQU0sRUFBRSxPQUFPO0VBQ2YsYUFBYSxFQUFFLEdBQUc7RUFDbEIsZ0JBQWdCLEVBQUUsT0FBTztFQUN6QixVQUFVLEVBQUUsMEJBQTBCO0V4QmtCeEMsVUFBVSxFQURhLEdBQUcsQ0ZSTixLQUFLO0MwQk54Qjs7QUFiSCxBQWVFLGlCQWZlLENBZWYsS0FBSyxDQUFDO0VBQ0osY0FBYyxFQUFFLElBQUk7RUFDcEIsT0FBTyxFQUFFLENBQUM7RUFFVix1QkFBdUI7Q0FDeEI7O0FBRUQsQUFBQSxLQUFLLENBdEJQLGlCQUFpQixDQXNCUCxLQUFLLENBQUM7RUFDWixLQUFLLEVBQUUsSUFBSTtFQUNYLE1BQU0sRUFBRSxJQUFJO0V4QklkLFVBQVUsRUFEYSxHQUFHLENGUk4sS0FBSztFMEJTdkIsU0FBUyxFQUFFLFVBQVU7Q0FDdEI7O0FBN0JILEFBK0JFLGlCQS9CZSxDQStCZixNQUFNLEFBQUEsTUFBTSxDQUFDO0VBQ1gsVUFBVSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENyRG1CdkIsT0FBa0I7RXFEbEJ6QixhQUFhLEVBQUUsRUFBRTtDQUNsQjs7QUFFRCxBQUFBLEtBQUssQ0FwQ1AsaUJBQWlCLENBb0NQLE1BQU0sQUFBQSxNQUFNLENBQUMsS0FBSyxDQUFDO0VBQ3pCLFNBQVMsRUFBRSxJQUFJO0NBQ2hCOztBQ3RDSCxBQUNFLG9CQURrQixDQUFDLFFBQVEsQUFDMUIsUUFBUSxDQUFDLFlBQVksQUFBQSxRQUFRLENBQUM7RUFHN0IsVUFBVSxFQUFFLHdCQUFxQjtFQUNqQyxLQUFLLEVBQUUsSUFBSTtFQUNYLE1BQU0sRUFBRSxLQUFLO0VBQ2IsT0FBTyxFQUFFLEVBQUU7RUFDWCxRQUFRLEVBQUUsUUFBUTtFQUNsQixJQUFJLEVBQUUsQ0FBQztFQUNQLE9BQU8sRUFBRSxDQUFDO0VBQ1YsY0FBYyxFQUFFLElBQUk7Q0FDckI7O0FBWkgsQUFjRSxvQkFka0IsQ0FBQyxRQUFRLEFBYzFCLGtCQUFrQixDQUFDLFlBQVksQUFBQSxRQUFRLENBQUM7RUFDdkMsR0FBRyxFQUFFLENBQUM7Q0FDUDs7QUFoQkgsQUFrQkUsb0JBbEJrQixDQUFDLFFBQVEsQUFrQjFCLGtCQUFrQixDQUFDLFlBQVksQUFBQSxRQUFRLENBQUM7RUFDdkMsTUFBTSxFQUFFLENBQUM7Q0FDVjs7QUFHSCxBQUFBLHNCQUFzQixDQUFDLFlBQVksQUFBQSxRQUFRLENBQUM7RUFDMUMsS0FBSyxFQUFFLEdBQUc7RUFDVixNQUFNLEVBQUUsR0FBRztFQUNYLFVBQVUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxrQkFBa0I7RUFDdkMsVUFBVSxFQUFFLHdCQUFxQjtFQUNqQyxPQUFPLEVBQUUsRUFBRTtFQUNYLFFBQVEsRUFBRSxRQUFRO0VBQ2xCLEdBQUcsRUFBRSxLQUFLO0VBQ1YsSUFBSSxFQUFFLEtBQUs7RUFDWCxPQUFPLEVBQUUsQ0FBQztFQUNWLGNBQWMsRUFBRSxJQUFJO0NBQ3JCOztBS2pDRSxBSENILGVHRFUsQ0FTTixRQUFRLEVDVlosWUFBWSxDSkVVO0VBQ3BCLGFBQWEsRXhEb0hBLEdBQUcsQ0FDSCxLQUFLLENEeENULE9BQWU7Q3lEeEV6Qjs7QW5Ed0RHLE1BQU0sRUFBRyxTQUFTLEVBQUUsS0FBSyxJQUFLLFdBQVcsRUFBRSxTQUFTO0VzRC9EckQsQUhDSCxlR0RVLENBU04sUUFBUSxFQ1ZaLFlBQVksQ0pFVTtJQUlsQixhQUFhLEVBQUUsR0FBRyxDQUFDLEtBQUssQ3pEaUNkLE9BQWlCO0d5RC9COUI7OztBcEJSRCxBQUFBLElBQUksQ3NCQUM7RUFDSCx3REFBd0Q7RUFDeEQsVUFBVSxFQUFFLE1BQU07Q0FDbkI7O0FBRUQsQUFBQSxVQUFVLENBQUM7RUFDVCxnQkFBZ0IsQ0FBQSxpRkFBQztDQUtsQjs7QXJEcURHLE1BQU0sRUFBRyxTQUFTLEVBQUUsS0FBSyxJQUFLLFdBQVcsRUFBRSxTQUFTO0VxRDNEeEQsQUFBQSxVQUFVLENBQUM7SUFJUCxnQkFBZ0IsQ0FBQSxLQUFDO0dBRXBCOzs7QUFFRCxBQUFBLFFBQVEsQ0FBQztFQUNQLFNBQVMsRUFBRSxJQUFJO0VBQ2YsT0FBTyxFQUFFLElBQUk7RUE0Q2IsYUFBYSxDQUFBLEtBQUM7RUFNZCxrQkFBa0IsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLGtCQUFrQjtFQUNoRCxtQkFBbUIsRUFBRSwrREFBK0Q7Q0EwQ3JGOztBQTNGRSxBQUFELGNBQU8sQ0FBQztFQUNOLFNBQVMsRUFBRSxJQUFJO0VBQ2YsZUFBZSxFQUFFLEtBQUs7RUFDdEIsTUFBTSxFL0JiRSxLQUFLO0MrQmNkOztBQUVBLEFBQUQsZUFBUTtBQVZWLFFBQVEsQ0FXTixXQUFXLENBQUM7RUFDVixTQUFTLEVBQUUsS0FBSztDQUNqQjs7QUFFQSxBQUFELGVBQVEsQ0FBQztFQUNQLFNBQVMsRUFBRSxLQUFLO0NBQ2pCOztBQUVBLEFBQUQsa0JBQVcsQ0FBQztFQUNWLFNBQVMsRUFBRSxRQUFRO0NBQ3BCOztBQUVBLEFBQUQsb0JBQWEsQ0FBQztFQUNaLFNBQVMsRUFBRSxLQUFLO0NBT2pCOztBckRvQkMsTUFBTSxFQUFHLFNBQVMsRUFBRSxLQUFLLE9BQU8sV0FBVyxFQUFFLFFBQVE7RXFENUJ0RCxBQUFELG9CQUFhLENBQUM7SUFJVixRQUFRLEVBQUUsTUFBTTtHQUluQjs7O0FBRUEsQUFBRCxjQUFPLENBQUM7RUFDTixTQUFTLEVBQUUsSUFBSTtDQUNoQjs7QUFuQ0gsQUFxQ0UsUUFyQ00sQ0FxQ04sY0FBYyxDQUFDO0VBQ2IsU0FBUyxFQUFFLEtBQUs7Q0FDakI7O0FBdkNILEFBeUNFLFFBekNNLENBeUNOLFdBQVcsQ0FBQztFQUNWLFNBQVMsRUFBRSxLQUFLO0VBQ2hCLE9BQU8sRUFBRSxJQUFJO0NBQ2Q7O0E3QmE4QixTQUFDLEVBQXJCLE1BQU0sRUFBRSxXQUFXO0U2QnpEaEMsQUFBQSxRQUFRLENBQUM7SUFpREwsYUFBYSxDQUFBLFlBQUM7R0E4Q2pCOzs7QXJENUNHLE1BQU0sRUFBRyxTQUFTLEVBQUUsS0FBSyxJQUFLLFdBQVcsRUFBRSxTQUFTO0VxRG5EeEQsQUFBQSxRQUFRLENBQUM7SUF3REwscUJBQXFCLEU5QnJESCxnSkFBMEQsQzhCcURoQyxnQkFBZ0IsQzlCMUQxQyxvQkFBb0I7SThCMkR0QyxrQkFBa0IsRUFBRSxjQUFjO0lBQ2xDLG1CQUFtQixFQUFFLG9KQUFvSjtJQUN6SyxZQUFZLEVBQUUsQ0FBQztHQW9DbEI7RUFsQ0ksQUFBRCxjQUFPO0VBN0RYLFFBQVEsQ0E4REosY0FBYztFQTlEbEIsUUFBUSxDQStESixNQUFNLENBQUM7SUFDTCxNQUFNLEUvQnRFQSxLQUFLLEMrQnNFUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7R0FDekI7RUExQ0YsQUFBRCxvQkFBYSxDQTRDRztJQUNaLFVBQVUsRS9CMUVKLEtBQUs7RytCMkVaO0VBckVMLEFBeUNFLFFBekNNLENBeUNOLFdBQVcsQ0E4Qkc7SUFDVixPQUFPLEVBQUUsS0FBSztHQUNmOzs7QXJEdEJELE1BQU0sRUFBRyxTQUFTLEVBQUUsS0FBSyxPQUFPLFdBQVcsRUFBRSxTQUFTO0VxRG5EMUQsQUFBQSxRQUFRLENBQUM7SUE2RUwscUJBQXFCLEU5QnpESyx1R0FBZ0YsQzhCeUR0RCxnQkFBZ0IsQzlCMUQxQyxvQkFBb0I7RzhCNEVqRDs7O0FyRDVDRyxNQUFNLEVBQUcsU0FBUyxFQUFFLE1BQU07RXFEbkQ5QixBQUFBLFFBQVEsQ0FBQztJQWlGTCxxQkFBcUIsRTlCcEZKLG1CQUFtQixDREg1QixLQUFLLENDU0ssZ0pBQTBELEM4QjhFRCxnQkFBZ0IsQzlCbkZ6RSxvQkFBb0I7SThCb0Z0QyxrQkFBa0IsRUQzRlIsa0JBQWtCLENBQ2xCLGNBQWMsQ0MwRnNCLEtBQUssQ0FBQyxJQUFJO0lBQ3hELG1CQUFtQixFQUFFLHlIQUF5SDtHQVlqSjtFQTNGRSxBQUFELGNBQU8sQ0FpRkc7SUFDTixVQUFVLEVBQUUsQ0FBQztHQUNkO0VBdkZMLEFBeUZJLFFBekZJLENBeUZKLE1BQU0sQ0FBQztJQUNMLFVBQVUsRUFBRSxJQUFJO0dBQ2pCO0VBM0ZMLEE3QjRDRSxRNkI1Q00sQzdCNENOLGtCQUFrQixDQUFDO0lBQ2pCLElBQUksRUFBRSxRQUFRO0dBQ2Y7OztBNkIvQkEsQUFBRCxlQUFRLENDM0JDO0VBR1AsVUFBVSxFNURZRixPQUF5QjtDNERNbEM7O0FBckJBLEFBS0MsZUFMTSxDQUtOLE1BQU0sQ0FBQztFQUNMLElBQUksRUFBRSxRQUFRO0NBQ2Y7O0FBUEYsQUFTQyxlQVRNLENBU04sUUFBUSxDQUFDO0VBR1AsV0FBVyxFQUFFLElBQUk7Q0FRbEI7O0FBcEJGLEFBY0csZUFkSSxDQVNOLFFBQVEsQ0FLTixNQUFNLENBQUM7RUFDTCxTQUFTLEVBQUUsTUFBTTtFQUNqQixXQUFXLEVBQUUsS0FBSztFQUNsQixVQUFVLEVBQUUsT0FBaUM7RUFDN0MsT0FBTyxFQUFFLEtBQUs7Q0FDZjs7QUFJSixBQUFELGVBQVEsQ0FBQztFQUNQLElBQUksRUFBRSxLQUFLO0VBR1gsVUFBVSxFQUFFLElBQUk7RUFDaEIsVUFBVSxFQUFFLE1BQU07RUFHbEIsVUFBVSxFM0R1RkMsR0FBRyxDQUNILEtBQUssQ0R4Q1QsT0FBZTtFNEQvQ3RCLFFBQVEsRUFBRSxRQUFRO0VBRWxCLHVEQUF1RDtDQW1CeEQ7O0FBOUJBLEFBWUMsZUFaTSxDQVlOLE9BQU87QUFaUixlQUFPLENBYU4sT0FBTyxDQUFDO0VBQ04sVUFBVSxFNURsQkgsT0FBeUI7RTREbUJoQyxVQUFVLEVBQUUsTUFBTTtDQUNuQjs7QUFoQkYsQUFrQkMsZUFsQk0sQ0FrQk4sT0FBTyxDQUFDO0VBQ04sVUFBVSxFM0Q0RUQsR0FBRyxDQUNILEtBQUssQ0R4Q1QsT0FBZTtFNERwQ3BCLFdBQVcsRUFBRSxJQUFJO0VBQ2pCLFNBQVMsRUFBRSxLQUFLO0VBQ2hCLE9BQU8sRUFBRSxXQUFXO0NBQ3JCOztBQXZCRixBQXlCQyxlQXpCTSxDQXlCTixPQUFPLENBQUM7RUFDTixTQUFTLEVBQUUsR0FBRztFQUNkLFVBQVUsRUFBRSxNQUFNO0VBQ2xCLGNBQWMsRUFBRSxHQUFHO0NBQ3BCOztBRHJCRixBQUFELGtCQUFXLENDd0JDO0VBQ1YsTUFBTSxFL0I3Q2UsSUFBSTtFK0I4Q3pCLFdBQVcsRUFBRSxPQUFPO0NBMEJyQjs7QUE1QkEsQUFJQyxrQkFKUyxDQUlULEdBQUcsQ0FBQztFQUNGLE9BQU8sRUFBRSxJQUFJO0VBQ2IsSUFBSSxFQUFFLFFBQVE7RUFDZCxXQUFXLEVBQUUsT0FBTztDQUNyQjs7QUFSRixBQVVDLGtCQVZTLENBVVQsTUFBTSxDQUFDO0VBQ0wsSUFBSSxFQUFFLFFBQVE7Q0FDZjs7QUFaRixBQWNDLGtCQWRTLENBY1QsSUFBSSxDQUFDO0VBR0gsSUFBSSxFQUFFLFVBQVU7Q0FDakI7O0FBbEJGLEFBb0JDLGtCQXBCUyxDQW9CVCxPQUFPLENBQUM7RUFDTixVQUFVLEVBQUUsSUFBSTtFQUNoQixXQUFXLEVBQUUsR0FBRztDQUNqQjs7QUF2QkYsQUF5QkMsa0JBekJTLENBeUJULFFBQVEsQ0FBQztFQUNQLGNBQWMsRUFBRSxNQUFNO0NBQ3ZCOztBQ25GTCxBQUFBLFlBQVksQ0FBQztFQUdYLElBQUksRUFBRSxLQUFLO0VBR1gsT0FBTyxFQUFFLElBQUk7RUFDYixTQUFTLEVBQUUsTUFBTTtFQUNqQixRQUFRLEVBQUUsSUFBSTtFQUNkLE9BQU8sRWpDRkcsS0FBSztDaUMySGhCOztBQWxJRCxBQVdFLFlBWFUsQ0FXVixFQUFFLENBQUM7RUFDRCxTQUFTLEVBQUUsR0FBRztFQUNkLGNBQWMsRUFBRSxTQUFTO0VBQ3pCLFVBQVUsRUFBRSxNQUFNO0VBQ2xCLFdBQVcsRUFBRSxNQUFNO0VBQ25CLE1BQU0sRWpDVEUsS0FBSyxDaUNTTSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7RUFDMUIsT0FBTyxFQUFFLEtBQUs7RUFDZCxPQUFPLEVBQUUsTUFBTTtDQW1CaEI7O0FBckNILEFBb0JJLFlBcEJRLENBV1YsRUFBRSxBQVNDLE9BQU8sRUFwQlosWUFBWSxDQVdWLEVBQUUsQUFVQyxNQUFNLENBQUM7RUFDTixVQUFVLEU1RGlHRCxHQUFHLENBQ0gsS0FBSyxDRHhDVCxPQUFlO0U2RHpEcEIsT0FBTyxFQUFFLEVBQUU7RUFDWCxPQUFPLEVBQUUsVUFBVTtFQUNuQixRQUFRLEVBQUUsUUFBUTtFQUNsQixHQUFHLEVBQUUsS0FBSztFQUNWLEtBQUssRUFBRSxHQUFHO0NBQ1g7O0FBNUJMLEFBOEJJLFlBOUJRLENBV1YsRUFBRSxBQW1CQyxPQUFPLENBQUM7RUFDUCxLQUFLLEVBQUUsR0FBRztDQUNYOztBQWhDTCxBQWtDSSxZQWxDUSxDQVdWLEVBQUUsQUF1QkMsTUFBTSxDQUFDO0VBQ04sSUFBSSxFQUFFLEdBQUc7Q0FDVjs7QUFHRixBQUFELG1CQUFRLENBQUM7RUFDUCxJQUFJLEVBQUUsUUFBUTtFQUNkLE9BQU8sRUFBRSxJQUFJO0VBQ2IsU0FBUyxFQUFFLFFBQVE7Q0F3QnBCOztBQTNCQSxBQUtDLG1CQUxNLEdBS0osQ0FBQyxDQUFDO0VBR0YsSUFBSSxFQUFFLE9BQU87RUFDYixVQUFVLEVBQUUsTUFBTTtFQUNsQixPQUFPLEVBQUUsQ0FBQztFQUNWLE1BQU0sRUFBRSxJQUFJO0VBQ1osZUFBZSxFQUFFLE1BQU07Q0FDeEI7O0FBYkYsQUFlQyxtQkFmTSxDQWVOLE9BQU8sQ0FBQztFQUNOLEtBQUssRTdEOUJGLE9BQWU7RTZEK0JsQixjQUFjLEVBQUUsSUFBSTtFQUNwQixXQUFXLEVBQUUsTUFBTTtDQVFwQjs7QUExQkYsQUFvQkcsbUJBcEJJLENBZU4sT0FBTyxBQUtKLFFBQVEsQ0FBQztFQUNSLE9BQU8sRUFBRSxLQUFLO0VBQ2QsU0FBUyxFQUFFLEdBQUc7RUFDZCxXQUFXLEVBQUUsR0FBRztFQUNoQixhQUFhLEVBQUUsR0FBRztDQUNuQjs7QUFoRVAsQUFvRUUsWUFwRVUsQ0FvRVYsU0FBUyxDQUFDO0VBQ1IsT0FBTyxFQUFFLElBQUk7Q0FTZDs7QUE5RUgsQUF1RUksWUF2RVEsQ0FvRVYsU0FBUyxDQUdQLENBQUMsQ0FBQztFQUNBLEtBQUssRTNEdkVELE9BQXdDO0UyRHdFNUMsU0FBUyxFQUFFLEtBQUs7RUFDaEIsSUFBSSxFQUFFLFFBQVE7RUFDZCxPQUFPLEVBQUUsS0FBSztFQUNkLFVBQVUsRUFBRSxNQUFNO0NBQ25COztBQTdFTCxBQWdGRSxZQWhGVSxDQWdGVixJQUFJLEFBQUEsT0FBTyxDQUFDO0VBQ1YsVUFBVSxFQUFFLEtBQUs7RUFDakIsVUFBVSxFQUFFLEdBQUc7Q0FVaEI7O0FBNUZILEFBb0ZJLFlBcEZRLENBZ0ZWLElBQUksQUFBQSxPQUFPLENBSVQsT0FBTyxDQUFDO0VBQ04sT0FBTyxFQUFFLFlBQVk7RUFDckIsT0FBTyxFQUFFLEtBQUs7Q0FDZjs7QUF2RkwsQUF5RkksWUF6RlEsQ0FnRlYsSUFBSSxBQUFBLE9BQU8sQ0FTVCxPQUFPLEFBQUEsUUFBUSxDQUFDO0VBQ2QsU0FBUyxFQUFFLEtBQUs7Q0FDakI7O0FBM0ZMLEFBOEZFLFlBOUZVLENBOEZWLFFBQVEsQ0FBQztFQUNQLElBQUksRUFBRSxRQUFRO0VBQ2QsVUFBVSxFakN6RkYsS0FBSztFaUMwRmIsT0FBTyxFQUFFLElBQUk7Q0F3QmQ7O0FBekhILEFBbUdJLFlBbkdRLENBOEZWLFFBQVEsQ0FLTixLQUFLLENBQUM7RUFDSixJQUFJLEVBQUUsUUFBUTtFQUNkLE1BQU0sRUFBRSxPQUFPO0VBQ2YsV0FBVyxFQUFFLE1BQU07Q0FDcEI7O0FBdkdMLEFBeUdJLFlBekdRLENBOEZWLFFBQVEsQ0FXTixLQUFLLENBQUEsQUFBQSxJQUFDLENBQUssT0FBTyxBQUFaLEVBQWM7RUFDbEIsSUFBSSxFQUFFLFFBQVE7RUFDZCxPQUFPLEVBQUUsU0FBUztFQUNsQixNQUFNLEVBQUUsS0FBSztFQUNiLEtBQUssRUFBRSxJQUFJO0NBS1o7O0FBbEhMLEFBK0dNLFlBL0dNLENBOEZWLFFBQVEsQ0FXTixLQUFLLENBQUEsQUFBQSxJQUFDLENBQUssT0FBTyxBQUFaLEVBTUgsQUFBQSxHQUFDLENBQUksR0FBRyxBQUFQLEVBQVM7RUFDVCxPQUFPLEVBQUUsQ0FBQztDQUNYOztBQWpIUCxBQW9ISSxZQXBIUSxDQThGVixRQUFRLENBc0JOLFlBQVksQ0FBQztFQUNYLElBQUksRUFBRSxRQUFRO0VBQ2QsT0FBTyxFQUFFLEtBQUs7RUFDZCxVQUFVLEVBQUUsS0FBSztDQUNsQjs7QXZEeERELE1BQU0sRUFBRyxTQUFTLEVBQUUsS0FBSyxPQUFPLFdBQVcsRUFBRSxRQUFRO0V1RGhFekQsQUE0SEksWUE1SFEsQ0E0SFIsYUFBYSxDQUFDO0lBQ1osT0FBTyxFQUFFLElBQUk7R0FDZDs7O0FDOUhMLEFBQUEsYUFBYSxDQUFDO0VBQ1osUUFBUSxFQUFFLFFBQVE7RUFDbEIsSUFBSSxFQUFFLFNBQVM7RUFDZixXQUFXLEVBQUUsTUFBTTtFaEN5Qm5CLFVBQVUsRUFEYSxHQUFHLENGUk4sS0FBSztFa0NaekIsZ0JBQWdCLEVBQUUsSUFBSTtFQUN0QixVQUFVLEVBQUUsTUFBTTtFQUNsQixTQUFTLEVBQUUsS0FBSztDQWtVakI7O0FBM1VELEFBV0UsYUFYVyxBQVdWLFFBQVEsQ0FBQztFQUNSLElBQUksRUFBRSxTQUFTO0NBS2hCOztBQWpCSCxBQWNJLGFBZFMsQUFXVixRQUFRLEFBR04sTUFBTSxDQUFDO0VBQ04sSUFBSSxFQUFFLE9BQU87Q0FDZDs7QUFoQkwsQUFtQkUsYUFuQlcsQ0FtQlgsUUFBUSxDQUFDO0VBR1AsT0FBTyxFQUFFLElBQUk7Q0FDZDs7QUF2QkgsQUF5QkUsYUF6QlcsQUF5QlYsUUFBUSxDQUFDLFFBQVEsQ0FBQztFQUNqQixPQUFPLEVBQUUsS0FBSztDQUNmOztBQTNCSCxBQTZCRSxhQTdCVyxDQTZCWCxLQUFLLENBQUM7RWhDRE4sVUFBVSxFQURhLEdBQUcsQ0ZSTixLQUFLO0NrQ1l4Qjs7QUEvQkgsQUFpQ0UsYUFqQ1csQUFpQ1YsUUFBUSxDQUFDLEtBQUssQ0FBQztFQUNkLE9BQU8sRUFBRSxHQUFHO0NBQ2I7O0FBbkNILEFBcUNFLGFBckNXLENBcUNYLE1BQU0sQ0FBQyxJQUFJLENBQUM7RUFDVixPQUFPLEVBQUUsS0FBSztFQUNkLFlBQVksRUFBRSxLQUFLO0VBQ25CLFFBQVEsRUFBRSxNQUFNO0VBQ2hCLGFBQWEsRUFBRSxRQUFRO0VBQ3ZCLFdBQVcsRUFBRSxJQUFJO0NBQ2xCOztBQTNDSCxBQTZDRSxhQTdDVyxDQTZDWCxNQUFNLENBQUM7RUFDTCxPQUFPLEVBQUUsSUFBSTtFQUNiLFNBQVMsRUFBRSxNQUFNO0VBQ2pCLE1BQU0sRUFBRSxJQUFJO0NBS2I7O0FBckRILEFBa0RJLGFBbERTLENBNkNYLE1BQU0sQ0FLSixRQUFRLENBQUM7RUFDUCxVQUFVLEVBQUUsTUFBTTtDQUNuQjs7QUFwREwsQUF1REUsYUF2RFcsQ0F1RFgsRUFBRSxDQUFDO0VoQzNCSCxVQUFVLEVBRGEsR0FBRyxDRlJOLEtBQUs7Q2tDOEN4Qjs7QUFqRUgsQUEwREksYUExRFMsQ0F1RFgsRUFBRSxBQUdDLFVBQVcsQ0FBQSxJQUFJLEVBQUU7RUFDaEIsVUFBVSxFOUR2Q0gsT0FBeUI7QzhEd0NqQzs7QUE1REwsQUE4REksYUE5RFMsQ0F1RFgsRUFBRSxBQU9DLE1BQU0sQ0FBQztFQUNOLFVBQVUsRUFBRSxPQUFpQztDQUM5Qzs7QUFoRUwsQUFtRUUsYUFuRVcsQ0FtRVgsRUFBRSxDQUFDO0VBQ0QsTUFBTSxFQUFFLE9BQU87RUFDZixZQUFZLEVBQUUsR0FBRztDQUNsQjs7QUF0RUgsQUF3RUUsYUF4RVcsQ0F3RVgsTUFBTSxDQUFDLEVBQUUsQUFBQSxZQUFZLENBQUM7RUFHcEIsV0FBVyxFQUFFLElBQUk7RUFDakIsWUFBWSxFQUFFLEdBQUc7Q0FDbEI7O0FBN0VILEFBK0VFLGFBL0VXLENBK0VYLE1BQU0sQ0FBQyxFQUFFLEFBQUEsVUFBVyxDQUFBLENBQUMsRUFBRTtFQUNyQixTQUFTLEVBQUUsTUFBTTtFQUNqQixVQUFVLEVBQUUsS0FBSztDQUNsQjs7QUFsRkgsQUFvRkUsYUFwRlcsQ0FvRlgsTUFBTSxDQUFDLEVBQUUsQUFBQSxXQUFXLENBQUM7RUFDbkIsS0FBSyxFQUFFLElBQUk7RUFDWCxhQUFhLEVBQUUsR0FBRztDQUNuQjs7QUF2RkgsQUF5RkUsYUF6RlcsQ0F5RlgsSUFBSSxDQUFDLElBQUksQ0FBQztFQUNSLFVBQVUsRUFBRSxNQUFNO0VBQ2xCLE9BQU8sRUFBRSxZQUFZO0VBQ3JCLFFBQVEsRUFBRSxNQUFNO0VBQ2hCLGNBQWMsRUFBRSxNQUFNO0VBQ3RCLE1BQU0sRUFBRSxDQUFDLENBQUMsS0FBSyxDOURkUixPQUFlO0U4RGV0QixZQUFZLEVBQUUsS0FBSztFQUNuQixNQUFNLEVBQUUsSUFBSTtFQUNaLFdBQVcsRUFBRSxJQUFJO0VBQ2pCLFNBQVMsRUFBRSxLQUFLO0NBQ2pCOztBQW5HSCxBQXFHRSxhQXJHVyxDQXFHWCxNQUFNLENBQUM7RUFDTCxVQUFVLEVBQXlCLElBQUk7RUFDdkMsVUFBVSxFQUFFLENBQUMsQ0FBRSxJQUFHLENBQUMsR0FBRyxDQUFDLG1CQUEwQyxDQUFDLEtBQUs7RUFHckUsS0FBSyxFQUFFLElBQUk7Q0FFZDs7QUE1R0gsQUE4R0UsYUE5R1csQ0E4R1gsTUFBTTtBQTlHUixhQUFhLENBK0dYLE1BQU0sQ0FBQztFQUNMLEtBQUssRUFBeUIsSUFBSTtFQUNsQyxVQUFVLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsd0JBQStDLENBQUMsS0FBSztDQUM1RTs7QUFsSEgsQUFvSEUsYUFwSFcsQ0FvSFgsTUFBTSxDQUFDO0VBQ0wsVUFBVSxFQUE0QixJQUFJO0NBQzNDOztBQXRISCxBQXdIRSxhQXhIVyxDQXdIWCxNQUFNLENBQUM7RUFDTCxVQUFVLEVBQXlCLElBQUk7RUFDdkMsS0FBSyxFQUFFLElBQUk7Q0FDWjs7QUEzSEgsQUE2SEUsYUE3SFcsQ0E2SFgsSUFBSSxDQUFDLElBQUksQUFBQSxZQUFZLENBQUM7RUFHcEIsaUJBQWlCLEVBQUUsR0FBRztDQUN2Qjs7QUFqSUgsQUFtSUUsYUFuSVcsQ0FtSVgsSUFBSSxDQUFDLElBQUksQUFBQSxXQUFXLENBQUM7RUFHbkIsa0JBQWtCLEVBQUUsR0FBRztDQUN4Qjs7QUF2SUgsQUF5SUUsYUF6SVcsQ0F5SVgsTUFBTSxDQUFDO0VBQ0wsS0FBSyxFQUFFLElBQUk7Q0FDWjs7QUEzSUgsQUE2SUUsYUE3SVcsQ0E2SVgsTUFBTSxDQUFDLEVBQUUsQ0FBQztFQUNSLE9BQU8sRUFBRSxhQUFhO0VBQ3RCLFNBQVMsRUFBRSxLQUFLO0NBQ2pCOztBQWhKSCxBQWtKRSxhQWxKVyxDQWtKWCxNQUFNLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQztFQUdiLE9BQU8sRUFBRSxLQUFLO0NBQ2Y7O0FBdEpILEFBd0pFLGFBeEpXLENBd0pYLE1BQU0sQ0FBQyxNQUFNLENBQUM7RUFDWixPQUFPLEVBQUUsS0FBSztFQUNkLFVBQVUsRUFBRSxNQUFNO0VBQ2xCLE9BQU8sRUFBRSxPQUFPO0VBQ2hCLGFBQWEsRUFBRSxHQUFHO0VBQ2xCLFNBQVMsRUFBRSxLQUFLO0NBQ2pCOztBQTlKSCxBQWdLRSxhQWhLVyxDQWdLWCxVQUFVLENBQUM7RUFDVCxVQUFVLEU5RDFIQSxPQUFpQjtFOEQySDNCLE1BQU0sRUFBRSxPQUFPO0VBQ2YsT0FBTyxFQUFFLENBQUM7Q0FzQlg7O0FBekxILEFBcUtJLGFBcktTLENBZ0tYLFVBQVUsQ0FLUixXQUFXLENBQUM7RUFDVixVQUFVLEVBQUUsTUFBTTtFQUNsQixLQUFLLEU3RHpIUSxJQUFJO0U2RDBIakIsTUFBTSxFQUFFLFdBQVc7Q0FDcEI7O0FBektMLEFBMktJLGFBM0tTLENBZ0tYLFVBQVUsQ0FXUixLQUFLLENBQUM7RUFDSixPQUFPLEVBQUUsSUFBSTtFQUNiLGVBQWUsRUFBRSxhQUFhO0VBQzlCLGNBQWMsRUFBRSxTQUFTO0NBVTFCOztBQXhMTCxBQWdMTSxhQWhMTyxDQWdLWCxVQUFVLENBV1IsS0FBSyxDQUtILENBQUMsQ0FBQztFQUNBLEtBQUssRUFBRSxJQUFJO0VBQ1gsT0FBTyxFQUFFLE9BQU87Q0FDakI7O0FBbkxQLEFBcUxNLGFBckxPLENBZ0tYLFVBQVUsQ0FXUixLQUFLLENBVUgsQ0FBQyxBQUFBLE1BQU0sQ0FBQztFQUNOLFVBQVUsRUFBRSx3QkFBd0I7Q0FDckM7O0FBdkxQLEFBMkxFLGFBM0xXLENBMkxYLFVBQVUsQ0FBQztFQUNULEtBQUssRUFBRSxJQUFJO0NBcUJaOztBQWpOSCxBQThMSSxhQTlMUyxDQTJMWCxVQUFVLENBR1IsRUFBRSxBQUFBLFlBQVksQ0FBQztFQUdiLFNBQVMsRUFBRSxJQUFJO0VBQ2YsV0FBVyxFQUFFLElBQUk7RUFDakIsWUFBWSxFQUFFLEdBQUc7Q0FDbEI7O0FBcE1MLEFBc01JLGFBdE1TLENBMkxYLFVBQVUsQ0FXUixFQUFFLEFBQUEsV0FBVyxDQUFDO0VBQ1osYUFBYSxFQUFFLEdBQUc7RUFDbEIsVUFBVSxFQUFFLEtBQUs7Q0FDbEI7O0FBek1MLEFBMk1JLGFBM01TLENBMkxYLFVBQVUsQ0FnQlIsTUFBTSxDQUFDO0VBQ0wsT0FBTyxFQUFFLE9BQU87RUFDaEIsV0FBVyxFQUFFLEdBQUc7RUFDaEIsYUFBYSxFQUFFLEdBQUc7RUFDbEIsU0FBUyxFQUFFLEtBQUs7Q0FDakI7O0FBaE5MLEFBbU5FLGFBbk5XLENBbU5YLE9BQU8sQ0FBQztFQUNOLFFBQVEsRUFBRSxRQUFRO0VBQ2xCLEdBQUcsRUFBRSxDQUFDO0VBQ04sS0FBSyxFQUFFLENBQUM7RUFDUixNQUFNLEVBQUUsT0FBTztFQUNmLE9BQU8sRUFBRSxLQUFLO0VBQ2QsU0FBUyxFQUFFLEtBQUs7RUFDaEIsS0FBSyxFQUFFLEtBQUs7RUFDWixXQUFXLEVBQUUsS0FBSztFQUNsQixVQUFVLEVBQUUsTUFBTTtFQUNsQixPQUFPLEVBQUUsR0FBRztDQUtiOztBQWxPSCxBQStOSSxhQS9OUyxDQW1OWCxPQUFPLEFBWUosTUFBTSxDQUFDO0VBQ04sT0FBTyxFQUFFLENBQUM7Q0FDWDs7QUFqT0wsQUFvT0UsYUFwT1csQ0FvT1gsUUFBUSxDQUFDO0VBQ1AsVUFBVSxFQUFFLE1BQU07RUFDbEIsVUFBVSxFQUFFLE1BQU07RUFDbEIsSUFBSSxFQUFFLFFBQVE7RUFDZCxPQUFPLEVBQUUsSUFBSTtFQUNiLFNBQVMsRUFBRSxNQUFNO0VBQ2pCLGVBQWUsRUFBRSxNQUFNO0NBQ3hCOztBQTNPSCxBQTZPRSxhQTdPVyxBQTZPVixRQUFRLENBQUMsUUFBUSxDQUFDO0VBQ2pCLGVBQWUsRUFBRSxVQUFVO0NBQzVCOztBQS9PSCxBQWlQRSxhQWpQVyxDQWlQWCxRQUFRLENBQUMsTUFBTSxDQUFDO0VBQ2QsV0FBVyxFQUFFLElBQUk7RUFDakIsTUFBTSxFQUFFLEtBQUs7Q0FDZDs7QUFwUEgsQUFzUEUsYUF0UFcsQUFzUFYsSUFBSyxDQUFBLFFBQVEsRUFBRSxRQUFRLENBQUMsRUFBRTtBQXRQN0IsYUFBYSxBQXVQVixRQUFRLEFBQUEsTUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUM7RUFDMUIsV0FBVyxFQUFFLElBQUk7Q0FDbEI7O0FBelBILEFBMlBFLGFBM1BXLENBMlBYLFFBQVEsQ0FBQyxDQUFDLENBQUM7RUFDVCxXQUFXLEVBQUUsTUFBTTtFQUNuQixPQUFPLEVBQUUsS0FBSztFQUNkLE1BQU0sRUFBRSxTQUFTO0NBQ2xCOztBQS9QSCxBQWlRRSxhQWpRVyxBQWlRVixRQUFRLENBQUMsUUFBUSxDQUFDLENBQUM7QUFqUXRCLGFBQWEsQUFrUVYsUUFBUSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUM7RUFDeEIsT0FBTyxFQUFFLElBQUk7Q0FDZDs7QUFwUUgsQUFzUUUsYUF0UVcsQUFzUVYsUUFBUSxBQUFBLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztBQXRRNUIsYUFBYSxBQXVRVixRQUFRLEFBQUEsTUFBTSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUM7RUFDOUIsT0FBTyxFQUFFLEtBQUs7Q0FDZjs7QUF6UUgsQUEyUUUsYUEzUVcsQ0EyUVgsUUFBUSxDQUFDLE1BQU0sQ0FBQztFQUNkLE1BQU0sRUFBRSxNQUFNO0NBQ2Y7O0FBN1FILEFBK1FFLGFBL1FXLENBK1FYLFFBQVEsQUFBQSxRQUFRLENBQUMsQ0FBQyxDQUFDO0VBQ2pCLFNBQVMsRUFBRSxJQUFJO0VBQ2YsTUFBTSxFQUFFLE1BQU07Q0FDZjs7QUFsUkgsQUFxUkksYUFyUlMsQ0FvUlgsT0FBTyxDQUNMLE9BQU8sQ0FBQztFQUNOLE1BQU0sRUFBRSxLQUFLLENsQy9RUCxLQUFLLENrQytRYyxDQUFDLENsQy9RcEIsS0FBSztDa0NnUlo7O0FBdlJMLEFBeVJJLGFBelJTLENBb1JYLE9BQU8sQ0FLTCxPQUFPLEFBQUEsS0FBSyxDQUFDO0VBQ1gsVUFBVSxFQUFFLE1BQU07RUFDbEIsT0FBTyxFQUFFLGFBQWE7Q0FDdkI7O0FBNVJMLEFBOFJJLGFBOVJTLENBb1JYLE9BQU8sQ0FVTCxLQUFLLENBQUM7RUFDSixXQUFXLEVBQUUsSUFBSTtFQUNqQixPQUFPLEVBQUUsS0FBSztFQUNkLFdBQVcsRUFBRSxHQUFHO0NBQ2pCOztBQWxTTCxBQW9TSSxhQXBTUyxDQW9SWCxPQUFPLENBZ0JMLFFBQVEsQ0FBQztFQUNQLE9BQU8sRUFBRSxJQUFJO0NBb0NkOztBQXpVTCxBQXVTTSxhQXZTTyxDQW9SWCxPQUFPLENBZ0JMLFFBQVEsQ0FHTixJQUFJLENBQUM7RUFDSCxTQUFTLEVBQUUsQ0FBQztFQUNaLE9BQU8sRUFBRSxLQUFLO0VBQ2QsVUFBVSxFQUFFLE1BQU07RUFDbEIsTUFBTSxFQUFFLE9BQU87RWhDL1FyQixVQUFVLEVBRGEsR0FBRyxDRlJOLEtBQUs7RWtDNFJuQixNQUFNLEU3RHhMQyxHQUFHLENBQ0gsS0FBSyxDRHhDVCxPQUFlO0U4RGdPbEIsWUFBWSxFQUFFLGFBQWE7RUFDM0IsY0FBYyxFQUFFLFVBQVU7Q0F1QjNCOztBQXhVUCxBQXVUUSxhQXZUSyxDQW9SWCxPQUFPLENBZ0JMLFFBQVEsQ0FHTixJQUFJLEFBZ0JELFdBQVcsQ0FBQztFQUdYLGtCQUFrQixFQUFFLEdBQUc7Q0FDeEI7O0FBM1RULEFBNlRRLGFBN1RLLENBb1JYLE9BQU8sQ0FnQkwsUUFBUSxDQUdOLElBQUksQUFzQkQsTUFBTSxDQUFDO0VBQ04sVUFBVSxFQUFFLElBQUk7Q0FDakI7O0FBL1RULEFBaVVRLGFBalVLLENBb1JYLE9BQU8sQ0FnQkwsUUFBUSxDQUdOLElBQUksQUEwQkQsU0FBUyxDQUFDO0VBQ1QsVUFBVSxFOUQzUk4sT0FBaUI7RThENFJyQixLQUFLLEU3RHJSSSxJQUFJO0U2RHNSYixXQUFXLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsa0JBQWtCO0VBQ3ZDLFdBQVcsRUFBRSxJQUFJO0VBQ2pCLFVBQVUsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQyxLQUFLO0NBQy9DOztBQ3ZVVCxBQUFBLGFBQWEsQ0FBQztFQUdaLElBQUksRUFBRSxTQUFTO0NBMkVoQjs7QUE5RUQsQUFLRSxhQUxXLENBS1gsU0FBUyxDQUFDO0VBQ1IsSUFBSSxFQUFFLFFBQVE7RUFDZCxPQUFPLEVBQUUsSUFBSTtFQUNiLFNBQVMsRUFBRSxNQUFNO0VBQ2pCLGVBQWUsRUFBRSxNQUFNO0NBQ3hCOztBQVZILEFBWUUsYUFaVyxDQVlYLFNBQVMsQ0FBQztFQUNSLFVBQVUsRUFBRSxHQUFHO0VBQ2YsT0FBTyxFQUFFLEdBQUc7RUFDWixLQUFLLEVBQUUsSUFBSTtFQUNYLE1BQU0sRUFBRSxHQUFHO0VBQ1gsVUFBVSxFN0RoQkosT0FBd0M7QzZEaUIvQzs7QUFsQkgsQUFvQkUsYUFwQlcsQ0FvQlgsU0FBUyxDQUFDLEdBQUcsQ0FBQztFQUNaLFVBQVUsRS9Ea0JBLE9BQWlCO0UrRGpCM0IsTUFBTSxFQUFFLEdBQUc7RUFDWCxVQUFVLEVBQUUsVUFBVTtFQUN0QixTQUFTLEVBQUUsSUFBSTtDQUNoQjs7QUF6QkgsQUEyQkUsYUEzQlcsQ0EyQlgsT0FBTyxDQUFDO0VBQ04sT0FBTyxFQUFFLElBQUk7RUFDYixXQUFXLEVBQUUsTUFBTTtFQUNuQixXQUFXLEVBQUUsSUFBSTtDQUNsQjs7QUEvQkgsQUFpQ0UsYUFqQ1csQ0FpQ1gsVUFBVSxDQUFDO0VBQ1QsS0FBSyxFQUFFLElBQUk7RUFDWCxNQUFNLEVBQUUsSUFBSTtFQUNaLFlBQVksRUFBRSxJQUFJO0NBQ25COztBQUVELEFBQUEsS0FBSyxDQXZDUCxhQUFhLENBdUNILEdBQUcsQUFBQSxVQUFVLENBQUM7RUFDcEIsTUFBTSxFQUFFLElBQUk7Q0FDYjs7QUF6Q0gsQUEyQ0UsYUEzQ1csQ0EyQ1gsS0FBSyxDQUFDO0VBQ0osUUFBUSxFQUFFLE9BQU87RUFDakIsT0FBTyxFQUFFLEtBQUs7RUFDZCxLQUFLLEVBQUUsZUFBZTtFQUN0QixNQUFNLEVBQUUsZUFBZTtDQUN4Qjs7QUFoREgsQUFrREUsYUFsRFcsQ0FrRFgsS0FBSyxDQUFDO0VBQ0osT0FBTyxFQUFFLEtBQUs7RUFDZCxLQUFLLEVBQUUsSUFBSTtFQUNYLE1BQU0sRUFBRSxJQUFJO0VBQ1osWUFBWSxFQUFFLElBQUk7RUFDbEIsU0FBUyxFQUFFLElBQUk7RUFDZixTQUFTLEVBQUUsSUFBSTtFQUNmLFdBQVcsRUFBRSxJQUFJO0VBQ2pCLFVBQVUsRUFBRSxNQUFNO0NBQ25COztBQTNESCxBQTZERSxhQTdEVyxDQTZEWCxZQUFZLEdBQUcsQ0FBQyxDQUFDO0VBQ2YsT0FBTyxFQUFFLEtBQUs7Q0FDZjs7QUEvREgsQUFpRUUsYUFqRVcsQ0FpRVgsWUFBWSxHQUFHLE1BQU0sQ0FBQztFQUNwQixXQUFXLEVBQUUsTUFBTTtFQUNuQixTQUFTLEVBQUUsS0FBSztDQUNqQjs7QUFwRUgsQUFzRUUsYUF0RVcsQ0FzRVgsUUFBUSxDQUFDO0VBQ1AsV0FBVyxFQUFFLEtBQUs7RUFDbEIsTUFBTSxFQUFFLFlBQVk7Q0FDckI7O0FBekVILEFBMkVFLGFBM0VXLENBMkVYLFFBQVEsQ0FBQyxDQUFDLENBQUM7RUFDVCxPQUFPLEVBQUUsS0FBSztDQUNmOztBQzdFSCxBQUFBLGFBQWEsQ0FBQztFQUNaLElBQUksRUFBRSxTQUFTO0VBQ2YsV0FBVyxFQUFFLElBQUk7Q0EyRmxCOztBQTdGRCxBQUlFLGFBSlcsQ0FJWCxRQUFRLENBQUM7RUFDUCxJQUFJLEVBQUUsUUFBUTtFQUNkLE9BQU8sRUFBRSxJQUFJO0VBQ2IsV0FBVyxFQUFFLE9BQU87RUFDcEIsVUFBVSxFaEVZRCxPQUF5QjtFZ0VYbEMsVUFBVSxFQUFFLEdBQUcsQ0FBQyxLQUFLLEMvRDhHVixHQUFHLENBQ0gsS0FBSyxDRHhDVCxPQUFlO0VnRXRFdEIsV0FBVyxFQUFFLE1BQU07RUFDbkIsV0FBVyxFQUFFLElBQUk7Q0FDbEI7O0FBWkgsQUFjRSxhQWRXLENBY1gsU0FBUyxDQUFDLEdBQUcsQ0FBQztFQUNaLFVBQVUsRTlEZEosT0FBd0M7QzhEZS9DOztBQWhCSCxBQWtCRSxhQWxCVyxBQWtCVixTQUFTLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQztFQUN2QixVQUFVLEVoRW9CQSxPQUFpQjtFZ0VuQjNCLEtBQUssRUFBRSxJQUFJO0NBQ1o7O0FBckJILEFBdUJFLGFBdkJXLEFBdUJWLFdBQVcsQ0FBQyxNQUFNO0FBdkJyQixhQUFhLEFBd0JWLFdBQVcsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDO0VBQ3pCLFVBQVUsRWhFbUJMLE9BQWlCO0VnRWxCdEIsS0FBSyxFQUFFLElBQUk7Q0FDWjs7QUEzQkgsQUE2QkUsYUE3QlcsQUE2QlYsUUFBUSxDQUFDLE1BQU07QUE3QmxCLGFBQWEsQUE4QlYsUUFBUSxDQUFDLE1BQU07QUE5QmxCLGFBQWEsQUErQlYsUUFBUSxDQUFDLFNBQVMsQ0FBQyxHQUFHO0FBL0J6QixhQUFhLEFBZ0NWLFFBQVEsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDO0VBQ3RCLFVBQVUsRS9EZ0NOLE9BQWdCO0UrRC9CcEIsS0FBSyxFQUFFLElBQUk7Q0FDWjs7QUFuQ0gsQUFxQ0UsYUFyQ1csQ0FxQ1gsUUFBUSxDQUFDLEtBQUssQ0FBQztFQUNiLFlBQVksRUFBRSxJQUFJO0NBQ25COztBQXZDSCxBQXlDRSxhQXpDVyxDQXlDWCxRQUFRLENBQUM7RUFDUCxXQUFXLEVBQUUsSUFBSTtFQUNqQixZQUFZLEVBQUUsSUFBSTtFQUNsQixPQUFPLEVBQUUsSUFBSTtDQUNkOztBQTdDSCxBQStDRSxhQS9DVyxDQStDWCxRQUFRLEFBQUEsUUFBUSxDQUFDO0VBQ2YsS0FBSyxFQUFFLElBQUk7RUFDWCxNQUFNLEVBQUUsSUFBSTtFQUNaLEtBQUssRUFBRSxJQUFJO0VBQ1gsWUFBWSxFQUFFLEdBQUc7RUFDakIsVUFBVSxFQUFFLE1BQU07RUFDbEIsU0FBUyxFQUFFLEtBQUs7RUFDaEIsV0FBVyxFQUFFLE1BQU07Q0FDcEI7O0FBdkRILEFBeURFLGFBekRXLEFBeURWLFNBQVMsQ0FBQyxRQUFRLENBQUM7RUFDbEIsS0FBSyxFaEVuQkssT0FBaUI7Q2dFb0I1Qjs7QUEzREgsQUE2REUsYUE3RFcsQUE2RFYsU0FBUyxDQUFDLFFBQVEsQUFBQSxRQUFRLENBQUM7RUFDMUIsVUFBVSxFaEV2QkEsT0FBaUI7RWdFd0IzQixPQUFPLEVBQUUsSUFBSTtFQUNiLFNBQVMsRUFBRSxLQUFLO0NBQ2pCOztBQWpFSCxBQW1FRSxhQW5FVyxBQW1FVixXQUFXLENBQUMsUUFBUSxDQUFDO0VBQ3BCLEtBQUssRWhFeEJBLE9BQWlCO0NnRXlCdkI7O0FBckVILEFBdUVFLGFBdkVXLEFBdUVWLFdBQVcsQ0FBQyxRQUFRLEFBQUEsUUFBUSxDQUFDO0VBQzVCLFVBQVUsRWhFNUJMLE9BQWlCO0VnRTZCdEIsT0FBTyxFQUFFLEdBQUc7Q0FDYjs7QUExRUgsQUE0RUUsYUE1RVcsQUE0RVYsUUFBUSxDQUFDLFFBQVE7QUE1RXBCLGFBQWEsQUE2RVYsUUFBUSxDQUFDLFFBQVEsQ0FBQztFQUNqQixLQUFLLEUvRGJELE9BQWdCO0MrRGNyQjs7QUEvRUgsQUFpRkUsYUFqRlcsQUFpRlYsUUFBUSxDQUFDLFFBQVEsQUFBQSxRQUFRO0FBakY1QixhQUFhLEFBa0ZWLFFBQVEsQ0FBQyxRQUFRLEFBQUEsUUFBUSxDQUFDO0VBQ3pCLFVBQVUsRS9EbEJOLE9BQWdCO0UrRG1CcEIsT0FBTyxFQUFFLElBQUk7Q0FDZDs7QUFyRkgsQUF1RkUsYUF2RlcsQ0F1RlgsUUFBUSxDQUFDLElBQUksQ0FBQztFQUNaLE1BQU0sRUFBRSxPQUFPO0VBQ2YsV0FBVyxFQUFFLEdBQUc7RUFDaEIsS0FBSyxFaEV4REcsT0FBa0I7RWdFeUQxQixVQUFVLEVBQUUsSUFBSTtDQUNqQjs7QUMxRkgsQUFBQSxjQUFjLENBQUM7RUFHYixJQUFJLEVBQUUsUUFBUTtDQXdDZjs7QTNEbUJHLE1BQU0sRUFBRyxTQUFTLEVBQUUsS0FBSyxPQUFPLFdBQVcsRUFBRSxRQUFRO0UyRDlEekQsQUFBQSxjQUFjLENBQUM7SUFNWCxPQUFPLEVBQUUsSUFBSTtHQXFDaEI7OztBQTNDRCxBQVNFLGNBVFksQ0FTWixJQUFJLENBQUM7RUFHSCxVQUFVLEVBQUUsT0FBNEI7RUFDeEMsS0FBSyxFL0RkQyxPQUF3QztFK0RlOUMsSUFBSSxFQUFFLE9BQU87RUFDYixNQUFNLEVBQUUsT0FBTztFQUNmLE9BQU8sRUFBRSxTQUFTO0VBQ2xCLGFBQWEsRUFBRSxHQUFHLENBQUMsS0FBSyxDakVIaEIsT0FBeUI7Q2lFUWxDOztBQXRCSCxBQW1CSSxjQW5CVSxDQVNaLElBQUksQUFVRCxVQUFXLENBQUEsR0FBRyxFQUFFO0VBQ2YsWUFBWSxFQUFFLEdBQUcsQ0FBQyxLQUFLLENqRU5qQixPQUF5QjtDaUVPaEM7O0FBckJMLEFBd0JFLGNBeEJZLENBd0JaLElBQUksQUFBQSxNQUFNO0FBeEJaLGNBQWMsQUF5QlgsSUFBSyxDQUFBLE1BQU0sRUFBRSxJQUFJLEFBQUEsU0FBUyxDQUFDO0VBQzFCLFVBQVUsRUFBRSxPQUE2QjtFQUN6QyxLQUFLLEVBQUUsSUFBSTtDQUNaOztBQTVCSCxBQThCRSxjQTlCWSxDQThCWixLQUFLLENBQUM7RUFHSixXQUFXLEVBQUUsR0FBRztDQUNqQjs7QUFsQ0gsQUFvQ0UsY0FwQ1ksQ0FvQ1osSUFBSSxDQUFDO0VBR0gsSUFBSSxFQUFFLFFBQVE7RUFDZCxVQUFVLEVBQUUsS0FBSztFQUNqQixTQUFTLEVBQUUsS0FBSztDQUNqQjs7QU4zQkEsQUFBRCxjQUFPLENPakJNO0VBQ2IsVUFBVSxFQUFFLEtBQUs7Q0FlbEI7O0FBaEJELEFBR0UsY0FIWSxDQUdaLGFBQWEsQ0FBQztFQUNaLFVBQVUsRUFBRSxHQUFHO0VBTWYsVUFBVSxFQUFFLE1BQU07Q0FLbkI7O0E1RGlEQyxNQUFNLEVBQUcsU0FBUyxFQUFFLE1BQU07RTREaEU5QixBQUdFLGNBSFksQ0FHWixhQUFhLENBQUM7SUFJVixVQUFVLEVBQUUsSUFBSTtHQVFuQjs7O0FBZkgsQUFZSSxjQVpVLENBR1osYUFBYSxDQVNYLE9BQU8sQ0FBQztFQUNOLE1BQU0sRUFBRSxNQUFNO0NBQ2Y7O0FDZEwsQUFBQSxXQUFXLENBQUM7RUFHVixVQUFVLEVuRWFBLE9BQXlCO0VtRVpuQyxRQUFRLEVBQUUsUUFBUTtFQUNsQixPQUFPLEVBQUUsSUFBSTtFQUNiLE9BQU8sRXpDaUJTLEdBQUc7RXlDaEJuQixNQUFNLEVBQUUsT0FBTztFQUNmLFdBQVcsRUFBRSxJQUFJO0NBK0JsQjs7QUF2Q0QsQUFVRSxXQVZTLEFBVVIsUUFBUSxDQUFDO0VBQ1IsT0FBTyxFQUFFLEtBQUs7Q0FDZjs7QUFaSCxBQWNFLFdBZFMsQ0FjVCxNQUFNLENBQUM7RUFHTCxPQUFPLEVBQUUsS0FBSztFQUNkLFVBQVUsRUFBRSxNQUFNO0VBQ2xCLFNBQVMsRUFBRSxLQUFLO0VBQ2hCLGFBQWEsRWxFbUdGLEdBQUcsQ0FDSCxLQUFLLENEeENULE9BQWU7RW1FM0R0QixNQUFNLEVBQUUsQ0FBQztDQUNWOztBQXRCSCxBQXdCRSxXQXhCUyxDQXdCVCxDQUFDLENBQUM7RUFHQSxLQUFLLEVuRUZBLE9BQWU7RW1FR3BCLE9BQU8sRUFBRSx1QkFBdUI7Q0FVakM7O0FBdENILEFBOEJJLFdBOUJPLENBd0JULENBQUMsQUFNRSxRQUFRLENBQUM7RUFDUixLQUFLLEVBQUUsR0FBRztFQUNWLFVBQVUsRUFBRSxNQUFNO0NBQ25COztBQWpDTCxBQW1DSSxXQW5DTyxDQXdCVCxDQUFDLEFBV0UsTUFBTSxDQUFDO0VBQ04sVUFBVSxFQUFFLE9BQThCO0NBQzNDOztBQ3JDTCxBQUFBLFdBQVcsQ0FBQztFQUdWLFVBQVUsRXBFYUEsT0FBeUI7RW9FWm5DLE9BQU8sRUFBRSxTQUFTO0VBQ2xCLFVBQVUsRUFBRSxLQUFLO0VBQ2pCLFFBQVEsRUFBRSxRQUFRO0NBcUNuQjs7QUEzQ0QsQUFRRSxXQVJTLEFBUVIsTUFBTSxDQUFDO0VBQ04sVUFBVSxFQUFFLE1BQU07Q0FNbkI7O0FBZkgsQUFXSSxXQVhPLEFBUVIsTUFBTSxDQUdMLE9BQU8sQ0FBQztFQUNOLE9BQU8sRUFBRSxZQUFZO0VBQ3JCLE1BQU0sRUFBRSxRQUFRO0NBQ2pCOztBQWRMLEFBaUJFLFdBakJTLENBaUJULFFBQVEsQ0FBQztFQUdQLFFBQVEsRUFBRSxRQUFRO0VBQ2xCLEdBQUcsRUFBRSxDQUFDO0VBQ04sS0FBSyxFQUFFLENBQUM7RUFDUixVQUFVLEVBQUUsT0FBOEI7RUFDMUMsT0FBTyxFQUFFLFdBQVc7RUFDcEIsT0FBTyxFQUFFLElBQUk7RUFDYixPQUFPLEVBQUUsQ0FBQztDQUNYOztBQTNCSCxBQTZCRSxXQTdCUyxBQTZCUixNQUFNLENBQUMsUUFBUSxDQUFDO0VBQ2YsT0FBTyxFQUFFLEtBQUs7Q0FDZjs7QUEvQkgsQUFpQ0UsV0FqQ1MsQ0FpQ1QsUUFBUSxDQUFDLENBQUMsQ0FBQztFQUNULFdBQVcsRUFBRSxHQUFHO0NBQ2pCOztBQW5DSCxBQXFDRSxXQXJDUyxDQXFDVCxNQUFNLENBQUM7RUFHTCxLQUFLLEVBQUUsZ0JBQWdCO0VBQ3ZCLE1BQU0sRUFBRSxXQUFXO0NBQ3BCOztBQUdILEFBQ0UsZ0JBRGMsQ0FDZCxNQUFNLENBQUM7RUFHTCxLQUFLLEVBQUUsSUFBSTtDQUNaOztBQUxILEFBT0UsZ0JBUGMsQ0FPZCxRQUFRLENBQUM7RUFDUCxLQUFLLEVBQUUsSUFBSTtFQUNYLE1BQU0sRUFBRSxJQUFJO0NBQ2I7O0FDckRILEFBQ0UsUUFETSxBQUFBLFlBQVksQ0FDbEIsUUFBUSxDQUFDO0VBQ1AsYUFBYSxFQUFFLENBQUM7Q0FDakI7O0EvRDJEQyxNQUFNLEVBQUcsU0FBUyxFQUFFLEtBQUssSUFBSyxXQUFXLEVBQUUsU0FBUztFK0Q5RHhELEFBTUksUUFOSSxBQUFBLFlBQVksQ0FNaEIsb0JBQW9CLENBQUM7SUFDbkIsVUFBVSxFQUFFLG9CQUErQztHQUM1RDs7O0EvRHNERCxNQUFNLEVBQUcsU0FBUyxFQUFFLEtBQUssT0FBTyxXQUFXLEVBQUUsUUFBUTtFK0Q5RHpELEFBWUksUUFaSSxBQUFBLFlBQVksQ0FZaEIsa0JBQWtCLENBQUM7SUFDakIsVUFBVSxFQWZBLE1BQU07R0FnQmpCOzs7QUFJTCxBQUFBLGNBQWMsQ0FBQztFQUdiLFFBQVEsRUFBRSxRQUFRO0VBQ2xCLElBQUksRUFBRSxDQUFDO0VBQ1AsS0FBSyxFQUFFLENBQUM7RUFDUixXQUFXLEVBQUUsSUFBSTtFQUNqQixNQUFNLEVBM0JRLE1BQU07RUE0QnBCLFdBQVcsRUFBRSxNQUFNO0NBcURwQjs7QUFuREUsQUFBRCxrQkFBSyxDQUFDO0VBR0osR0FBRyxFQUFDLE9BQUM7Q0FDTjs7QUFFQSxBQUFELGtCQUFLLENBQUM7RUFHSixNQUFNLEVBQUMsT0FBQztDQUNUOztBQXBCSCxBQXNCRSxjQXRCWSxDQXNCWixLQUFLLENBQUM7RUFDSixJQUFJLEVBQUUsUUFBUTtFQUNkLE9BQU8sRUFBRSxJQUFJO0NBQ2Q7O0FBekJILEFBMkJFLGNBM0JZLENBMkJaLE9BQU8sQ0FBQztFQUNOLElBQUksRUFBRSxRQUFRO0VBQ2QsV0FBVyxFQUFFLEtBQUs7RUFDbEIsYUFBYSxFQUFFLEtBQUs7RUFDcEIsWUFBWSxFcEVvRUQsR0FBRyxDQUNILEtBQUssQ0R4Q1QsT0FBZTtDcUU1QnZCOztBQWhDSCxBQWtDRSxjQWxDWSxDQWtDWixlQUFlLENBQUM7RUFHZCxVQUFVLEVBQUUsT0FBTztFQUNuQixTQUFTLEVBQUUsS0FBSztFQUNoQixPQUFPLEVBQUUsT0FBTztFQUNoQixhQUFhLEVBQUUsU0FBUztDQUN6Qjs7QUFFQSxBQUFELGtCQUFLLENBQUMsZUFBZSxDQUFDO0VBQ3BCLGFBQWEsRUFBRSxTQUFTO0NBQ3pCOztBQTdDSCxBQStDRSxjQS9DWSxBQStDWCxRQUFRLENBQUMsZUFBZSxDQUFDO0VBQ3hCLFVBQVUsRXJFN0JBLE9BQWlCO0VxRThCM0IsS0FBSyxFcEV2QlUsSUFBSTtFb0V3Qm5CLFdBQVcsRUFBRSxJQUFJO0NBQ2xCOztBQW5ESCxBQXFERSxjQXJEWSxDQXFEWixLQUFLLENBQUM7RUFDSixXQUFXLEVBQUUsSUFBSTtDQUNsQjs7QUF2REgsQUF5REUsY0F6RFksQ0F5RFosSUFBSSxDQUFDO0VBQ0gsV0FBVyxFQUFFLEtBQUs7RUFDbEIsV0FBVyxFQUFFLE1BQU07Q0FDcEI7O0FDaEZILEFBQUEsQ0FBQyxBQUFBLFNBQVMsQ0FBQztFQUNULFVBQVUsRXBFSUYsa0NBQTRCO0VvRUhwQyxlQUFlLEVBQUUsS0FBSztDQUN2Qjs7QUFFRCxBQUFBLFNBQVMsQ0FBQztFQUNSLGdCQUFnQixFcEVEUixzQ0FBNEI7Q29FRXJDOztBQUVELEFBQUEsU0FBUyxDQUFDO0VBQ1IsZ0JBQWdCLEVwRUxSLHFDQUE0QjtDb0VNckM7O0FBRUQsQUFBQSxTQUFTLENBQUM7RUFDUixnQkFBZ0IsRXBFVFIsaUNBQTRCO0NvRVVyQzs7QUFFRCxBQUFBLFNBQVMsQ0FBQztFQUNSLGdCQUFnQixFcEViUixrQ0FBNEI7Q29FY3JDOztBQUVELEFBQUEsWUFBWSxDQUFDO0VBQ1gsZ0JBQWdCLEVwRWpCUix5Q0FBNEI7Q29Fa0JyQzs7QUFFRCxBQUFBLFNBQVMsQ0FBQztFQUNSLGdCQUFnQixFcEVyQlIscUNBQTRCO0NvRXNCckM7O0FBRUQsQUFBQSxTQUFTLENBQUM7RUFDUixnQkFBZ0IsRXBFekJSLDBDQUE0QjtDb0UwQnJDOztBQUVELEFBQUEsU0FBUyxDQUFDO0VBQ1IsZ0JBQWdCLEVwRTdCUix3Q0FBNEI7Q29FOEJyQzs7QUFFRCxBQUFBLFNBQVMsQ0FBQztFQUNSLGdCQUFnQixFcEVqQ1IseUNBQTRCO0NvRWtDckM7O0FBRUQsQUFBQSxTQUFTLENBQUM7RUFDUixnQkFBZ0IsRXBFckNSLHdDQUE0QjtDb0VzQ3JDOztBQUVELEFBQUEsWUFBWSxDQUFDO0VBQ1gsZ0JBQWdCLEVwRXpDUiw0Q0FBNEI7Q29FMENyQzs7QUFFRCxBQUFBLFNBQVMsQ0FBQztFQUNSLGdCQUFnQixFcEU3Q1Isc0NBQTRCO0NvRThDckM7O0FBRUQsQUFBQSxlQUFlLENBQUM7RUFDZCxnQkFBZ0IsRXBFakRSLG9DQUE0QjtDb0VrRHJDOztBQUVELEFBQUEsU0FBUyxDQUFDO0VBQ1IsZ0JBQWdCLEVwRXJEUiw0Q0FBNEI7Q29Fc0RyQzs7QUFFRCxBQUFBLFlBQVksQ0FBQztFQUNYLGdCQUFnQixFcEV6RFIsMENBQTRCO0NvRTBEckM7O0FBRUQsQUFBQSxTQUFTLENBQUM7RUFDUixnQkFBZ0IsRXBFN0RSLG1EQUE0QjtDb0U4RHJDOztBQUVELEFBQUEsU0FBUyxDQUFDO0VBQ1IsZ0JBQWdCLEVwRWpFUix5Q0FBNEI7Q29Fa0VyQzs7QUFFRCxBQUFBLFNBQVMsQ0FBQztFQUNSLGdCQUFnQixFcEVyRVIsMENBQTRCO0NvRXNFckM7O0FBRUQsQUFBQSxTQUFTLENBQUM7RUFDUixnQkFBZ0IsRXBFekVSLHlDQUE0QjtDb0UwRXJDOztBQUVELEFBQUEsU0FBUyxDQUFDO0VBQ1IsZ0JBQWdCLEVwRTdFUixtQ0FBNEI7Q29FOEVyQzs7QUFFRCxBQUFBLFlBQVksQ0FBQztFQUNYLGdCQUFnQixFcEVqRlIseUNBQTRCO0NvRWtGckM7O0FBRUQsQUFBQSxTQUFTLENBQUM7RUFDUixnQkFBZ0IsRXBFckZSLDRDQUE0QjtDb0VzRnJDOztBQUVELEFBQUEsU0FBUyxDQUFDO0VBQ1IsZ0JBQWdCLEVwRXpGUix3Q0FBNEI7Q29FMEZyQzs7QUFFRCxBQUFBLFNBQVMsQ0FBQztFQUNSLGdCQUFnQixFcEU3RlIseUNBQTRCO0NvRThGckM7O0FBRUQsQUFBQSxTQUFTLENBQUM7RUFDUixnQkFBZ0IsRXBFakdSLDJDQUE0QjtDb0VrR3JDOztBWDFGRCxBQUFBLFFBQVEsQ1liQztFQVVQLGtCQUFrQixFQUFFLElBQUk7RUFDeEIsbUJBQW1CLEVBQUUseUNBQXlDO0NBYy9EOztBQXpCRCxBQUNFLFFBRE0sQ0FDTixlQUFlLENBQUM7RUFDZCxTQUFTLEVBQUUsSUFBSTtFQUNmLFVBQVUsRTNDSUYsS0FBSztDMkNIZDs7QVowQ0EsQUFBRCxjQUFPLENZeENDO0VBQ04sT0FBTyxFQUFFLElBQUk7Q0FDZDs7QWpFd0RDLE1BQU0sRUFBRyxTQUFTLEVBQUUsS0FBSyxJQUFLLFdBQVcsRUFBRSxTQUFTO0VxRG5EeEQsQUFBQSxRQUFRLENZYkM7SUFjTCxtQkFBbUIsRUFBRSwwREFBMEQ7R0FXbEY7OztBakV1Q0csTUFBTSxFQUFHLFNBQVMsRUFBRSxNQUFNO0VxRG5EOUIsQUFBQSxRQUFRLENZYkM7SUFrQkwsa0JBQWtCLEVBQUUsY0FBYztJQUNsQyxtQkFBbUIsRUFBRSw4REFBOEQ7R0FNdEY7RUF6QkQsQUFDRSxRQURNLENBQ04sZUFBZSxDQW9CRztJQUNkLFVBQVUsRUFBRSxDQUFDO0dBQ2Q7OztBQ3ZCTCxBQUFBLGVBQWUsQ0FBQztFQUdkLFVBQVUsRXhFYUEsT0FBeUI7Q3dFdUNwQzs7QUFsREUsQUFBRCxzQkFBUSxDQUFDO0VBR1AsSUFBSSxFQUFFLFFBQVE7RUFDZCxPQUFPLEVBQUUsS0FBSztFQUNkLFVBQVUsRXhFd0JGLE9BQWtCO0V3RXZCMUIsS0FBSyxFdkUyQlEsSUFBSTtDdUVUbEI7O0FBeEJBLEFBUUMsc0JBUk0sQ0FRTixDQUFDLENBQUM7RUFDQSxJQUFJLEVBQUUsU0FBUztFQUNmLE1BQU0sRUFBRSxLQUFLO0VBQ2IsWUFBWSxFQUFFLE1BQU07RUFDcEIsT0FBTyxFQUFFLEdBQUc7Q0FDYjs7QUFiRixBQWVDLHNCQWZNLENBZU4sRUFBRSxDQUFDO0VBQ0QsU0FBUyxFQUFFLEtBQUs7RUFDaEIsTUFBTSxFQUFFLENBQUM7Q0FDVjs7QUFsQkYsQUFvQkMsc0JBcEJNLENBb0JOLEVBQUUsQ0FBQztFQUNELFNBQVMsRUFBRSxLQUFLO0VBQ2hCLE9BQU8sRUFBRSxHQUFHO0NBQ2I7O0FBR0YsQUFBRCx5QkFBVyxDQUFDO0VBQ1YsSUFBSSxFQUFFLFFBQVE7RUFDZCxVQUFVLEVBQUUsSUFBSTtDQUNqQjs7QUFsQ0gsQUFvQ0UsZUFwQ2EsQ0FvQ2IsUUFBUSxDQUFDO0VBR1AsSUFBSSxFQUFFLFFBQVE7RUFDZCxPQUFPLEVBQUUsbUJBQW1CO0VBQzVCLFVBQVUsRXhFeEJILE9BQXlCO0V3RXlCaEMsU0FBUyxFQUFFLEtBQUs7Q0FZakI7O0FBdERILEFBNENJLGVBNUNXLENBb0NiLFFBQVEsQ0FRTixLQUFLLENBQUM7RUFDSixJQUFJLEVBQUUsVUFBVTtFQUNoQixVQUFVLEVBQUUsTUFBTTtFQUNsQixZQUFZLEVBQUUsTUFBTTtFQUNwQixTQUFTLEVBQUUsTUFBTTtDQUNsQjs7QUFqREwsQUFtREksZUFuRFcsQ0FvQ2IsUUFBUSxDQWVOLE1BQU0sQ0FBQztFQUNMLElBQUksRUFBRSxRQUFRO0NBQ2Y7O0FBSUwsQUFBQSxZQUFZLENBQUM7RUFHWCxhQUFhLEV2RTJEQSxHQUFHLENBQ0gsS0FBSyxDRHhDVCxPQUFlO0V3RW5CeEIsV0FBVyxFQUFFLE9BQU87RUFDcEIsS0FBSyxFeEVyQ0UsT0FBZTtFOEJHdEIsVUFBVSxFQURhLEdBQUcsQ0ZSTixLQUFLO0M0QytFMUI7O0FBekNELEFBU0UsWUFUVSxDQVNWLEVBQUUsQ0FBQztFQUdELE9BQU8sRUFBRSxzQkFBc0I7Q0FDaEM7O0FBYkgsQUFlRSxZQWZVLENBZVYsT0FBTyxDQUFDO0VBR04sSUFBSSxFQUFFLFVBQVU7RUFDaEIsZUFBZSxFQUFFLE1BQU07RUFDdkIsT0FBTyxFQUFFLENBQUM7RUFDVixTQUFTLEVBQUUsTUFBTTtFQUNqQixLQUFLLEV0RTlFQyxPQUF3QztDc0VtRi9DOztBQTNCSCxBQXdCSSxZQXhCUSxDQWVWLE9BQU8sQUFTSixLQUFLLENBQUM7RUFDTCxLQUFLLEV4RWhEQyxPQUFrQjtDd0VpRHpCOztBQTFCTCxBQTZCRSxZQTdCVSxBQTZCVCxNQUFNLENBQUM7RUFDTixVQUFVLEVBQUUsT0FBK0I7Q0FDNUM7O0FBL0JILEFBaUNFLFlBakNVLEFBaUNULE9BQU8sQ0FBQztFQUNQLFVBQVUsRUFBRSxPQUErQjtDQU01Qzs7QUF4Q0gsQUFvQ0ksWUFwQ1EsQUFpQ1QsT0FBTyxDQUdOLE9BQU8sQ0FBQztFQUNOLFVBQVUsRXhFNURKLE9BQWtCO0V3RTZEeEIsS0FBSyxFdkV6RE0sSUFBSTtDdUUwRGhCOztBQ2hHTCxVQUFVLENBQVYsV0FBVTtFQUNSLEdBQUc7SUFDRCxNQUFNLEVBQUUsZUFBZTs7OztBQUkzQixBQUFBLFNBQVMsQ0FBQztFQUdSLE9BQU8sRUFBRSxJQUFJO0VBQ2IsVUFBVSxFekVNQSxPQUF5QjtFeUVMbkMsZUFBZSxFQUFFLE1BQU07Q0FnRHhCOztBQXJERCxBQU9FLFNBUE8sQUFPTixJQUFJLEVBUFAsU0FBUyxBQVFOLEtBQUssQ0FBQztFQUNMLE9BQU8sRUFBRSxTQUFTO0VBQ2xCLFVBQVUsRXpFdUJBLE9BQWlCO0V5RXRCM0IsS0FBSyxFeEU2QlUsSUFBSTtFd0U1Qm5CLFNBQVMsRUFBRSxxQ0FBcUM7RUFDaEQsT0FBTyxFQUFFLEdBQUc7RTNDU2QsVUFBVSxFQURhLEdBQUcsQ0ZSTixLQUFLO0M2Q0d4Qjs7QUFoQkgsQUFrQkUsU0FsQk8sQUFrQk4sS0FBSyxDQUFDO0VBQ0wsVUFBVSxFeEV3Q04sT0FBZ0I7Q3dFdkNyQjs7QUFwQkgsQUFzQkUsU0F0Qk8sQUFzQk4sTUFBTSxDQUFDO0VBQ04sT0FBTyxFQUFFLENBQUM7Q0FDWDs7QUF4QkgsQUEwQkUsU0ExQk8sQ0EwQlAsSUFBSSxDQUFDO0VBQ0gsWUFBWSxFQUFFLEdBQUc7Q0FDbEI7O0FBNUJILEFBOEJFLFNBOUJPLEFBOEJOLFFBQVEsQ0FBQztFQUNSLFdBQVcsRUFBRSxVQUFVO0VBQ3ZCLFNBQVMsRUFBRSxNQUFNO0VBQ2pCLFVBQVUsRUFBRSxJQUFJO0VBQ2hCLE9BQU8sRUFBRSxTQUFTO0NBQ25COztBQW5DSCxBQXFDRSxTQXJDTyxDQXFDUCxLQUFLLENBQUM7RUFDSixhQUFhLEVBQUUsS0FBSztFQUNwQixVQUFVLEVBQUUsTUFBTTtFQUNsQixTQUFTLEVBQUUsS0FBSztFQUNoQixLQUFLLEVBQUUsSUFBSTtFQUNYLGFBQWEsRUFBRSxJQUFJO0NBQ3BCOztBQTNDSCxBQTZDRSxTQTdDTyxDQTZDUCxRQUFRLENBQUM7RUFDUCxLQUFLLEVBQUUsSUFBSTtFQUNYLE9BQU8sRUFBRSxLQUFLO0NBS2Y7O0FBcERILEFBaURJLFNBakRLLENBNkNQLFFBQVEsQ0FJTixNQUFNLENBQUM7RUFDTCxNQUFNLEVBQUUsTUFBTTtDQUNmOztBQUlMLEFBQ0Usb0JBRGtCLENBQ2xCLFFBQVEsQ0FBQztFQUdQLFVBQVUsRUFBRSxHQUFHO0NBUWhCOztBQVpILEFBTUksb0JBTmdCLENBQ2xCLFFBQVEsR0FLSixLQUFLLENBQUM7RUFDTixLQUFLLEVBQUUsQ0FBQztFQUNSLElBQUksRUFBRSxHQUFHO0VBQ1QsTUFBTSxFQUFFLE9BQU87RUFDZixXQUFXLEVBQUUsS0FBSztDQUNuQiJ9 */
