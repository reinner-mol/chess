@charset "UTF-8";
/* Colors */
/* even rows in list or tables, subtle shade of $c-bg-high */
/* Primary: blue */
/* text over primary background */
/* Secondary: green */
/* text over secondary background */
/* Accent: orange */
/* text over accent background */
/* Brag: gold */
/* text over brag background */
/* Error: red */
/* text over brag background */
/* Good: green */
/* Warn: orange */
/* Bad: red */
/* Fancy: pink */
/* text over brag background */
/* Borders */
/* Shadows */
/* even rows in list or tables, subtle shade of $c-bg-high */
/* Primary: blue */
/* Secondary: green */
/* Brag: gold */
/* Fancy: pink */
/* Good: green */
/* Warn: orange */
/* Bad: red */
/* Common imports for all CSS modules */
/* Widths */
/* Heights */
/* Orientations */
/* Capabilities */
/* Aliases */
/* Uniboard: keep the same page layout across pages */
/* when the width is appropriate for col1, but landscape prevents it */
/* atm only chrome supports min-content, max-content */
.activity section h2 {
  font-family: 'Noto Sans', Sans-Serif;
}

.slist thead, .activity rating, .subnav a.student em, .dashboard .students .user-link em,
.dashboard .teachers .user-link em, .student-show__top h1 em {
  font-family: 'Roboto', Sans-Serif;
}

/* text printed directly on the page background deserves special treatment (transp theme) */
.cmn-toggle + label::after, .slist thead {
  background: linear-gradient(to bottom, #3c3934, #33312e 100%);
}

.cmn-toggle:hover:not(:disabled) + label::after {
  background: linear-gradient(to bottom, #44413b, #3b3935 100%);
  color: #cccccc;
}

.textcomplete-dropdown {
  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
}

.cmn-toggle:focus:not(:disabled) + label, .cmn-toggle:hover:not(:disabled) + label {
  box-shadow: 0 0 12px #999999;
}

.activity .line {
  white-space: nowrap;
}

.clas-show__overview, .dashboard-teacher .progress {
  padding: 5vh var(--box-padding);
}

.dashboard-student .clas-show__top {
  padding: 0 var(--box-padding);
}

.clas-index .classes .clas-widget {
  overflow-wrap: break-word;
  word-break: break-word;
}

.activity .line {
  overflow: hidden;
  text-overflow: ellipsis;
}

.cmn-toggle + label::before, .flash__content::before, .flash-warning .flash__content::before, .flash-failure .flash__content::before, .student-show__managed p::before {
  font-size: 1.2em;
  vertical-align: middle;
  font-family: 'lichess';
  font-style: normal;
  font-weight: normal;
  text-transform: none;
  speak: none;
  content: attr(data-icon);
  opacity: 0.9;
}

.clas-index .classes .clas-widget .overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 2;
}

.cmn-toggle {
  touch-action: manipulation;
}

.dashboard .students .user-link,
.dashboard .teachers .user-link, .dashboard-teacher .progress > div, .dashboard-teacher .progress-choices, .clas-wall__actions, .student-show__top h1, .student-show__managed__actions, .student-show__password .flash__content {
  /* extends %flex-wrap */
  display: flex;
  flex-flow: row wrap;
  align-items: center;
}

.clas-index .classes .clas-widget, .dashboard-nav {
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
}

.form-split, .form-actions, .clas-show__archived, .student-show__archived, .clas-show__overview__manage, .student-show__top__meta, .student-show__managed {
  /* extends %flex-center */
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  justify-content: space-between;
}

.form-check {
  display: flex;
  flex-flow: column;
}

.clas-show, .dashboard-teacher .progress-choices, .flash__content, .activity score strong, .clas-show__archived, .student-show__archived, .student-show__managed {
  border-radius: 3px;
}

.clas-show, .dashboard-teacher .progress-choices {
  overflow: hidden;
  /* helps with clipping background into border-radius */
}

.dashboard-nav a {
  border-radius: 3px 3px 0 0;
}

.dashboard-nav a:last-child {
  border-radius: 3px 0 0 0;
}

.dashboard-nav a:first-child {
  border-radius: 0 3px 0 0;
}

.clas-show, .dashboard-teacher .progress-choices {
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
}

.cmn-toggle {
  position: absolute;
  margin-left: -99999px;
}

.cmn-toggle + label {
  display: block;
  position: relative;
  cursor: pointer;
  outline: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  padding: 1px;
  width: 40px;
  height: 24px;
  border: 1px solid #404040;
  border-radius: 24px;
}

.cmn-toggle + label::before, .cmn-toggle + label::after {
  display: block;
  position: absolute;
  content: '';
  width: 22px;
  height: 22px;
  bottom: 0.1px;
  left: 0;
}

.cmn-toggle + label::before {
  font-size: 1em;
  z-index: 1;
  text-align: center;
  line-height: 22px;
}

.cmn-toggle + label::after {
  border-radius: 100%;
  box-shadow: 0 1px 2.5px rgba(0, 0, 0, 0.3);
}

.cmn-toggle:not(:checked) + label {
  background-color: #cc3333;
}

.cmn-toggle--subtle:not(:checked) + label {
  background-color: #6b6b6b;
}

.cmn-toggle:checked + label {
  background-color: #629924;
}

.cmn-toggle:disabled + label {
  opacity: 60%;
  cursor: not-allowed !important;
}

.cmn-toggle:hover:not(:disabled) + label {
  transition: background 150ms;
}

.cmn-toggle:hover:not(:disabled) + label::before {
  transition: margin 150ms, color 150ms;
}

.cmn-toggle:hover:not(:disabled) + label::after {
  transition: margin 150ms;
}

.cmn-toggle:not(:checked) + label::before {
  content: 'L';
  color: #cc3333;
}

.cmn-toggle--subtle:not(:checked) + label::before {
  color: #6b6b6b;
}

.cmn-toggle:checked + label::before, .cmn-toggle:checked + label::after {
  margin-left: 16px;
}

.cmn-toggle:checked + label::before {
  content: 'E';
  color: #629924;
}

.flash {
  margin: 1em 0 2em 0;
}

.flash__content {
  padding: 1em 2em;
  background: #629924;
  color: #fff;
}

.flash__content::before {
  content: 'E';
  margin-right: 1em;
  font-size: 1.5em;
}

.flash__content a {
  color: #fff;
}

.flash-warning .flash__content {
  background: #bf811d;
  color: #fff;
}

.flash-warning .flash__content::before {
  content: 'î€…';
}

.flash-failure .flash__content {
  background: #cc3333;
  color: #fff;
}

.flash-failure .flash__content::before {
  content: 'j';
}

.form-group {
  margin-bottom: 3rem;
}

.form-split {
  align-items: inherit;
}

.form-half {
  flex: 1 1 48%;
  min-width: 200px;
}

.form-third {
  flex: 1 1 31%;
}

@media (min-width: 500px) {
  .form-half,
  .form-third {
    flex-grow: 0;
  }
}

.form-label {
  font-weight: bold;
  display: inline-block;
  margin-bottom: 0.5rem;
  cursor: text;
}

.form-control {
  display: block;
  width: 100%;
  height: calc(2.7em + 2px);
  background-clip: padding-box;
}

textarea.form-control {
  height: auto;
}

.form-control:invalid,
.form-group.is-invalid .form-control {
  border-color: #cc3333;
}

.form3 .error,
.form-help,
.password-complexity-label {
  font-size: 90%;
  margin-top: 0.25rem;
}

.form3 .error {
  color: #cc3333;
}

.form-help,
.password-complexity-label {
  color: #999999;
}

.form-check {
  justify-content: center;
}

.form-check div {
  display: flex;
}

.form-check-input {
  margin-right: 0.5rem;
}

.form-check .form-label {
  margin-bottom: 0;
  cursor: pointer;
}

.form-actions {
  margin: 1.5rem 0;
  padding-top: 1.5rem;
  border-top: 1px solid #404040;
}

.form-actions.single {
  justify-content: flex-end;
}

.form3 hr {
  margin-top: 1rem;
  margin-bottom: 1rem;
  border: 0;
  border-top: 1px solid #404040;
}

.password-complexity {
  margin-top: -2rem;
  margin-bottom: 3rem;
}

.password-complexity-meter {
  display: flex;
  grid-gap: 0.25rem;
  height: 0.4rem;
  margin-top: 1rem;
}

.password-complexity-meter > * {
  background-color: gray;
  width: 25%;
}

.slist {
  width: 100%;
  border-bottom: 1px solid #404040;
}

.slist thead th {
  border-top: 1px solid #404040;
  border-bottom: 1px solid #404040;
  padding: 0.5rem 0.8rem;
}

.slist thead th.large {
  font-size: 1.2rem;
}

.slist td {
  padding: 1rem;
}

.slist td .label {
  font-family: monospace;
  font-size: 0.8rem;
}

.slist tbody tr:nth-child(even) {
  background: #302e2c;
}

.slist td:first-child,
.slist th:first-child {
  padding-left: 1.5rem;
}

.slist-pad td:first-child,
.slist-pad th:first-child {
  padding-left: var(--box-padding);
}

.slist-pad td:last-child,
.slist-pad th:last-child {
  padding-right: var(--box-padding);
}

.slist-invert tbody tr:nth-child(odd) {
  background: #302e2c;
}

.slist-invert tbody tr:nth-child(even) {
  background: none;
}

th[role='columnheader']:not(.no-sort) {
  cursor: pointer;
  user-select: none;
}

th[role='columnheader']:not(.no-sort):after {
  content: '';
  float: right;
  margin-top: 7px;
  border-width: 0 5px 5px;
  border-style: solid;
  border-color: #d64f00 transparent;
  visibility: hidden;
  opacity: 0;
  user-select: none;
}

th[aria-sort='descending']:not(.no-sort):after {
  border-bottom: none;
  border-width: 5px 5px 0;
}

th[aria-sort]:not(.no-sort) {
  background: rgba(214, 79, 0, 0.15);
  color: #cccccc;
}

th[aria-sort]:not(.no-sort):after {
  visibility: visible;
  opacity: 0.7;
}

th[role='columnheader']:not(.no-sort):hover {
  color: #cccccc;
}

th[role='columnheader']:not(.no-sort):hover:after {
  opacity: 1;
}

.color-icon.white::before {
  content: 'J';
}

.color-icon.black::before {
  content: 'K';
}

.color-icon.random::before {
  content: 'l';
}

body ::-webkit-scrollbar,
body ::-webkit-scrollbar-corner {
  width: 0.5rem;
  background: #262421;
}

body ::-webkit-scrollbar-thumb {
  background: #4d4d4d;
}

body ::-webkit-scrollbar-thumb:hover,
body ::-webkit-scrollbar-thumb:active {
  background: #6b6b6b;
}

.activity section {
  font-size: 1.2em;
  margin-left: 2rem;
  padding-top: 1rem;
}

.activity section h2 {
  color: #bf811d;
  font-size: 1.2em;
}

.activity section h2 time {
  font-weight: bold;
  text-transform: uppercase;
  background: #262421;
}

.activity .entries {
  margin-top: 0;
  padding-top: 10px;
  position: relative;
}

.activity .entry {
  padding: 1em 0 1em;
}

.activity .entry > i {
  font-size: 24px;
  float: left;
  width: 50px;
  height: 50px;
  margin-top: -10px;
  margin-left: -72px;
  line-height: 39px;
  text-align: center;
  background-color: #a87626;
  border: 3px solid #262421;
  border-radius: 50%;
  color: #fff;
}

@media (min-width: 500px) {
  .activity .entries {
    margin: 30px 50px 0 50px;
    border-left: 3px solid #a87626;
  }
  .activity .entry {
    padding-left: 45px;
  }
}

.activity .sub {
  margin: 3px 0;
  font-size: 1rem;
}

.activity .sub:last-child {
  margin-bottom: -7px;
}

.activity .sub > div {
  overflow: hidden;
}

.activity .line .more {
  flex: 0 1 auto;
}

.activity .line a {
  color: #bababa;
}

.activity .line a:hover {
  color: #3692e7;
}

.activity rating {
  margin-left: 0.7em;
}

.activity rating .rp {
  margin-left: 0.2em;
}

.activity score {
  float: right;
  font-size: 0.7em;
  margin-top: 2px;
}

.activity score > * {
  margin-left: 8px;
}

.activity score strong {
  color: #fff;
  font-size: 1.2em;
  padding: 1px 6px;
  display: inline-block;
  text-align: center;
  opacity: 0.7;
}

.activity .sub score strong {
  line-height: 1.6em;
  padding: 1px 4px;
}

.activity win strong {
  background: #629924;
}

.activity draw strong {
  background: #bf811d;
}

.activity loss strong {
  background: #cc3333;
}

.clas-show__archived, .student-show__archived {
  background: #3e3b38;
  padding: 1em 2em;
  margin-bottom: 2em;
}

.subnav a {
  white-space: normal;
  max-width: 22vw;
}

@media (min-width: 980px) {
  .subnav a {
    max-width: 15vw;
  }
}

.subnav a.active {
  color: #967ce5;
}

.subnav a::after {
  background: #7f5af0;
}

.subnav a.student em {
  display: none;
}

@media (min-width: 800px) {
  .subnav a.student {
    font-weight: bold;
    padding: 0.4rem 2vw 0.4rem 0.8rem;
  }
  .subnav a.student em {
    font-weight: normal;
    display: block;
  }
}

.slist tbody tr:nth-child(2n) {
  background: #2c2830;
}

.clas-index .box__top {
  background: #7f5af0;
  flex-flow: row nowrap;
}

.clas-index .box__top,
.clas-index .box__top a {
  color: white;
}

.clas-index .box__top h1 {
  margin: 0;
}

.clas-index .new::before {
  font-size: 3em;
}

.clas-index .classes__empty {
  margin-bottom: 8em;
}

.clas-index .classes .clas-widget {
  border-bottom: 1px solid #404040;
  padding: 2em var(--box-padding);
  position: relative;
  transition: all 150ms;
}

.clas-index .classes .clas-widget::before {
  color: #6d4fc7;
  font-size: 5em;
  margin-right: 0.4em;
  transition: all 150ms;
}

@media (max-width: 499px) {
  .clas-index .classes .clas-widget::before {
    display: none;
  }
}

.clas-index .classes .clas-widget:hover {
  background: #2f2a36;
}

.clas-index .classes .clas-widget:hover::before {
  color: #7f5af0;
}

.clas-index .classes .clas-widget h3 {
  color: #7f5af0;
}

.clas-index .classes .clas-widget h3 {
  font-size: 23px;
}

@media (min-width: 320px) {
  .clas-index .classes .clas-widget h3 {
    font-size: calc( 23px + 12 * ((100vw - 320px) / 880));
  }
}

@media (min-width: 1200px) {
  .clas-index .classes .clas-widget h3 {
    font-size: 35px;
  }
}

.clas-index .classes .clas-widget p {
  margin: 0.5em 0 0 0;
}

.clas-index .classes .clas-widget-archived::before,
.clas-index .classes .clas-widget-archived h3 {
  color: #999999;
}

.clas-show__top {
  background: #7f5af0;
}

.clas-show__top,
.clas-show__top a,
.clas-show__top .button,
.clas-show__top .title {
  color: white;
}

.clas-show__overview {
  background: #302e2c;
}

.dashboard .flash {
  margin: 2em 2em 0 2em;
}

.dashboard .flash__content {
  padding: 2em var(--box-padding);
}

.dashboard .students th,
.dashboard .teachers th {
  font-weight: bold;
}

.dashboard .students .button,
.dashboard .teachers .button {
  font-size: 1.2em;
  color: #967ce5;
}

.dashboard .students .user-link:hover,
.dashboard .teachers .user-link:hover {
  color: #967ce5;
}

.dashboard .students .user-link span,
.dashboard .teachers .user-link span {
  pointer-events: none;
}

.dashboard .students .user-link .line,
.dashboard .teachers .user-link .line {
  font-size: 2em;
}

.dashboard .students .user-link em,
.dashboard .teachers .user-link em {
  display: block;
}

.dashboard .students .rating span {
  margin: 0 0.3em;
}

.dashboard .students .rating span::before {
  margin: 0;
}

.dashboard-nav {
  justify-content: center;
  align-items: flex-end;
}

@media (max-width: 499px) {
  .dashboard-nav {
    font-size: 0.9em;
  }
}

.dashboard-nav a {
  flex: 1 1 auto;
  text-align: center;
  padding: 1.2em 0 0.8em 0;
}

.dashboard-nav a:hover {
  background: #6f51c9;
}

.dashboard-nav a.active {
  background: #262421;
  color: #967ce5;
  font-weight: bold;
}

.dashboard-teacher-overview .dashboard-nav a.active,
.dashboard-teacher-progress .dashboard-nav a.active {
  background: #302e2c;
}

.dashboard-student .clas-show__top h1 {
  padding: 1.5em 0;
  margin: 0;
}

.dashboard-student .clas-show__desc {
  margin-top: -1.5em;
  padding-bottom: 3em;
}

.dashboard-student .teachers {
  margin-bottom: 2em;
}

.dashboard-student .clas-wall {
  max-height: 50vh;
  overflow-y: auto;
}

.dashboard-teacher .clas-show__top h1 {
  padding: 1.5em var(--box-padding);
  margin: 0;
}

.dashboard-teacher .clas-show__desc {
  margin-bottom: 2em;
}

.dashboard-teacher .progress {
  background: #302e2c;
}

.dashboard-teacher .progress > div:first-child {
  margin-bottom: 1.5em;
}

.dashboard-teacher .progress label {
  width: 12ch;
  display: inline-block;
  color: #999999;
  text-transform: uppercase;
}

.dashboard-teacher .progress-choices {
  box-shadow: none;
  flex: 1 1 auto;
  background: #262421;
}

.dashboard-teacher .progress a {
  flex: 1 1 auto;
  text-align: center;
  font-weight: bold;
  padding: 0.7em;
  color: #7f5af0;
  border-right: 1px solid #404040;
}

.dashboard-teacher .progress a:hover {
  background: #41345f;
  color: #cccccc;
}

.dashboard-teacher .progress a.active {
  background: #7f5af0;
  color: #fff;
}

.dashboard-teacher .progress a:last-child {
  border: 0;
}

.dashboard-teacher .students__empty {
  margin: 4em 0;
}

.dashboard-teacher .students td:first-child {
  font-weight: bold;
}

.dashboard-teacher .coords i {
  margin: 0 0.4em;
}

.dashboard-teacher .coords i::before {
  margin-right: 0.2em;
}

.dashboard-teacher-students h2 {
  margin: 2em 0 1em 0;
}

.clas-edit__archive {
  text-align: right;
}

.button-clas {
  background: #7f5af0;
}

.clas-wall {
  margin: 4em 0;
  font-size: 1.1em;
  line-height: 1.6em;
}

.clas-wall img {
  max-width: 100%;
  max-height: 40vh;
}

.clas-wall li {
  list-style: disc outside;
  margin: 0.2em 0 0 1.2em;
}

.clas-wall h1,
.clas-wall h2,
.clas-wall h3,
.clas-wall h4 {
  margin: 0.7em 0;
}

.clas-wall em {
  font-style: italic;
}

.clas-wall__actions {
  justify-content: center;
  margin-top: 4em;
}

.clas-wall__actions .button {
  margin: 0 1em;
}

.clas-wall__edit li {
  list-style: disc outside;
  margin: 0.5em 0 0 1.5em;
}

.student-show {
  padding-bottom: 3em;
}

.student-show__top {
  padding: calc(5vh - 1rem) var(--box-padding);
  background: #7f5af0;
  margin-bottom: 3em;
}

.student-show__top,
.student-show__top a,
.student-show__top .button,
.student-show__top .title {
  color: white;
}

.student-show__top a:not(.button) {
  font-weight: bold;
  border-bottom: 1px dotted #e5defc;
}

.student-show__top h1 {
  margin-bottom: 0.6em;
}

.student-show__top h1::before {
  font-size: 2.5em;
  margin-right: 0.4em;
  color: #e5defc;
}

.student-show__top h1 strong {
  display: block;
}

.student-show__top h1 em {
  color: #e5defc;
}

.student-show__top__meta {
  justify-items: center;
}

.student-show__top__meta p {
  margin: 0;
}

.student-show__notes {
  margin-bottom: 2em;
}

.student-show__managed {
  background: rgba(54, 146, 231, 0.2);
  padding: 1em 2em;
  margin: 1em 0 2em 0;
}

.student-show__managed p {
  margin: 0;
}

.student-show__managed p::before {
  content: '5';
  font-size: 3em;
}

.student-show .activity {
  margin: 1em 0 2em 0;
}

.student-show__archive {
  margin-top: 3em;
  text-align: right;
}

.student-show__password .flash__content {
  padding: 2em;
}

.student-show__password .flash__content::before {
  font-size: 3em;
}

.student-show__password pre {
  font-size: 1.5em;
}

.student-add__choice {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(20em, 1fr));
  grid-gap: var(--box-padding);
  align-items: center;
}

.student-add__choice h2 {
  margin-bottom: 1em;
}

.student-add__choice .button {
  width: 100%;
}

.student-add__or {
  color: #6b6b6b;
  margin: 2rem 0;
  text-align: center;
  font-style: italic;
  font-size: 2em;
}

.student-add__created strong a {
  text-decoration: underline;
}

.student-add__created p {
  margin-top: 1em;
}

.student-add__created pre {
  font-size: 1.5em;
}

.student-add__created .button {
  display: block;
  margin-top: 3em;
}

.student-add-many form {
  margin-top: 2em;
}

.student-edit h2 {
  margin-bottom: 1em;
}

.clas-home {
  background: #7f5af0;
  color: white;
}

.clas-home__doc {
  margin-bottom: 4em;
}

.clas-home__onboard {
  text-align: center;
}

.clas-home__onboard .button {
  margin-bottom: 2em;
  display: inline-block;
  background: #9171f2;
}

.textcomplete-dropdown {
  background: #3c3934;
}

.textcomplete-dropdown li {
  list-style: none;
  border-top: 1px solid #404040;
  padding: 0.5em;
  min-width: 100px;
  font-weight: bold;
  cursor: pointer;
}

.textcomplete-dropdown li.textcomplete-header,
.textcomplete-dropdown li.textcomplete-footer {
  display: none;
}

.textcomplete-dropdown li:hover,
.textcomplete-dropdown .active {
  background-color: #4b3b2f;
}

.textcomplete-dropdown a {
  color: #bababa;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
