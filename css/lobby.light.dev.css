/* Colors */
/* even rows in list or tables, subtle shade of $c-bg-high */
/* Primary: blue */
/* text over primary background */
/* Secondary: green */
/* text over secondary background */
/* Accent: orange */
/* text over accent background */
/* Brag: gold */
/* text over brag background */
/* Error: red */
/* text over brag background */
/* Good: green */
/* Warn: orange */
/* Bad: red */
/* Fancy: pink */
/* text over brag background */
/* Borders */
/* Shadows */
/* Common imports for all CSS modules */
/* Widths */
/* Heights */
/* Orientations */
/* Capabilities */
/* Aliases */
/* Uniboard: keep the same page layout across pages */
/* when the width is appropriate for col1, but landscape prevents it */
/* atm only chrome supports min-content, max-content */
.lobby__streams .stream strong, .timeline .entry a, .lobby__box__top .title {
  font-family: 'Noto Sans', Sans-Serif;
}

.tabs-horiz span, .lpools, .hooks__list th, .lobby__streams .stream, .timeline .entry, .lobby__forum .extract, .lobby__streams .more, .timeline .more {
  font-family: 'Roboto', Sans-Serif;
}

/* text printed directly on the page background deserves special treatment (transp theme) */
.tabs-horiz, .lobby__counters, .lobby__streams .stream, .timeline, .lobby__about a, .timeline .entry a {
  color: #5e5e5e;
}

#hook .opponent, .lobby__box__top {
  background: linear-gradient(to bottom, whitesmoke 0%, #ededed 100%);
  text-shadow: 0 1px 0 white;
}

.tour-spotlight {
  background: linear-gradient(to bottom, #d1e4f6 0%, #c5d8e9 100%);
  text-shadow: 0 1px 0 white;
}

.tour-spotlight.invert, .tour-spotlight.event-spotlight, .tour-spotlight:hover {
  background: linear-gradient(to bottom, #d1e4f6 0%, #c5d8e9 100%);
  text-shadow: 0 1px 0 white;
}

.lpools .active, #hook {
  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
}

.hooks__list td, .tour-spotlight {
  white-space: nowrap;
  overflow: hidden;
}

.lobby__streams .stream, .lobby__box td, .lobby__support__text span {
  white-space: nowrap;
}

.lpools > div {
  overflow-wrap: break-word;
  word-break: break-word;
}

.lobby__streams .stream, .lobby__box td, .lobby__support__text span, .lobby__leaderboard td:first-child, .lobby__winners td:first-child {
  overflow: hidden;
  text-overflow: ellipsis;
}

.hooks__chart {
  position: absolute;
  width: 100%;
  height: 100%;
}

.tabs-horiz, .tour-spotlight, .lobby__support a {
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
}

.lobby__counters, .lobby__box__top, .lobby__blog .post {
  /* extends %flex-center */
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  justify-content: space-between;
}

.lpools > div, #hook .inner, .lobby__app, .lobby__table, .lobby__start, .lobby__box, .lobby__side, .lobby__nope .lobby__app__content, .now-playing .meta {
  display: flex;
  flex-flow: column;
}

.lobby__spotlights, .lobby__box, #hook, .lobby__app__content, .lobby__support a, .lpools > div {
  border-radius: 3px;
}

.lobby__spotlights, .lobby__box, #hook {
  overflow: hidden;
  /* helps with clipping background into border-radius */
}

.lobby__app__content, .lobby__support a, .lobby__spotlights, .lobby__box {
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
}

.now-playing {
  display: grid;
  --np-min-width: 200px;
  grid-template-columns: repeat(auto-fill, minmax(var(--np-min-width), 1fr));
}

@media (max-width: 499px) {
  .now-playing {
    --np-min-width: 50%;
  }
}

.now-playing > a {
  color: #4d4d4d;
  padding: 0.3em;
}

.now-playing .indicator {
  color: #d64f00;
  margin-top: -3px;
  display: block;
}

.now-playing cg-board {
  box-shadow: none;
}

.color-icon.white::before {
  content: 'K';
}

.color-icon.black::before {
  content: 'J';
}

.color-icon.random::before {
  content: 'l';
}

@keyframes glowing {
  42% {
    background: none;
  }
  50% {
    background: #d1e4f6;
  }
  58% {
    background: none;
  }
}

.glowing {
  animation: glowing 2s ease-in-out infinite;
}

.tabs-horiz {
  justify-content: center;
  align-items: flex-end;
  border-bottom: 2px solid #d9d9d9;
}

@media (max-width: 499px) {
  .tabs-horiz {
    font-size: 0.9em;
  }
}

.tabs-horiz span {
  flex: 1 1 auto;
  text-align: center;
  padding: 0.5em 0.2em;
  cursor: pointer;
  position: relative;
  transition: color 0.25s;
  min-width: 15%;
  letter-spacing: -0.5px;
}

@media (min-width: 500px) {
  .tabs-horiz span {
    letter-spacing: inherit;
  }
}

.tabs-horiz span::after {
  content: '';
  background: rgba(214, 79, 0, 0.7);
  height: 2px;
  position: absolute;
  width: 96%;
  left: 2%;
  bottom: -2px;
  transition: all 0.25s;
  transform: scale(0);
}

.tabs-horiz span.active::after, .tabs-horiz span:hover::after {
  transform: scale(1);
}

.tabs-horiz span.active {
  color: #d64f00;
}

.tabs-horiz .unread {
  margin-left: 0.3em;
}

body ::-webkit-scrollbar,
body ::-webkit-scrollbar-corner {
  width: 0.5rem;
  background: white;
}

body ::-webkit-scrollbar-thumb {
  background: #dbdbdb;
}

body ::-webkit-scrollbar-thumb:hover,
body ::-webkit-scrollbar-thumb:active {
  background: #b3b3b3;
}

.lobby {
  grid-area: main;
  display: grid;
  grid-template-areas: 'app' 'table' 'side' 'blog' 'tv' 'puzzle' 'leader' 'winner' 'tours' 'simuls' 'forum' 'support' 'about' '.';
  grid-gap: 2vmin;
}

.lobby__counters {
  margin-top: 2vmin;
}

@media (min-width: 500px) {
  .lobby {
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: auto repeat(3, fit-content(0));
    grid-template-areas: 'table  table' 'app    app' 'side   tv' 'side   puzzle' 'blog   blog' 'leader winner' 'tours  tours' 'simuls simuls' 'forum  forum' 'about  support';
  }
}

@media (min-width: 800px) {
  .lobby {
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: 12em repeat(2, fit-content(0));
    grid-template-areas: 'table   app     app' 'side    app     app' 'tv      leader  winner' 'puzzle  tours   tours' 'support blog    blog ' 'about   simuls  simuls' '. forum forum ';
  }
  .lobby__start {
    flex-flow: column;
    align-items: stretch;
    justify-content: center;
  }
  .lobby__counters {
    margin: 0.66667vmin 0 -0.66667vmin 0;
  }
  .lobby .timeline {
    margin-left: 0;
  }
}

@media (min-width: 1260px) {
  .lobby {
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(2, fit-content(0));
    grid-template-areas: 'side   app     app    table' 'tv     leader  winner puzzle' 'about  blog    blog   support' '.      tours   tours  .' '.      simuls  simuls .' '.      forum   forum  .';
  }
  .lobby__tournaments, .lobby__simuls {
    max-height: 20em;
  }
  .lobby__side {
    margin-top: 2em;
  }
  .lobby__counters {
    margin: 0;
  }
}

.lobby__side {
  grid-area: side;
}

.lobby__app, .lobby__nope {
  grid-area: app;
}

.lobby__table {
  grid-area: table;
}

.lobby__tv {
  grid-area: tv;
}

.lobby__leaderboard {
  grid-area: leader;
}

.lobby__winners {
  grid-area: winner;
}

.lobby__puzzle {
  grid-area: puzzle;
}

.lobby__tournaments {
  grid-area: tours;
}

.lobby__simuls {
  grid-area: simuls;
}

.lobby__forum {
  grid-area: forum;
}

.lobby--no-simuls .lobby__forum {
  grid-area: simuls;
}

.lobby__blog {
  grid-area: blog;
}

.lobby__support {
  grid-area: support;
}

.lobby__about {
  grid-area: about;
}

.lobby__app-pools {
  height: 300px;
}

@media (min-width: 500px) {
  .lobby__app-pools {
    height: 400px;
  }
}

.lpools {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(4, 1fr);
  grid-gap: 9px;
  padding: 9px;
}

.lpools {
  font-size: 14px;
}

@media (min-width: 320px) {
  .lpools {
    font-size: calc( 14px + 11 * ((100vw - 320px) / 880));
  }
}

@media (min-width: 1200px) {
  .lpools {
    font-size: 25px;
  }
}

.lpools > div {
  justify-content: center;
  align-items: center;
  cursor: pointer;
  border: 1px solid #d9d9d9;
  background: rgba(255, 255, 255, 0.5);
  color: #4d4d4d;
  transition: all 150ms;
}

.lpools > div:hover {
  background: rgba(214, 79, 0, 0.2);
  opacity: 1;
}

.lpools .active {
  background: white;
}

.lpools .active .perf {
  display: none;
}

.lpools .transp {
  opacity: 0.4;
}

.lpools .spinner {
  flex: 0 0 auto;
  margin: .1em 0 .6em 0;
  width: 2em;
  height: 2em;
  pointer-events: none;
}

.lpools .clock {
  display: block;
  font-size: 1.5em;
  line-height: 1.6em;
  letter-spacing: .1em;
}

.hooks__chart {
  bottom: 0;
  right: 0;
  overflow: hidden;
}

.hooks__chart .label {
  color: #787878;
  font-size: .7em;
  position: absolute;
  left: 3px;
  bottom: 1px;
  text-shadow: 0 1px 0 white;
  font-weight: bold;
}

.hooks__chart .grid {
  position: absolute;
  left: 0;
  bottom: 0;
}

.hooks__chart .grid.horiz {
  width: 100%;
  border-top: 1px dashed #d9d9d9;
}

.hooks__chart .grid.vert {
  height: 100%;
  border-right: 1px dashed #d9d9d9;
}

.hooks__chart .canvas {
  position: relative;
  width: 100%;
  height: 100%;
}

.hooks__chart .plot {
  position: absolute;
  cursor: pointer;
  z-index: 3;
  font-size: 1.6em;
  opacity: .7;
  transition: all 150ms;
  transform: scale(1);
}

.hooks__chart .plot.rated {
  opacity: 0.9;
  color: #d59020;
}

.hooks__chart .plot.cancel {
  opacity: 0.9;
  color: #629924;
}

.hooks__chart .plot.new {
  transform: translateY(-7px);
  opacity: 0;
}

.hooks__chart .plot:hover {
  z-index: 2;
  opacity: 1;
  transform: scale(1.15);
}

#hook {
  display: none;
  background: white;
  position: absolute;
  z-index: 120;
}

#hook .inner {
  text-align: center;
}

#hook .inner-clickable {
  cursor: pointer;
  padding: 5px 0;
}

#hook .opponent {
  min-width: 120px;
  padding: .5em .7em;
}

.hooks__list {
  width: 100%;
}

.hooks__list tr.disabled {
  opacity: 0.4;
}

.hooks__list tr.disabled td {
  cursor: default;
  background: transparent;
  border-color: transparent;
}

.hooks__list tr.cancel td {
  background: rgba(98, 153, 36, 0.4);
}

.hooks__list tr.join:hover td {
  background: rgba(214, 79, 0, 0.5);
  color: #fff;
}

.hooks__list tr:not(.disabled):hover ::before {
  opacity: 1;
}

.hooks__list tr.variants td {
  text-align: center;
  padding: 3px 0;
  background: none;
  text-transform: uppercase;
  letter-spacing: 3px;
  cursor: default;
}

.hooks__list th {
  padding: 1em;
}

.hooks__list th.sortable {
  cursor: pointer;
}

.hooks__list th.sortable:hover, .hooks__list th.sort {
  font-weight: normal;
}

.hooks__list th.sort .is:before {
  opacity: 0.7;
  margin-right: 3px;
  content: "R";
}

.hooks__list th.player {
  width: 110px;
}

.hooks__list td {
  padding: .5em .7em;
  border-bottom: 1px solid #d9d9d9;
  cursor: pointer;
  background: rgba(255, 255, 255, 0.5);
}

.hooks__list td:first-child {
  width: 16px;
}

.hooks__list td:first-child ::before {
  font-size: 1.2em;
  line-height: 1.3;
}

.hooks__list td:last-child ::before {
  margin-right: 8px;
  line-height: 0.9;
  font-size: 1.6em;
}

.hooks__list td ::before {
  opacity: 0.6;
}

.hooks__list tbody.stepping {
  opacity: 0.7;
}

.lseeks .create {
  margin-top: 20px;
  text-align: center;
}

.lobby__app {
  min-height: 300px;
  user-select: none;
}

@media (min-width: 500px) {
  .lobby__app {
    min-height: 400px;
  }
}

@media (min-width: 800px) {
  .lobby__app {
    height: 600px;
    max-height: calc(100vh - calc(var(--site-header-height) + var(--site-header-margin)) - 2vmin);
  }
}

.lobby-nope .lobby__app {
  display: none;
}

.lobby__app__content {
  flex: 1 1 100%;
  position: relative;
  background: white url("data:image/svg+xml,%3Csvg viewBox='-2 -2 54 54' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill='%23dadada' stroke='%23dadada' stroke-linejoin='round'%0Ad='M38.956.5c-3.53.418-6.452.902-9.286 2.984C5.534 1.786-.692 18.533.68 29.364 3.493 50.214 31.918 55.785 41.329 41.7c-7.444 7.696-19.276 8.752-28.323 3.084C3.959 39.116-.506 27.392 4.683 17.567 9.873 7.742 18.996 4.535 29.03 6.405c2.43-1.418 5.225-3.22 7.655-3.187l-1.694 4.86 12.752 21.37c-.439 5.654-5.459 6.112-5.459 6.112-.574-1.47-1.634-2.942-4.842-6.036-3.207-3.094-17.465-10.177-15.788-16.207-2.001 6.967 10.311 14.152 14.04 17.663 3.73 3.51 5.426 6.04 5.795 6.756 0 0 9.392-2.504 7.838-8.927L37.4 7.171z'/%3E%3C/svg%3E%0A");
  background-size: 100% 100%;
  overflow-x: hidden;
  overflow-y: auto;
}

.lobby__app .lredir {
  background: white;
  display: flex;
}

.lobby__app .lredir .spinner {
  width: 100px;
  height: 100px;
}

.lobby__app .toggle {
  position: absolute;
  padding: .6em;
  cursor: pointer;
  z-index: 2;
  font-size: 1.3em;
  transition: all 150ms;
}

.lobby__app .toggle.toggle-filter {
  right: 0;
}

.lobby__app .toggle:hover {
  color: #d64f00;
}

.lobby__app .gamesFiltered {
  color: #d64f00;
  transition: all 150ms;
}

.lobby__app .gamesFiltered:hover {
  color: #dd6d2b;
}

.lobby__table {
  position: relative;
}

.lobby__start {
  justify-content: stretch;
  flex: 1 1 auto;
  margin: 0 1em 0 1em;
}

@media (min-width: 500px) {
  .lobby__start {
    margin: 2em 0 0 0;
  }
}

.lobby__start a {
  font-size: 1.1em;
  text-align: center;
  margin: 0.2em 0;
  padding: 0.5em;
}

.lobby__start a.disabled {
  opacity: 0.2;
}

@media (min-width: 1260px) {
  .lobby__start {
    justify-content: center;
  }
  .lobby__start a {
    margin: 1.2em 0;
    padding: 1em;
  }
}

.lobby__counters {
  background: #f7f6f5;
  padding: 2vmin 4vmin;
}

@media (min-width: 800px) {
  .lobby__counters {
    background: none;
    padding: 0;
  }
}

@media (min-width: 1260px) {
  .lobby__counters {
    flex-flow: column;
    align-items: flex-start;
    position: absolute;
    bottom: 0;
  }
}

.lobby__counters a {
  color: #5e5e5e;
  transition: color 150ms;
}

.lobby__counters a:hover {
  color: #1b78d0;
}

.lobby__streams .stream {
  color: #5e5e5e;
  display: block;
  margin-bottom: 0.5em;
  line-height: 0.9;
}

.lobby__streams .stream.highlight strong {
  color: #d59020;
}

.lobby__streams .stream strong:before {
  font-size: 1.5em;
  margin-right: 0.1rem;
}

.lobby__spotlights {
  flex: 0 0 auto;
}

.tour-spotlight {
  flex: 0 0 auto;
  padding: 0.3em;
  opacity: 0.8;
  transition: all 150ms;
  text-shadow: 0 1px 0 white;
  color: #4d4d4d;
}

.tour-spotlight.invert, .tour-spotlight.event-spotlight, .tour-spotlight:hover {
  text-shadow: none;
}

.tour-spotlight:hover {
  opacity: 1;
}

.tour-spotlight .img {
  flex: 0 0 42px;
  width: 44px;
  margin: 0 0.5em 0 0.3em;
}

.tour-spotlight i.img::before {
  color: #fff;
  font-size: 42px;
  text-shadow: 1px 1px 2px #1b78d0;
}

.tour-spotlight img.img.icon {
  filter: drop-shadow(1px 1px 1px #1b78d0);
}

.tour-spotlight .name {
  margin-top: 1px;
  line-height: 13px;
  display: block;
}

.tour-spotlight .headline {
  display: block;
  font-size: 0.85em;
  margin-bottom: -3px;
}

.tour-spotlight .more {
  font-size: 0.85em;
}

.tour-spotlight .more time {
  margin-left: 3px;
}

.tour-spotlight.little .img {
  flex: 0 0 40px;
  margin: 0 0.5em 0 0.3em;
}

.tour-spotlight.little .img::before {
  font-size: 40px;
}

.timeline {
  flex: 1 1 auto;
  margin: 1em 0 0 2vmin;
  overflow-y: auto;
}

@media (hover: hover) {
  .timeline {
    overflow: hidden;
  }
  .timeline:hover {
    overflow-y: auto;
  }
}

.timeline .entry:hover a {
  color: #1b78d0;
}

.timeline .entry::after {
  content: '';
  display: block;
  width: 100%;
  height: 1px;
  background: linear-gradient(to left, #d9d9d9 20%, #edebe9);
  margin: 0.7em 0;
}

.lobby__box__top {
  flex: 0 0 auto;
  padding: 0.3em 0.5em;
}

.lobby__box__top .more {
  color: #787878;
  transition: all 150ms;
}

.lobby__box__top .more:hover {
  color: #1b78d0;
}

.lobby__box__top .title {
  font-size: 1em;
  font-weight: bold;
  color: #787878;
  padding: 0.3em;
}

.lobby__box__content {
  background: white;
  overflow-x: hidden;
  overflow-y: auto;
}

.lobby__box .user-link {
  padding-left: -1em;
  font-weight: bold;
  color: #787878;
}

.lobby__box table {
  width: 100%;
  height: 100%;
}

.lobby__box td {
  padding: 0.5em 0.4em;
  border-top: 1px solid #d9d9d9;
  max-width: 21ch;
  /* prevent leaderboard overflow due to long usernames */
}

.lobby__box td:first-child {
  padding-left: 0.7em;
}

.lobby__box td.name a {
  font-weight: bold;
  color: #787878;
  transition: all 150ms;
}

.lobby__box td.name a:hover {
  color: #1b78d0;
}

.lobby__box tr:nth-child(even) {
  background: #f7f6f5;
}

.lobby__leaderboard td:last-child, .lobby__winners td:last-child {
  text-align: right;
  padding-right: 0.7em;
}

.lobby__forum .lobby__box__top,
.lobby__blog .lobby__box__top {
  border-bottom: 1px solid #d9d9d9;
}

.lobby__forum li {
  margin: 0.6em 0;
  padding-left: 9px;
  line-height: 14px;
  white-space: nowrap;
}

.lobby__blog .post {
  color: #4d4d4d;
  flex-wrap: nowrap;
  overflow: hidden;
  padding: 0.2em 0.5em;
}

.lobby__blog .post:hover {
  background: #ddebf8;
}

.lobby__blog .post .text {
  flex: 1 1 100%;
}

.lobby__blog .post strong {
  display: block;
}

.lobby__blog .post img {
  height: 4em;
  width: 4em;
  margin-right: 0.8em;
}

.lobby__blog .post time {
  color: #787878;
  white-space: nowrap;
}

.lobby__support a {
  background: white;
  font-size: 1.3em;
  margin-bottom: 2vmin;
  padding: 0.2em 0.5em;
  transition: all 150ms;
}

.lobby__support a:hover {
  background: #d59020;
}

.lobby__support a:hover .lobby__support__text,
.lobby__support a:hover i::before {
  color: #fff;
}

.lobby__support i {
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.lobby__support i::before {
  margin-right: 0.15em;
  color: #d59020;
  font-size: 2.6em;
  transition: all 150ms;
}

.lobby__support__text {
  flex: 1 1 auto;
  color: #d59020;
  transition: all 150ms;
}

.lobby__support__text strong {
  font-weight: normal;
  display: block;
}

.lobby__support__text span {
  display: block;
  font-size: 0.8em;
}

.lobby__about {
  display: flex;
  align-content: flex-start;
  flex-flow: row wrap;
  font-size: 0.85em;
  font-weight: bold;
}

.lobby__about a {
  margin-right: 1.2em;
  white-space: nowrap;
  transition: color 150ms;
}

.lobby__about a:hover {
  color: #1b78d0;
}

.connect-links {
  flex: 0 0 100%;
  margin-top: 0.5em;
}

.connect-links a {
  font-weight: normal;
}

body {
  /* improves preload */
  overflow-y: scroll;
}

#main-wrap {
  --main-max-width: 1400px;
}

.lobby__streams .more, .timeline .more {
  font-size: 0.9em;
  margin: 0.5em 1em 0.5em 0;
  display: block;
  text-align: right;
  color: #787878;
}

.lobby__streams .more:hover, .timeline .more:hover {
  color: #1b78d0;
}

.lobby__side {
  overflow: hidden;
}

.lobby__nope {
  min-height: 300px;
  text-align: center;
}

@media (min-width: 500px) {
  .lobby__nope {
    min-height: 400px;
  }
}

@media (min-width: 800px) {
  .lobby__nope {
    height: 600px;
    max-height: calc(100vh - calc(var(--site-header-height) + var(--site-header-margin)) - 2vmin);
  }
}

.lobby__nope .lobby__app__content {
  height: 100%;
  align-items: center;
  padding-top: 2em;
}

.lobby__nope ul {
  margin: 0.6em auto;
  display: inline-block;
  text-align: left;
}

.lobby__nope li {
  list-style: disc outside;
  font-size: 1.1em;
}

.game-setup {
  display: none;
}

.about-side {
  margin-top: 2vmin;
}

@media (max-width: 799px) {
  .about-side,
  .lobby__streams,
  .lobby__about {
    margin-left: 2vmin;
  }
}

.lobby__tv .mini-game {
  overflow: visible;
}

.lobby__puzzle .text {
  color: #787878;
  display: block;
  text-align: right;
  margin-right: 1ch;
}

.now-playing .meta {
  align-items: center;
}

.bg-switch {
  display: none;
  visibility: hidden;
  position: relative;
  width: 42px;
  transition: all 150ms;
  opacity: 0.5;
  margin-top: 2em;
}

@media (min-width: 1260px) {
  .bg-switch {
    display: block;
  }
  .bg-switch.active {
    visibility: visible;
  }
}

.bg-switch:hover {
  opacity: 1;
}

.bg-switch__track {
  width: 42px;
  height: 24px;
  border-radius: 24px;
  border: 3px solid #1b78d0;
  background-color: #b8cee2;
  cursor: pointer;
}

.bg-switch__thumb {
  position: absolute;
  top: -2px;
  left: -2px;
  width: 28px;
  height: 28px;
  border-radius: 50%;
  background: #1b78d0 url("data:image/svg+xml;utf8,%3Csvg style='fill: %23ffffff;' width='14' height='13' viewBox='0 0 14 13' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M4.52208 7.71754C7.5782 7.71754 10.0557 5.24006 10.0557 2.18394C10.0557 1.93498 10.0392 1.68986 10.0074 1.44961C9.95801 1.07727 10.3495 0.771159 10.6474 0.99992C12.1153 2.12716 13.0615 3.89999 13.0615 5.89383C13.0615 9.29958 10.3006 12.0605 6.89485 12.0605C3.95334 12.0605 1.49286 10.001 0.876728 7.24527C0.794841 6.87902 1.23668 6.65289 1.55321 6.85451C2.41106 7.40095 3.4296 7.71754 4.52208 7.71754Z'%3E%3C/path%3E%3C/svg%3E") center no-repeat;
  transition: transform 0.3s cubic-bezier(0.4, 0.03, 0, 1);
  cursor: pointer;
}

body.dark .bg-switch__thumb {
  transform: translateX(18px);
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
