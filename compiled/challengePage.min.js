var challengePageStart=function(){"use strict";const e={cache:"no-cache",credentials:"same-origin"},t={"X-Requested-With":"XMLHttpRequest"},n=(e,t={})=>s(e,t).then((e=>{if(e.ok)return e.text();throw e.statusText})),s=(n,s={})=>fetch(n,Object.assign(Object.assign(Object.assign({},e),{headers:Object.assign({},t)}),s));return function(e){const t=".challenge-page";let s;function c(){s||$("#challenge-redirect").each((function(){location.href=this.href})),$(t).find("form.accept").on("submit",(function(){s=!0,$(this).html('<span class="ddloader"></span>')})),$(t).find("form.xhr").on("submit",(function(e){e.preventDefault(),(e=>{const t=e.getAttribute("action");t?n(t,{method:e.method,body:new FormData(e)}):Promise.reject(`Form has no action: ${e}`)})(this),$(this).html('<span class="ddloader"></span>')})),$(t).find("input.friend-autocomplete").each((function(){const e=this;lichess.userComplete().then((t=>t({input:e,friend:!0,tag:"span",focus:!0,onSelect:()=>setTimeout((()=>e.parentNode.submit()),100)})))}))}lichess.socket=new lichess.StrongSocket(e.socketUrl,e.data.socketVersion,{events:{reload(){n(e.xhrUrl).then((e=>{$(t).replaceWith($(e).find(t)),c(),lichess.contentLoaded($(t)[0])}))}}}),c(),function e(){document.getElementById("ping-challenge")&&(lichess.socket.send("ping"),setTimeout(e,9e3))}()}}();
