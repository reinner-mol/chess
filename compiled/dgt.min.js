var LichessDgt=function(){"use strict";function e(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}var t,o=function(){function e(){}var o=e.prototype;return o.unwrap=function(e,o){var n=this._chain((function(o){return t.ok(e?e(o):o)}),(function(e){return o?t.ok(o(e)):t.err(e)}));if(n.isErr)throw n.error;return n.value},o.map=function(e,o){return this._chain((function(o){return t.ok(e(o))}),(function(e){return t.err(o?o(e):e)}))},o.chain=function(e,o){return this._chain(e,o||function(e){return t.err(e)})},e}(),n=function(t){function o(e){var o;return(o=t.call(this)||this).value=e,o.isOk=!0,o.isErr=!1,o}return e(o,t),o.prototype._chain=function(e,t){return e(this.value)},o}(o),s=function(t){function o(e){var o;return(o=t.call(this)||this).error=e,o.isOk=!1,o.isErr=!0,o}return e(o,t),o.prototype._chain=function(e,t){return t(this.error)},o}(o);!function(e){e.ok=function(e){return new n(e)},e.err=function(e){return new s(e||new Error)},e.all=function(t){if(Array.isArray(t)){for(var o=[],n=0;n<t.length;n++){var s=t[n];if(s.isErr)return s;o.push(s.value)}return e.ok(o)}for(var r={},i=Object.keys(t),a=0;a<i.length;a++){var c=t[i[a]];if(c.isErr)return c;r[i[a]]=c.value}return e.ok(r)}}(t||(t={}));const r=["a","b","c","d","e","f","g","h"],i=["1","2","3","4","5","6","7","8"],a=["white","black"],c=["pawn","knight","bishop","rook","queen","king"],h=["a","h"];function l(e){return"role"in e}function u(e){return e=(858993459&(e-=e>>>1&1431655765))+(e>>>2&858993459),Math.imul(e+(e>>>4)&252645135,16843009)>>24}function d(e){return(e=e>>>8&16711935|(16711935&e)<<8)>>>16&65535|(65535&e)<<16}function m(e){return d(e=(e=(e=e>>>1&1431655765|(1431655765&e)<<1)>>>2&858993459|(858993459&e)<<2)>>>4&252645135|(252645135&e)<<4)}class f{constructor(e,t){this.lo=e,this.hi=t,this.lo=0|e,this.hi=0|t}static fromSquare(e){return e>=32?new f(0,1<<e-32):new f(1<<e,0)}static fromRank(e){return new f(255,0).shl64(8*e)}static fromFile(e){return new f(16843009<<e,16843009<<e)}static empty(){return new f(0,0)}static full(){return new f(4294967295,4294967295)}static corners(){return new f(129,2164260864)}static center(){return new f(402653184,24)}static backranks(){return new f(255,4278190080)}static backrank(e){return"white"===e?new f(255,0):new f(0,4278190080)}static lightSquares(){return new f(1437226410,1437226410)}static darkSquares(){return new f(2857740885,2857740885)}complement(){return new f(~this.lo,~this.hi)}xor(e){return new f(this.lo^e.lo,this.hi^e.hi)}union(e){return new f(this.lo|e.lo,this.hi|e.hi)}intersect(e){return new f(this.lo&e.lo,this.hi&e.hi)}diff(e){return new f(this.lo&~e.lo,this.hi&~e.hi)}intersects(e){return this.intersect(e).nonEmpty()}isDisjoint(e){return this.intersect(e).isEmpty()}supersetOf(e){return e.diff(this).isEmpty()}subsetOf(e){return this.diff(e).isEmpty()}shr64(e){return e>=64?f.empty():e>=32?new f(this.hi>>>e-32,0):e>0?new f(this.lo>>>e^this.hi<<32-e,this.hi>>>e):this}shl64(e){return e>=64?f.empty():e>=32?new f(0,this.lo<<e-32):e>0?new f(this.lo<<e,this.hi<<e^this.lo>>>32-e):this}bswap64(){return new f(d(this.hi),d(this.lo))}rbit64(){return new f(m(this.hi),m(this.lo))}minus64(e){const t=this.lo-e.lo,o=(t&e.lo&1)+(e.lo>>>1)+(t>>>1)>>>31;return new f(t,this.hi-(e.hi+o))}equals(e){return this.lo===e.lo&&this.hi===e.hi}size(){return u(this.lo)+u(this.hi)}isEmpty(){return 0===this.lo&&0===this.hi}nonEmpty(){return 0!==this.lo||0!==this.hi}has(e){return 0!=(e>=32?this.hi&1<<e-32:this.lo&1<<e)}set(e,t){return t?this.with(e):this.without(e)}with(e){return e>=32?new f(this.lo,this.hi|1<<e-32):new f(this.lo|1<<e,this.hi)}without(e){return e>=32?new f(this.lo,this.hi&~(1<<e-32)):new f(this.lo&~(1<<e),this.hi)}toggle(e){return e>=32?new f(this.lo,this.hi^1<<e-32):new f(this.lo^1<<e,this.hi)}last(){return 0!==this.hi?63-Math.clz32(this.hi):0!==this.lo?31-Math.clz32(this.lo):void 0}first(){return 0!==this.lo?31-Math.clz32(this.lo&-this.lo):0!==this.hi?63-Math.clz32(this.hi&-this.hi):void 0}withoutFirst(){return 0!==this.lo?new f(this.lo&this.lo-1,this.hi):new f(0,this.hi&this.hi-1)}moreThanOne(){return 0!==this.hi&&0!==this.lo||0!=(this.lo&this.lo-1)||0!=(this.hi&this.hi-1)}singleSquare(){return this.moreThanOne()?void 0:this.last()}isSingleSquare(){return this.nonEmpty()&&!this.moreThanOne()}*[Symbol.iterator](){let e=this.lo,t=this.hi;for(;0!==e;){const t=31-Math.clz32(e&-e);e^=1<<t,yield t}for(;0!==t;){const e=31-Math.clz32(t&-t);t^=1<<e,yield 32+e}}*reversed(){let e=this.lo,t=this.hi;for(;0!==t;){const e=31-Math.clz32(t);t^=1<<e,yield 32+e}for(;0!==e;){const t=31-Math.clz32(e);e^=1<<t,yield t}}}class p{constructor(){}static default(){const e=new p;return e.reset(),e}static racingKings(){const e=new p;return e.occupied=new f(65535,0),e.promoted=f.empty(),e.white=new f(61680,0),e.black=new f(3855,0),e.pawn=f.empty(),e.knight=new f(6168,0),e.bishop=new f(9252,0),e.rook=new f(16962,0),e.queen=new f(129,0),e.king=new f(33024,0),e}static horde(){const e=new p;return e.occupied=new f(4294967295,4294901862),e.promoted=f.empty(),e.white=new f(4294967295,102),e.black=new f(0,4294901760),e.pawn=new f(4294967295,16711782),e.knight=new f(0,1107296256),e.bishop=new f(0,603979776),e.rook=new f(0,2164260864),e.queen=new f(0,134217728),e.king=new f(0,268435456),e}reset(){this.occupied=new f(65535,4294901760),this.promoted=f.empty(),this.white=new f(65535,0),this.black=new f(0,4294901760),this.pawn=new f(65280,16711680),this.knight=new f(66,1107296256),this.bishop=new f(36,603979776),this.rook=new f(129,2164260864),this.queen=new f(8,134217728),this.king=new f(16,268435456)}static empty(){const e=new p;return e.clear(),e}clear(){this.occupied=f.empty(),this.promoted=f.empty();for(const e of a)this[e]=f.empty();for(const e of c)this[e]=f.empty()}clone(){const e=new p;e.occupied=this.occupied,e.promoted=this.promoted;for(const t of a)e[t]=this[t];for(const t of c)e[t]=this[t];return e}equalsIgnorePromoted(e){return!!this.white.equals(e.white)&&c.every((t=>this[t].equals(e[t])))}equals(e){return this.equalsIgnorePromoted(e)&&this.promoted.equals(e.promoted)}getColor(e){return this.white.has(e)?"white":this.black.has(e)?"black":void 0}getRole(e){for(const t of c)if(this[t].has(e))return t}get(e){const t=this.getColor(e);if(!t)return;return{color:t,role:this.getRole(e),promoted:this.promoted.has(e)}}take(e){const t=this.get(e);return t&&(this.occupied=this.occupied.without(e),this[t.color]=this[t.color].without(e),this[t.role]=this[t.role].without(e),t.promoted&&(this.promoted=this.promoted.without(e))),t}set(e,t){const o=this.take(e);return this.occupied=this.occupied.with(e),this[t.color]=this[t.color].with(e),this[t.role]=this[t.role].with(e),t.promoted&&(this.promoted=this.promoted.with(e)),o}has(e){return this.occupied.has(e)}*[Symbol.iterator](){for(const e of this.occupied)yield[e,this.get(e)]}pieces(e,t){return this[e].intersect(this[t])}rooksAndQueens(){return this.rook.union(this.queen)}bishopsAndQueens(){return this.bishop.union(this.queen)}kingOf(e){return this.king.intersect(this[e]).diff(this.promoted).singleSquare()}}function g(e){return void 0!==e}function w(e){return"white"===e?"black":"white"}function k(e){return e>>3}function b(e){return 7&e}function v(e){switch(e){case"pawn":return"p";case"knight":return"n";case"bishop":return"b";case"rook":return"r";case"queen":return"q";case"king":return"k"}}function y(e){switch(e){case"P":case"p":return"pawn";case"N":case"n":return"knight";case"B":case"b":return"bishop";case"R":case"r":return"rook";case"Q":case"q":return"queen";case"K":case"k":return"king";default:return}}function S(e){if(2!==e.length)return;const t=e.charCodeAt(0)-"a".charCodeAt(0),o=e.charCodeAt(1)-"1".charCodeAt(0);return t<0||t>=8||o<0||o>=8?void 0:t+8*o}function E(e){return r[b(e)]+i[k(e)]}function C(e){if("@"===e[1]&&4===e.length){const t=y(e[0]),o=S(e.slice(2));if(t&&g(o))return{role:t,to:o}}else if(4===e.length||5===e.length){const t=S(e.slice(0,2)),o=S(e.slice(2,4));let n;if(5===e.length&&(n=y(e[4]),!n))return;if(g(t)&&g(o))return{from:t,to:o,promotion:n}}}function q(e){return l(e)?`${v(e.role).toUpperCase()}@${E(e.to)}`:E(e.from)+E(e.to)+(e.promotion?v(e.promotion):"")}function O(e,t){return"white"===e?"a"===t?2:6:"a"===t?58:62}function R(e,t){let o=f.empty();for(const n of t){const t=e+n;0<=t&&t<64&&Math.abs(b(e)-b(t))<=2&&(o=o.with(t))}return o}function I(e){const t=[];for(let o=0;o<64;o++)t[o]=e(o);return t}const A=I((e=>R(e,[-9,-8,-7,-1,1,7,8,9]))),M=I((e=>R(e,[-17,-15,-10,-6,6,10,15,17]))),N={white:I((e=>R(e,[7,9]))),black:I((e=>R(e,[-7,-9])))};function T(e){return A[e]}function B(e){return M[e]}function P(e,t){return N[e][t]}const $=I((e=>f.fromFile(b(e)).without(e))),x=I((e=>f.fromRank(k(e)).without(e))),_=I((e=>{const t=new f(134480385,2151686160),o=8*(k(e)-b(e));return(o>=0?t.shl64(o):t.shr64(-o)).without(e)})),L=I((e=>{const t=new f(270549120,16909320),o=8*(k(e)+b(e)-7);return(o>=0?t.shl64(o):t.shr64(-o)).without(e)}));function D(e,t,o){let n=o.intersect(t),s=n.bswap64();return n=n.minus64(e),s=s.minus64(e.bswap64()),n.xor(s.bswap64()).intersect(t)}function K(e,t){const o=f.fromSquare(e);return D(o,_[e],t).xor(D(o,L[e],t))}function F(e,t){return function(e,t){return D(f.fromSquare(e),$[e],t)}(e,t).xor(function(e,t){const o=x[e];let n=t.intersect(o),s=n.rbit64();return n=n.minus64(f.fromSquare(e)),s=s.minus64(f.fromSquare(63-e)),n.xor(s.rbit64()).intersect(o)}(e,t))}function G(e,t){return K(e,t).xor(F(e,t))}function z(e,t,o){switch(e.role){case"pawn":return P(e.color,t);case"knight":return B(t);case"bishop":return K(t,o);case"rook":return F(t,o);case"queen":return G(t,o);case"king":return T(t)}}function U(e,t){const o=f.fromSquare(t);return x[e].intersects(o)?x[e].with(e):L[e].intersects(o)?L[e].with(e):_[e].intersects(o)?_[e].with(e):$[e].intersects(o)?$[e].with(e):f.empty()}function J(e,t){return U(e,t).intersect(f.full().shl64(e).xor(f.full().shl64(t))).withoutFirst()}var Q;!function(e){e.Empty="ERR_EMPTY",e.OppositeCheck="ERR_OPPOSITE_CHECK",e.ImpossibleCheck="ERR_IMPOSSIBLE_CHECK",e.PawnsOnBackrank="ERR_PAWNS_ON_BACKRANK",e.Kings="ERR_KINGS",e.Variant="ERR_VARIANT"}(Q||(Q={}));class W extends Error{}function H(e,t){return"white"===e?"a"===t?3:5:"a"===t?59:61}class j{constructor(){}static default(){const e=new j;return e.unmovedRooks=f.corners(),e.rook={white:{a:0,h:7},black:{a:56,h:63}},e.path={white:{a:new f(14,0),h:new f(96,0)},black:{a:new f(0,234881024),h:new f(0,1610612736)}},e}static empty(){const e=new j;return e.unmovedRooks=f.empty(),e.rook={white:{a:void 0,h:void 0},black:{a:void 0,h:void 0}},e.path={white:{a:f.empty(),h:f.empty()},black:{a:f.empty(),h:f.empty()}},e}clone(){const e=new j;return e.unmovedRooks=this.unmovedRooks,e.rook={white:{a:this.rook.white.a,h:this.rook.white.h},black:{a:this.rook.black.a,h:this.rook.black.h}},e.path={white:{a:this.path.white.a,h:this.path.white.h},black:{a:this.path.black.a,h:this.path.black.h}},e}add(e,t,o,n){const s=O(e,t),r=H(e,t);this.unmovedRooks=this.unmovedRooks.with(n),this.rook[e][t]=n,this.path[e][t]=J(n,r).with(r).union(J(o,s).with(s)).without(o).without(n)}static fromSetup(e){const t=j.empty(),o=e.unmovedRooks.intersect(e.board.rook);for(const n of a){const s=f.backrank(n),r=e.board.kingOf(n);if(!g(r)||!s.has(r))continue;const i=o.intersect(e.board[n]).intersect(s),a=i.first();g(a)&&a<r&&t.add(n,"a",r,a);const c=i.last();g(c)&&r<c&&t.add(n,"h",r,c)}return t}discardRook(e){if(this.unmovedRooks.has(e)){this.unmovedRooks=this.unmovedRooks.without(e);for(const t of a)for(const o of h)this.rook[t][o]===e&&(this.rook[t][o]=void 0)}}discardSide(e){this.unmovedRooks=this.unmovedRooks.diff(f.backrank(e)),this.rook[e].a=void 0,this.rook[e].h=void 0}}class V extends class{constructor(e){this.rules=e}kingAttackers(e,t,o){return function(e,t,o,n){return o[t].intersect(F(e,n).intersect(o.rooksAndQueens()).union(K(e,n).intersect(o.bishopsAndQueens())).union(B(e).intersect(o.knight)).union(T(e).intersect(o.king)).union(P(w(t),e).intersect(o.pawn)))}(e,t,this.board,o)}dropDests(e){return f.empty()}playCaptureAt(e,t){this.halfmoves=0,"rook"===t.role&&this.castles.discardRook(e),this.pockets&&this.pockets[w(t.color)][t.role]++}ctx(){const e=this.isVariantEnd(),t=this.board.kingOf(this.turn);if(!g(t))return{king:t,blockers:f.empty(),checkers:f.empty(),variantEnd:e,mustCapture:!1};const o=F(t,f.empty()).intersect(this.board.rooksAndQueens()).union(K(t,f.empty()).intersect(this.board.bishopsAndQueens())).intersect(this.board[w(this.turn)]);let n=f.empty();for(const e of o){const o=J(t,e).intersect(this.board.occupied);o.moreThanOne()||(n=n.union(o))}return{king:t,blockers:n,checkers:this.kingAttackers(t,w(this.turn),this.board.occupied),variantEnd:e,mustCapture:!1}}clone(){var e,t;const o=new this.constructor;return o.board=this.board.clone(),o.pockets=null===(e=this.pockets)||void 0===e?void 0:e.clone(),o.turn=this.turn,o.castles=this.castles.clone(),o.epSquare=this.epSquare,o.remainingChecks=null===(t=this.remainingChecks)||void 0===t?void 0:t.clone(),o.halfmoves=this.halfmoves,o.fullmoves=this.fullmoves,o}equalsIgnoreMoves(e){var t,o;return this.rules===e.rules&&(this.pockets?this.board.equals(e.board):this.board.equalsIgnorePromoted(e.board))&&(e.pockets&&(null===(t=this.pockets)||void 0===t?void 0:t.equals(e.pockets))||!this.pockets&&!e.pockets)&&this.turn===e.turn&&this.castles.unmovedRooks.equals(e.castles.unmovedRooks)&&this.legalEpSquare()===e.legalEpSquare()&&(e.remainingChecks&&(null===(o=this.remainingChecks)||void 0===o?void 0:o.equals(e.remainingChecks))||!this.remainingChecks&&!e.remainingChecks)}toSetup(){var e,t;return{board:this.board.clone(),pockets:null===(e=this.pockets)||void 0===e?void 0:e.clone(),turn:this.turn,unmovedRooks:this.castles.unmovedRooks,epSquare:this.legalEpSquare(),remainingChecks:null===(t=this.remainingChecks)||void 0===t?void 0:t.clone(),halfmoves:Math.min(this.halfmoves,150),fullmoves:Math.min(Math.max(this.fullmoves,1),9999)}}isInsufficientMaterial(){return a.every((e=>this.hasInsufficientMaterial(e)))}hasDests(e){e=e||this.ctx();for(const t of this.board[this.turn])if(this.dests(t,e).nonEmpty())return!0;return this.dropDests(e).nonEmpty()}isLegal(e,t){if(l(e))return!(!this.pockets||this.pockets[this.turn][e.role]<=0)&&(("pawn"!==e.role||!f.backranks().has(e.to))&&this.dropDests(t).has(e.to));{if("pawn"===e.promotion)return!1;if("king"===e.promotion&&"antichess"!==this.rules)return!1;if(!!e.promotion!==(this.board.pawn.has(e.from)&&f.backranks().has(e.to)))return!1;const o=this.dests(e.from,t);return o.has(e.to)||o.has(this.normalizeMove(e).to)}}isCheck(){const e=this.board.kingOf(this.turn);return g(e)&&this.kingAttackers(e,w(this.turn),this.board.occupied).nonEmpty()}isEnd(e){return!!(e?e.variantEnd:this.isVariantEnd())||(this.isInsufficientMaterial()||!this.hasDests(e))}isCheckmate(e){return!(e=e||this.ctx()).variantEnd&&e.checkers.nonEmpty()&&!this.hasDests(e)}isStalemate(e){return!(e=e||this.ctx()).variantEnd&&e.checkers.isEmpty()&&!this.hasDests(e)}outcome(e){const t=this.variantOutcome(e);return t||(e=e||this.ctx(),this.isCheckmate(e)?{winner:w(this.turn)}:this.isInsufficientMaterial()||this.isStalemate(e)?{winner:void 0}:void 0)}allDests(e){e=e||this.ctx();const t=new Map;if(e.variantEnd)return t;for(const o of this.board[this.turn])t.set(o,this.dests(o,e));return t}castlingSide(e){if(l(e))return;const t=e.to-e.from;return(2===Math.abs(t)||this.board[this.turn].has(e.to))&&this.board.king.has(e.from)?t>0?"h":"a":void 0}normalizeMove(e){const t=this.castlingSide(e);if(!t)return e;const o=this.castles.rook[this.turn][t];return{from:e.from,to:g(o)?o:e.to}}play(e){const t=this.turn,o=this.epSquare,n=this.castlingSide(e);if(this.epSquare=void 0,this.halfmoves+=1,"black"===t&&(this.fullmoves+=1),this.turn=w(t),l(e))this.board.set(e.to,{role:e.role,color:t}),this.pockets&&this.pockets[t][e.role]--,"pawn"===e.role&&(this.halfmoves=0);else{const s=this.board.take(e.from);if(!s)return;let r;if("pawn"===s.role){this.halfmoves=0,e.to===o&&(r=this.board.take(e.to+("white"===t?-8:8)));const n=e.from-e.to;16===Math.abs(n)&&8<=e.from&&e.from<=55&&(this.epSquare=e.from+e.to>>1),e.promotion&&(s.role=e.promotion,s.promoted=!0)}else if("rook"===s.role)this.castles.discardRook(e.from);else if("king"===s.role){if(n){const e=this.castles.rook[t][n];if(g(e)){const o=this.board.take(e);this.board.set(O(t,n),s),o&&this.board.set(H(t,n),o)}}if(this.castles.discardSide(t),n)return}const i=this.board.set(e.to,s)||r;i&&this.playCaptureAt(e.to,i)}}legalEpSquare(e){if(!g(this.epSquare))return;e=e||this.ctx();const t=this.board.pieces(this.turn,"pawn").intersect(P(w(this.turn),this.epSquare));for(const o of t)if(this.dests(o,e).has(this.epSquare))return this.epSquare}}{constructor(e){super(e||"chess")}static default(){const e=new this;return e.board=p.default(),e.pockets=void 0,e.turn="white",e.castles=j.default(),e.epSquare=void 0,e.remainingChecks=void 0,e.halfmoves=0,e.fullmoves=1,e}static fromSetup(e){const t=new this;return t.board=e.board.clone(),t.pockets=void 0,t.turn=e.turn,t.castles=j.fromSetup(e),t.epSquare=t.validEpSquare(e.epSquare),t.remainingChecks=void 0,t.halfmoves=e.halfmoves,t.fullmoves=e.fullmoves,t.validate().map((e=>t))}clone(){return super.clone()}validate(){if(this.board.occupied.isEmpty())return t.err(new W(Q.Empty));if(2!==this.board.king.size())return t.err(new W(Q.Kings));if(!g(this.board.kingOf(this.turn)))return t.err(new W(Q.Kings));const e=this.board.kingOf(w(this.turn));return g(e)?this.kingAttackers(e,this.turn,this.board.occupied).nonEmpty()?t.err(new W(Q.OppositeCheck)):f.backranks().intersects(this.board.pawn)?t.err(new W(Q.PawnsOnBackrank)):this.validateCheckers():t.err(new W(Q.Kings))}validateCheckers(){const e=this.board.kingOf(this.turn);if(g(e)){const o=this.kingAttackers(e,w(this.turn),this.board.occupied);if(o.size()>2||2===o.size()&&U(o.first(),o.last()).has(e))return t.err(new W(Q.ImpossibleCheck));if(g(this.epSquare))for(const n of o)if(U(n,this.epSquare).has(e))return t.err(new W(Q.ImpossibleCheck))}return t.ok(void 0)}validEpSquare(e){if(!g(e))return;const t="white"===this.turn?5:2,o="white"===this.turn?8:-8;if(k(e)!==t)return;if(this.board.occupied.has(e+o))return;const n=e-o;return this.board.pawn.has(n)&&this.board[w(this.turn)].has(n)?e:void 0}castlingDest(e,t){if(!g(t.king)||t.checkers.nonEmpty())return f.empty();const o=this.castles.rook[this.turn][e];if(!g(o))return f.empty();if(this.castles.path[this.turn][e].intersects(this.board.occupied))return f.empty();const n=O(this.turn,e),s=J(t.king,n),r=this.board.occupied.without(t.king);for(const e of s)if(this.kingAttackers(e,w(this.turn),r).nonEmpty())return f.empty();const i=H(this.turn,e),a=this.board.occupied.toggle(t.king).toggle(o).toggle(i);return this.kingAttackers(n,w(this.turn),a).nonEmpty()?f.empty():f.fromSquare(o)}canCaptureEp(e,t){if(!g(this.epSquare))return!1;if(!P(this.turn,e).has(this.epSquare))return!1;if(!g(t.king))return!0;const o=this.epSquare+("white"===this.turn?-8:8),n=this.board.occupied.toggle(e).toggle(this.epSquare).toggle(o);return!this.kingAttackers(t.king,w(this.turn),n).intersects(n)}pseudoDests(e,t){if(t.variantEnd)return f.empty();const o=this.board.get(e);if(!o||o.color!==this.turn)return f.empty();let n=z(o,e,this.board.occupied);if("pawn"===o.role){let t=this.board[w(this.turn)];g(this.epSquare)&&(t=t.with(this.epSquare)),n=n.intersect(t);const o="white"===this.turn?8:-8,s=e+o;if(0<=s&&s<64&&!this.board.occupied.has(s)){n=n.with(s);const t=s+o;("white"===this.turn?e<16:e>=48)&&!this.board.occupied.has(t)&&(n=n.with(t))}return n}return n=n.diff(this.board[this.turn]),e===t.king?n.union(this.castlingDest("a",t)).union(this.castlingDest("h",t)):n}dests(e,t){if((t=t||this.ctx()).variantEnd)return f.empty();const o=this.board.get(e);if(!o||o.color!==this.turn)return f.empty();let n,s;if("pawn"===o.role){n=P(this.turn,e).intersect(this.board[w(this.turn)]);const o="white"===this.turn?8:-8,r=e+o;if(0<=r&&r<64&&!this.board.occupied.has(r)){n=n.with(r);const t=r+o;("white"===this.turn?e<16:e>=48)&&!this.board.occupied.has(t)&&(n=n.with(t))}if(g(this.epSquare)&&this.canCaptureEp(e,t)){const e=this.epSquare-o;(t.checkers.isEmpty()||t.checkers.singleSquare()===e)&&(s=f.fromSquare(this.epSquare))}}else n="bishop"===o.role?K(e,this.board.occupied):"knight"===o.role?B(e):"rook"===o.role?F(e,this.board.occupied):"queen"===o.role?G(e,this.board.occupied):T(e);if(n=n.diff(this.board[this.turn]),g(t.king)){if("king"===o.role){const o=this.board.occupied.without(e);for(const e of n)this.kingAttackers(e,w(this.turn),o).nonEmpty()&&(n=n.without(e));return n.union(this.castlingDest("a",t)).union(this.castlingDest("h",t))}if(t.checkers.nonEmpty()){const e=t.checkers.singleSquare();if(!g(e))return f.empty();n=n.intersect(J(e,t.king).with(e))}t.blockers.has(e)&&(n=n.intersect(U(e,t.king)))}return s&&(n=n.union(s)),n}isVariantEnd(){return!1}variantOutcome(e){}hasInsufficientMaterial(e){if(this.board[e].intersect(this.board.pawn.union(this.board.rooksAndQueens())).nonEmpty())return!1;if(this.board[e].intersects(this.board.knight))return this.board[e].size()<=2&&this.board[w(e)].diff(this.board.king).diff(this.board.queen).isEmpty();if(this.board[e].intersects(this.board.bishop)){return(!this.board.bishop.intersects(f.darkSquares())||!this.board.bishop.intersects(f.lightSquares()))&&this.board.pawn.isEmpty()&&this.board.knight.isEmpty()}return!0}}class X{constructor(){}static empty(){const e=new X;for(const t of c)e[t]=0;return e}static fromBoard(e,t){const o=new X;for(const n of c)o[n]=e.pieces(t,n).size();return o}clone(){const e=new X;for(const t of c)e[t]=this[t];return e}equals(e){return c.every((t=>this[t]===e[t]))}add(e){const t=new X;for(const o of c)t[o]=this[o]+e[o];return t}nonEmpty(){return c.some((e=>this[e]>0))}isEmpty(){return!this.nonEmpty()}hasPawns(){return this.pawn>0}hasNonPawns(){return this.knight>0||this.bishop>0||this.rook>0||this.queen>0||this.king>0}count(){return this.pawn+this.knight+this.bishop+this.rook+this.queen+this.king}}class Y{constructor(e,t){this.white=e,this.black=t}static empty(){return new Y(X.empty(),X.empty())}static fromBoard(e){return new Y(X.fromBoard(e,"white"),X.fromBoard(e,"black"))}clone(){return new Y(this.white.clone(),this.black.clone())}equals(e){return this.white.equals(e.white)&&this.black.equals(e.black)}add(e){return new Y(this.white.add(e.white),this.black.add(e.black))}count(){return this.white.count()+this.black.count()}isEmpty(){return this.white.isEmpty()&&this.black.isEmpty()}nonEmpty(){return!this.isEmpty()}hasPawns(){return this.white.hasPawns()||this.black.hasPawns()}hasNonPawns(){return this.white.hasNonPawns()||this.black.hasNonPawns()}}class Z{constructor(e,t){this.white=e,this.black=t}static default(){return new Z(3,3)}clone(){return new Z(this.white,this.black)}equals(e){return this.white===e.white&&this.black===e.black}}var ee;!function(e){e.Fen="ERR_FEN",e.Board="ERR_BOARD",e.Pockets="ERR_POCKETS",e.Turn="ERR_TURN",e.Castling="ERR_CASTLING",e.EpSquare="ERR_EP_SQUARE",e.RemainingChecks="ERR_REMAINING_CHECKS",e.Halfmoves="ERR_HALFMOVES",e.Fullmoves="ERR_FULLMOVES"}(ee||(ee={}));class te extends Error{}function oe(e){return/^\d{1,4}$/.test(e)?parseInt(e,10):void 0}function ne(e){const t=y(e);return t&&{role:t,color:e.toLowerCase()===e?"black":"white"}}function se(e){const o=p.empty();let n=7,s=0;for(let r=0;r<e.length;r++){const i=e[r];if("/"===i&&8===s)s=0,n--;else{const a=parseInt(i,10);if(a>0)s+=a;else{if(s>=8||n<0)return t.err(new te(ee.Board));const a=s+8*n,c=ne(i);if(!c)return t.err(new te(ee.Board));"~"===e[r+1]&&(c.promoted=!0,r++),o.set(a,c),s++}}}return 0!==n||8!==s?t.err(new te(ee.Board)):t.ok(o)}function re(e){if(e.length>64)return t.err(new te(ee.Pockets));const o=Y.empty();for(const n of e){const e=ne(n);if(!e)return t.err(new te(ee.Pockets));o[e.color][e.role]++}return t.ok(o)}function ie(e){const o=e.split("+");if(3===o.length&&""===o[0]){const e=oe(o[1]),n=oe(o[2]);return!g(e)||e>3||!g(n)||n>3?t.err(new te(ee.RemainingChecks)):t.ok(new Z(3-e,3-n))}if(2===o.length){const e=oe(o[0]),n=oe(o[1]);return!g(e)||e>3||!g(n)||n>3?t.err(new te(ee.RemainingChecks)):t.ok(new Z(e,n))}return t.err(new te(ee.RemainingChecks))}function ae(e){const o=e.split(" "),n=o.shift();let s,r,i=t.ok(void 0);if(n.endsWith("]")){const e=n.indexOf("[");if(-1===e)return t.err(new te(ee.Fen));s=se(n.substr(0,e)),i=re(n.substr(e+1,n.length-1-e-1))}else{const e=function(e,t,o){let n=e.indexOf(t);for(;o-- >0&&-1!==n;)n=e.indexOf(t,n+t.length);return n}(n,"/",7);-1===e?s=se(n):(s=se(n.substr(0,e)),i=re(n.substr(e+1)))}const a=o.shift();if(g(a)&&"w"!==a){if("b"!==a)return t.err(new te(ee.Turn));r="black"}else r="white";return s.chain((e=>{const n=o.shift(),s=g(n)?function(e,o){let n=f.empty();if("-"===o)return t.ok(n);if(!/^[KQABCDEFGH]{0,2}[kqabcdefgh]{0,2}$/.test(o))return t.err(new te(ee.Castling));for(const t of o){const o=t.toLowerCase(),s=t===o?"black":"white",r=f.backrank(s).intersect(e[s]);let i;i="q"===o?r:"k"===o?r.reversed():f.fromSquare(o.charCodeAt(0)-"a".charCodeAt(0)).intersect(r);for(const t of i){if(e.king.has(t)&&!e.promoted.has(t))break;if(e.rook.has(t)){n=n.with(t);break}}}return t.ok(n)}(e,n):t.ok(f.empty()),a=o.shift();let c;if(g(a)&&"-"!==a&&(c=S(a),!g(c)))return t.err(new te(ee.EpSquare));let h,l=o.shift();g(l)&&l.includes("+")&&(h=ie(l),l=o.shift());const u=g(l)?oe(l):0;if(!g(u))return t.err(new te(ee.Halfmoves));const d=o.shift(),m=g(d)?oe(d):1;if(!g(m))return t.err(new te(ee.Fullmoves));const p=o.shift();let w=t.ok(void 0);if(g(p)){if(g(h))return t.err(new te(ee.RemainingChecks));w=ie(p)}else g(h)&&(w=h);return o.length>0?t.err(new te(ee.Fen)):i.chain((t=>s.chain((o=>w.map((n=>({board:e,pockets:t,turn:r,unmovedRooks:o,remainingChecks:n,epSquare:c,halfmoves:u,fullmoves:Math.max(1,m)})))))))}))}function ce(e,t){let o=v(e.role);return"white"===e.color&&(o=o.toUpperCase()),(null==t?void 0:t.promoted)&&e.promoted&&(o+="~"),o}function he(e,t){let o="",n=0;for(let s=7;s>=0;s--)for(let r=0;r<8;r++){const i=r+8*s,a=e.get(i);a?(n>0&&(o+=n,n=0),o+=ce(a,t)):n++,7===r&&(n>0&&(o+=n,n=0),0!==s&&(o+="/"))}return o}function le(e){return c.map((t=>v(t).repeat(e[t]))).join("")}function ue(e,t,o){const n=null==o?void 0:o.shredder;let s="";for(const o of a){const i=f.backrank(o),a=e.kingOf(o);if(!g(a)||!i.has(a))continue;const c=e.pieces(o,"rook").intersect(i);for(const e of t.intersect(c).reversed())if(!n&&e===c.first()&&e<a)s+="white"===o?"Q":"q";else if(!n&&e===c.last()&&a<e)s+="white"===o?"K":"k";else{const t=r[b(e)];s+="white"===o?t.toUpperCase():t}}return s||"-"}function de(e,t){var o;const n=function(e,t){let o="";if(l(t))"pawn"!==t.role&&(o=v(t.role).toUpperCase()),o+="@"+E(t.to);else{const n=e.board.getRole(t.from);if(!n)return"--";if("king"!==n||!e.board[e.turn].has(t.to)&&2!==Math.abs(t.to-t.from)){const s=e.board.occupied.has(t.to)||"pawn"===n&&b(t.from)!==b(t.to);if("pawn"!==n){let s;if(o=v(n).toUpperCase(),s="king"===n?T(t.to).intersect(e.board.king):"queen"===n?G(t.to,e.board.occupied).intersect(e.board.queen):"rook"===n?F(t.to,e.board.occupied).intersect(e.board.rook):"bishop"===n?K(t.to,e.board.occupied).intersect(e.board.bishop):B(t.to).intersect(e.board.knight),s=s.intersect(e.board[e.turn]).without(t.from),s.nonEmpty()){const n=e.ctx();for(const o of s)e.dests(o,n).has(t.to)||(s=s.without(o));if(s.nonEmpty()){let e=!1,n=s.intersects(f.fromRank(k(t.from)));s.intersects(f.fromFile(b(t.from)))?e=!0:n=!0,n&&(o+=r[b(t.from)]),e&&(o+=i[k(t.from)])}}}else s&&(o=r[b(t.from)]);s&&(o+="x"),o+=E(t.to),t.promotion&&(o+="="+v(t.promotion).toUpperCase())}else o=t.to>t.from?"O-O":"O-O-O"}return o}(e,t);return e.play(t),(null===(o=e.outcome())||void 0===o?void 0:o.winner)?n+"#":e.isCheck()?n+"+":n}function me(e,t){return de(e.clone(),t)}function fe(e,t){const o=e.ctx();let n;if("O-O"===t||"O-O+"===t||"O-O#"===t?n="h":"O-O-O"!==t&&"O-O-O+"!==t&&"O-O-O#"!==t||(n="a"),n){const t=e.castles.rook[e.turn][n];if(!g(o.king)||!g(t)||!e.dests(o.king,o).has(t))return;return{from:o.king,to:t}}const s=t.match(/^([NBRQK])?([a-h])?([1-8])?[-x]?([a-h][1-8])(?:=?([nbrqkNBRQK]))?[+#]?$/);if(!s){const n=t.match(/^([pnbrqkPNBRQK])?@([a-h][1-8])[+#]?$/);if(!n)return;const s={role:y(n[1])||"pawn",to:S(n[2])};return e.isLegal(s,o)?s:void 0}const r=y(s[1])||"pawn",i=S(s[4]),a=y(s[5]);if(!!a!==("pawn"===r&&f.backranks().has(i)))return;if("king"===a&&"antichess"!==e.rules)return;let c=e.board.pieces(e.turn,r);s[2]&&(c=c.intersect(f.fromFile(s[2].charCodeAt(0)-"a".charCodeAt(0)))),s[3]&&(c=c.intersect(f.fromRank(s[3].charCodeAt(0)-"1".charCodeAt(0))));const h="pawn"===r?f.fromFile(b(i)):f.empty();let l;c=c.intersect(h.union(z({color:w(e.turn),role:r},i,e.board.occupied)));for(const t of c)if(e.dests(t,o).has(i)){if(g(l))return;l=t}return g(l)?{from:l,to:i,promotion:a}:void 0}function pe(e){return ce(e)}function ge(e){const t=[];for(let o=7;o>=0;o--)for(let n=0;n<8;n++){const s=n+8*o,r=e.get(s),i=r?pe(r):".";t.push(i),t.push(n<7?i.length<2?" ":"":"\n")}return t.join("")}return{configPage:function(){const e=document.getElementById("dgt-config"),t=document.getElementById("dgt-speech-voice");!function e(){"undefined"!=typeof speechSynthesis&&(speechSynthesis.getVoices().forEach(((e,o)=>{const n=document.createElement("option");n.value=e.name,n.textContent=e.name+" ("+e.lang+")",e.default&&(n.textContent+=" -- DEFAULT"),t.appendChild(n),e.name==localStorage.getItem("dgt-speech-voice")&&(t.selectedIndex=o)})),speechSynthesis.onvoiceschanged=e)}();const o={K:"King",Q:"Queen",R:"Rook",B:"Bishop",N:"Knight",P:"Pawn",x:"Takes","+":"Check","#":"Checkmate","(=)":"Game ends in draw","O-O-O":"Castles queenside","O-O":"Castles kingside",white:"White",black:"Black","wins by":"wins by",timeout:"timeout",resignation:"resignation",illegal:"illegal",move:"move"};[["dgt-livechess-url","ws://localhost:1982/api/v1.0"],["dgt-speech-keywords",JSON.stringify(o,void 0,2)],["dgt-speech-synthesis","true"],["dgt-speech-announce-all-moves","true"],["dgt-speech-announce-move-format","san"],["dgt-verbose","false"]].forEach((([e,t])=>{localStorage.getItem(e)||localStorage.setItem(e,t)})),["dgt-livechess-url","dgt-speech-keywords"].forEach((t=>{e[t].value=localStorage.getItem(t)})),["dgt-speech-synthesis","dgt-speech-announce-all-moves","dgt-verbose"].forEach((e=>[!0,!1].forEach((t=>{document.getElementById(`${e}_${t}`).checked=localStorage.getItem(e)==""+t})))),["san","uci"].forEach((e=>{const t="dgt-speech-announce-move-format";document.getElementById(`${t}_${e}`).checked=localStorage.getItem(t)==""+e})),e.addEventListener("submit",(t=>{t.preventDefault(),Array.from(new FormData(e).entries()).forEach((([e,t])=>localStorage.setItem(e,t.toString())))}))},playPage:function(e){const t=document.getElementById("dgt-play-zone"),o=document.getElementById("dgt-play-zone-log"),n=localStorage.getItem("dgt-livechess-url"),s="true"==localStorage.getItem("dgt-speech-announce-all-moves"),r="true"==localStorage.getItem("dgt-verbose"),i=localStorage.getItem("dgt-speech-announce-move-format")?localStorage.getItem("dgt-speech-announce-move-format"):"san",a="true"==localStorage.getItem("dgt-speech-synthesis"),c=localStorage.getItem("dgt-speech-voice");let h={K:"King",Q:"Queen",R:"Rook",B:"Bishop",N:"Knight",P:"Pawn",x:"Takes","+":"Check","#":"Checkmate","(=)":"Game ends in draw","O-O-O":"Castles queenside","O-O":"Castles kingside",white:"White",black:"Black","wins by":"wins by",timeout:"timeout",resignation:"resignation",illegal:"illegal",move:"move"};try{JSON.parse(localStorage.getItem("dgt-speech-keywords")).K.length>0?h=JSON.parse(localStorage.getItem("dgt-speech-keywords")):console.warn("JSON Object for Speech Keywords seems incomplete. Using English default.")}catch(e){console.error("Invalid JSON Object for Speech Keywords. Using English default. "+Error(e).message)}const l=new Date;let u,d="",m="";const w=new Map,k=new Map,b=new Map,v=new Map;let y={connected:!1,lastEvent:l.getTime()};const S=["white","black","K","Q","R","B","N","P","x","+","#","(=)","O-O-O","O-O","wins by","timeout","resignation","illegal","move"];let O,R,I=V.fromSetup({board:p.default(),pockets:void 0,turn:"white",unmovedRooks:f.corners(),epSquare:void 0,remainingChecks:void 0,halfmoves:0,fullmoves:1}).unwrap(),A="",M=Array(),N=!1,T="0";const B={id:2,call:"subscribe",param:{feed:"eboardevent",id:1,param:{serialnr:""}}};let P,$;function x(e=0){return new Promise((t=>setTimeout(t,e)))}async function _(){r&&console.log("connectToEventStream - About to call /api/stream/event");const t=await fetch("/api/stream/event",{headers:{Authorization:"Bearer "+e}}),o=t.body.getReader(),n=new TextDecoder;for(;;){const{value:e,done:s}=await o.read();if(s)break;r&&e.length>1&&console.log("connectToEventStream - Chunk received",n.decode(e)),y={connected:!0,lastEvent:l.getTime()};const i=e?n.decode(e).split("\n"):[];for(let e=0;e<i.length;e++)if(i[e].length>2)try{const o=JSON.parse(i[e]);if("gameStart"==o.type){r&&console.log("connectToEventStream - gameStart event arrived. GameId: "+o.game.id);try{L(o.game.id)}catch(e){console.error("connectToEventStream - Failed to connect to game stream. "+Error(e).message)}}else"challenge"==o.type||"gameFinish"==o.type||t.status>=400&&console.warn("connectToEventStream - "+o.error)}catch(e){console.error("connectToEventStream - Unable to parse JSON or Unexpected error. "+Error(e).message)}else r&&console.log("*")}console.warn("connectToEventStream - Event Stream ended by server"),y={connected:!1,lastEvent:l.getTime()}}async function L(t){r&&console.log("connectToGameStream - About to call /api/board/game/stream/"+t);const o=await fetch("/api/board/game/stream/"+t,{headers:{Authorization:"Bearer "+e}}),n=o.body.getReader(),s=new TextDecoder;for(;n;){const{value:e,done:i}=await n.read();if(i)break;r&&e.length>1&&console.log("connectToGameStream - board game stream received:",s.decode(e)),b.set(t,{connected:!0,lastEvent:l.getTime()});const a=s.decode(e).split("\n");for(let e=0;e<a.length;e++)if(a[e].length>2)try{const n=JSON.parse(a[e]);"gameFull"==n.type?(r||console.clear(),w.set(t,n),k.set(t,n.state),F(t,n),z(t),K()):"gameState"==n.type?(r||console.clear(),G(t,k.get(t),n),k.set(t,n),t==d?z(t):r&&console.log("connectToGameStream - State received was not for current game.")):"chatLine"==n.type||o.status>=400&&console.log("connectToGameStream - "+n.error)}catch(e){console.error("connectToGameStream - No valid game data or Unexpected error. "+Error(e).message)}else r&&console.log(":")}console.warn("connectToGameStream - Game "+t+" Stream ended."),b.set(t,{connected:!1,lastEvent:l.getTime()})}function D(e){const t=(e,t=2)=>`00${e}`.slice(-t);return t(e/36e5|0)+":"+t(e%36e5/6e4|0)+":"+t(e%6e4/1e3|0)}async function K(){const e=function(){var e,t;const o=[],n=Array.from(b.keys());for(let s=0;s<n.length;s++)if((null===(e=b.get(n[s]))||void 0===e?void 0:e.connected)&&"started"==(null===(t=k.get(n[s]))||void 0===t?void 0:t.status)){const e=w.get(n[s]),t=U(n[s]),r=e.black.id==u.id?(null!==e.white.title?e.white.title:"@")+" "+e.white.name:(null!==e.black.title?e.black.title:"@")+" "+e.black.name;o.push({gameId:e.id,versus:r,"vs rating":e.black.id==u.id?e.white.rating:e.black.rating,"game rating":e.variant.short+" "+(e.rated?"rated":"unrated"),Timer:e.speed+" "+(null!==e.clock?String(e.clock.initial/6e4)+"'+"+String(e.clock.increment/1e3)+"''":"∞"),"Last Move":t.player+" "+t.move+" by "+t.by})}return o}();if(0==e.length)console.log("No started playable games, challenges or games are disconnected. Please start a new game or fix connection.");else{e.length>1&&(console.warn("Multiple active games detected. Current game will be selected based on board position."),console.table(e));for(let e=0;e<10&&void 0===$;e++)await x(1e3);r&&console.log(`LiveChess FEN:        ${$}`);let t=-1;for(let o=0;o<e.length;o++){const n=he(v.get(e[o].gameId).board);r&&console.log(`GameId: ${e[o].gameId} FEN: ${n}`),n==$&&(t=o)}-1==t?(console.error("Position on board does not match any ongoing game."),k.has(d)&&b.get(d).connected&&"started"==k.get(d).status?r&&console.log("chooseCurrentGame - Board will remain attached to current game. currentGameId: "+d):(console.warn("Fix position and reload or start a new game. Automatically retrying in 5 seconds..."),await x(5e3),K())):d!=e[Number(t)].gameId?(r&&console.log("chooseCurrentGame - Position matched to gameId: "+e[Number(t)].gameId),d=e[Number(t)].gameId,function(){r||(o.innerHTML="");m=u.id==w.get(d).white.id?"white":"black";j(v.get(d))}(),console.log("Active game updated. currentGameId: "+d)):r&&console.log("chooseCurrentGame - Board will remain attached to current game. currentGameId: "+d)}}function F(e,t){try{let o="rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";"startpos"!=t.initialFen&&(o=t.initialFen);const n=ae(o).unwrap(),s=V.fromSetup(n).unwrap(),i=t.state.moves.split(" ");for(let e=0;e<i.length;e++)if(""!=i[e]){const t=C(i[e]),o=s.normalizeMove(t);o&&s.isLegal(o)&&s.play(o)}v.set(e,s),r&&console.log(`initializeChessBoard - New Board for gameId: ${e}`),r&&console.log(ge(s.board)),r&&console.log(s.turn+"'s turn")}catch(e){console.error(`initializeChessBoard - Error: ${e.message}`)}}function G(e,t,o){try{const n=v.get(e);if(n){let s;s=t.moves?o.moves.substring(t.moves.length,o.moves.length):o.moves;const i=s.split(" ");for(let e=0;e<i.length;e++)if(""!=i[e]){const t=C(i[e]),o=n.normalizeMove(t);o&&n.isLegal(o)&&(O="black"==n.turn?{player:"black",move:me(n,o),by:w.get(d).black.id}:{player:"white",move:me(n,o),by:w.get(d).white.id},n.play(o))}r&&console.log(`updateChessBoard - Updated Board for gameId: ${e}`),r&&console.log(ge(n.board)),r&&console.log(n.turn+"'s turn")}}catch(e){console.error(`updateChessBoard - Error: ${e.message}`)}}function z(e){if(k.has(e)&&w.has(e)){const t=w.get(e),o=k.get(e),n=U(e);console.log("");const r=`<table class="dgt-table"><tr><th> - </th><th>Title</th><th>Username</th><th>Rating</th><th>Timer</th><th>Last Move</th><th>gameId: ${t.id}</th></tr><tr><td>White</td><td>${null!==t.white.title?t.white.title:"@"}</td><td>${t.white.name}</td><td>${t.white.rating}</td><td>${D(o.wtime)}</td><td>${"white"==n.player?n.move:"?"}</td><td>${t.speed+" "+(null!==t.clock?String(t.clock.initial/6e4)+"'+"+String(t.clock.increment/1e3)+"''":"∞")}</td></tr><tr><td>Black</td><td>${null!==t.black.title?t.black.title:"@"}</td><td>${t.black.name}</td><td>${t.black.rating}</td><td>${D(o.btime)}</td><td>${"black"==n.player?n.move:"?"}</td><td>Status: ${o.status}</td></tr>`;switch(console.log(r),o.status){case"started":(u.id!==n.by||s)&&J(n);break;case"outoftime":Q(h[o.winner],"flag",h[o.winner]+" "+h["wins by"]+" "+h.timeout);break;case"resign":Q(h[o.winner],"resign",h[o.winner]+" "+h["wins by"]+" "+h.resignation);break;case"mate":Q(h[n.player],"mate",h[n.player]+" "+h["wins by"]+" "+h["#"]);break;case"draw":Q("draw","draw",h["(=)"]);break;default:console.log(`Unknown status received: ${o.status}`)}}}function U(e){if(k.has(e)&&w.has(e)){const t=w.get(e),o=k.get(e);if(String(o.moves).length>1){const e=o.moves.split(" ");return r&&console.log(`getLastUCIMove - ${e.length} moves detected. Last one: ${e[e.length-1]}`),e.length%2==0?{player:"black",move:e[e.length-1],by:t.black.id}:{player:"white",move:e[e.length-1],by:t.white.id}}}return r&&console.log("getLastUCIMove - No moves."),{player:"none",move:"none",by:"none"}}function J(e){let t;i&&"san"==i.toLowerCase()&&O?(t=O.move,ee(Y(Z(O.move)))):(t=e.move,ee(Z(e.move))),"white"==e.player?console.log('<span class="dgt-white-move">'+t+" by White</span>"):console.log('<span class="dgt-black-move">'+t+" by Black</span>")}function Q(e,t,o){console.log("  "+t+"  -  "+o),ee(Y(o.toLowerCase()))}function W(){"white"==m?console.warn("  [ X X ]  - Illegal move by white."):console.warn("  [ X X ]  - Illegal move by black."),ee(Y("illegal move"))}async function H(){let e;R=new WebSocket(n||"ws://localhost:1982/api/v1.0"),R.onopen=()=>{N=!0,r&&console.info("Websocket onopen: Connection to LiveChess was sucessful"),R.send('{"id":1,"call":"eboards"}')},R.onerror=()=>{console.error("Websocket ERROR: ")},R.onclose=()=>{console.error("Websocket to LiveChess disconnected"),T="0",N=!1,A=""},R.onmessage=async t=>{r&&console.info("Websocket onmessage with data:"+t.data);const o=JSON.parse(t.data);if("feed"==o.response&&o.param.board&&($=o.param.board),"call"==o.response&&"1"==o.id)M=o.param,console.table(M),r&&console.info(M[0].serialnr),T=M[0].serialnr,B.param.param.serialnr=T,r&&console.info("Websocket onmessage[call]: board serial number updated to: "+T),r&&console.info("Webscoket - about to send the following message \n"+JSON.stringify(B)),R.send(JSON.stringify(B)),"ACTIVE"!=M[0].state&&"INACTIVE"!=M[0].state&&console.error(`Board with serial ${T} is not properly connected. Please fix`),k.has(d)&&b.get(d).connected&&"started"==k.get(d).status&&d!=A&&(r&&console.info("There is a game in progress, calling liveChessBoardSetUp..."),j(v.get(d)));else if("feed"==o.response&&o.param.san){r&&console.info("onmessage - san: "+o.param.san);const t=U(d);if(0==o.param.san.length)r&&console.info("onmessage - san is empty");else if(void 0!==P&&JSON.stringify(P.san)==JSON.stringify(o.param.san))r&&console.info("onmessage - Duplicate position and san move received and will be ignored");else{let n=1;if(void 0!==P&&(n=o.param.san.length-P.san.length),n>1&&(r&&console.warn("onmessage - Multiple moves received on single message - movesToProcess: "+n),I.turn==m)){const e=P;if(await x(2500),JSON.stringify(P.san)!=JSON.stringify(e.san))return void console.warn("onmessage - Invalid moved quarantined and not sent to lichess. Newer move interpretration received.");if(void 0!==P&&JSON.stringify(P.san)==JSON.stringify(o.param.san))return void(r&&console.info("onmessage - Duplicate position and san move received after quarantine and will be ignored"))}P=o.param;for(let s=n;s>0;s--){e=String(o.param.san[o.param.san.length-s]).trim(),r&&console.info("onmessage - SANMove = "+e);const n=fe(I,e);n&&I.isLegal(n)?(r&&console.info("onmessage - Move is legal"),I.turn==m?(r&&console.info("onmessage - Valid Move played: "+e),await X(n),O={player:I.turn,move:e,by:u.id},I.play(n)):te(t.move,n)?(r&&console.info("onmessage - Valid Adjustment: "+e),I.play(n)):(console.error("onmessage - Invalid Adjustment was made"),te(t.move,n)?console.error("onmessage - Played move has not been received by Lichess."):(console.error("onmessage - Expected:"+t.move+" by "+t.player),console.error("onmessage - Detected:"+q(n)+" by "+I.turn)),W(),await x(1e3),J(t))):(r&&console.info("onmessage - Move is NOT legal"),t.move==e?r&&console.warn("onmessage - Move received is the same as the last move played: "+e):e.startsWith("O-")?r&&console.warn("onmessage - Castling may be duplicated as the last move played: "+e):(r&&console.error("onmessage - invalidMove - Position Mismatch between DGT Board and internal in-memory Board. SAN: "+e),W(),console.info(ge(I.board))))}}}else"feed"==o.response&&r&&console.info("onmessage - No move received on feed event.")}}async function j(e){var t,o,n,s;const i={id:3,call:"call",param:{id:1,method:"setup",param:{fen:[he((t=e.toSetup()).board,o)+(t.pockets?`[${s=t.pockets,le(s.white).toUpperCase()+le(s.black)}]`:""),t.turn[0],ue(t.board,t.unmovedRooks,o),g(t.epSquare)?E(t.epSquare):"-",...t.remainingChecks?[(n=t.remainingChecks,`${n.white}+${n.black}`)]:[],...(null==o?void 0:o.epd)?[]:[Math.max(0,Math.min(t.halfmoves,9999)),Math.max(1,Math.min(t.fullmoves,9999))]].join(" ")}}};r&&console.log("setUp -: "+JSON.stringify(i)),N&&"0"!=T?(R.send(JSON.stringify(i)),A=d,I=e.clone(),P={board:"",san:[]},r&&console.log("setUp -: Sent.")):(console.error("WebSocket is not open or is not ready to receive setup - cannot send setup command."),console.error(`isLiveChessConnected: ${N} - DGTgameId: ${A} - currentSerialnr: ${T} - currentGameId: ${d}`))}async function X(t){for(;!k.has(d)||!b.get(d).connected||"started"!=k.get(d).status;)console.warn("validateAndSendBoardMove - Cannot send move while disconnected. Re-Trying in 2 seconds..."),await x(2e3),await K();const o=q(t);!function(t,o){if(o.length>1){const n=`/api/board/game/${t}/move/${o}?offeringDraw=false`;r&&console.log("sendMove - About to call "+n),fetch(n,{method:"POST",headers:{Authorization:"Bearer "+e}}).then((e=>{try{200==e.status||201==e.status?r&&console.log("sendMove - Move successfully sent."):e.json().then((e=>{console.error("sendMove - Failed to send move. "+e.error)}))}catch(e){console.error("sendMove - Unexpected error. "+e)}})).catch((e=>{console.error("sendMove - Error. "+e.message)}))}}(d,o)}function Y(e){let t=e;for(let e=0;e<S.length;e++)try{t=t.replace(S[e]," "+h[S[e]].toLowerCase()+" ")}catch(t){console.error(`raplaceKeywords - Error replacing keyword. ${S[e]} . ${Error(t).message}`)}return t}function Z(e){let t="";for(const o of e)Number.isInteger(+o)?t+=` ${o} `:t+=o;return t}async function ee(e){if(r&&console.log("TTS - for text: "+e),!a)return;const t=new SpeechSynthesisUtterance(e),o=c,n=speechSynthesis.getVoices();for(let e=0;e<n.length;e++)if(n[e].name===o){t.voice=n[e];break}t.rate=.6,speechSynthesis.speak(t)}function te(e,t){try{const o=q(t);if(r&&console.log(`Comparing ${e} with ${o}`),e==o)return!0;r&&console.log("Moves look different. Check if this is a castling mismatch.");const n=I.castlingSide(t);if(e.length>2&&n&&e.startsWith(o.substring(0,2))&&(e.startsWith("e1g1")||e.startsWith("e1c1")||e.startsWith("e8c8")||e.startsWith("e8g8")))return!0}catch(e){console.warn("compareMoves - "+Error(e).message)}return!1}!function(e,t,o){function n(n){console["old"+n]=console[n],console[n]=function(){return new Promise((s=>{let i="";for(let e=0;e<arguments.length;e++){const t=arguments[e];"*"==t||":"==t?i+=t:(i+='</br><span class="log-'+typeof t+" log-"+n+'">',i+="object"==typeof t?JSON.stringify(t):t,i+="</span>&nbsp;")}const a=r?-1048576:-8192;let c=!1;o&&(c=t.scrollHeight-t.clientHeight<=t.scrollTop+1),e.innerHTML=e.innerHTML.slice(a)+i,c&&(t.scrollTop=t.scrollHeight-t.clientHeight);try{console["old"+n].apply(void 0,arguments)}catch(e){console.olderror.apply(void 0,["Error when logging"])}s()}))}}e.innerHTML="",n("log"),n("debug"),n("warn"),n("error"),n("info"),n("table")}(o,t,!0),console.log(""),console.log("      ,....,                      ▄████▄   ██░ ██ ▓█████   ██████   ██████     "),console.log("     ,::::::<                    ▒██▀ ▀█  ▓██░ ██▒▓█   ▀ ▒██    ▒ ▒██    ▒     "),console.log('    ,::/^\\"``.                   ▒▓█    ▄ ▒██▀▀██░▒███   ░ ▓██▄   ░ ▓██▄       '),console.log("   ,::/, `   e`.                 ▒▓▓▄ ▄██▒░▓█ ░██ ▒▓█  ▄   ▒   ██▒  ▒   ██▒    "),console.log("  ,::; |        '.               ▒ ▓███▀ ░░▓█▒░██▓░▒████▒▒██████▒▒▒██████▒▒    "),console.log("  ,::|  ___,-.  c)               ░ ░▒ ▒  ░ ▒ ░░▒░▒░░ ▒░ ░▒ ▒▓▒ ▒ ░▒ ▒▓▒ ▒ ░    "),console.log("  ;::|     \\   '-'               ░  ▒    ▒ ░▒░ ░ ░ ░  ░░ ░▒  ░ ░░ ░▒  ░ ░      "),console.log("  ;::|      \\                    ░         ░  ░░ ░   ░   ░  ░  ░  ░  ░  ░      "),console.log("  ;::|   _.=`\\                   ░ ░       ░  ░  ░   ░  ░      ░        ░      "),console.log("  `;:|.=` _.=`\\                  ░                                             "),console.log("    '|_.=`   __\\                                                               "),console.log("    `\\_..==`` /                 Lichess.org - DGT Electronic Board Connector   "),console.log("     .'.___.-'.                Developed by Andres Cavallin and Juan Cavallin  "),console.log("    /          \\                                  v1.0.7                       "),console.log("jgs('--......--')                                                             "),console.log("   /'--......--'\\                                                              "),console.log('   `"--......--"`                                                             '),r&&console.log("getProfile - About to call /api/account"),fetch("/api/account",{headers:{Authorization:"Bearer "+e}}).then((e=>e.json())).then((e=>{u=e,r&&console.log("/api/account Response:"+JSON.stringify(e)),console.log("┌─────────────────────────────────────────────────────┐"),console.log("│ "+(void 0===e.title?"":e.title)+" "+e.username),console.table(e.perfs)})).catch((e=>{console.error("getProfile - Error. "+e.message)})),async function(){for(let e=0;e<20;e++){_(),await x(5e3);do{await x(5e3);for(const[e,t]of b)t.connected||"started"!=k.get(e).status||(r&&console.log(`Started game is disconnected. Attempting reconnection for gameId: ${e}`),L(e))}while(y.connected);console.warn("No connection to event stream. Attempting re-connection. Attempt: "+e)}console.error("No connection to event stream after maximum number of attempts 20. Reload page to start again.")}(),async function(){H();for(let e=0;e<20;e++){do{await x(5e3)}while("0"!=T&&N);N?(console.warn("Connection to DGT Live Chess is Fine but no board is detected. Attempting re-connection. Attempt: "+e),R.send('{"id":1,"call":"eboards"}')):(console.warn("No connection to DGT Live Chess. Attempting re-connection. Attempt: "+e),H())}console.error("No connection to DGT Live Chess after maximum number of attempts (20). Reload page to start again.")}()}}}();
